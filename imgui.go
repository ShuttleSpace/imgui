/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: imgui.i

package imgui

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


#if (SIZE_MAX) == (UINT64_MAX)
  typedef long long intgo;
  typedef unsigned long long uintgo;
#else
  typedef int intgo;
  typedef unsigned int uintgo;
#endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



#cgo LDFLAGS: -lsupc++
#cgo windows LDFLAGS: -static

extern void cgoRenderDrawLists(void* drawdata);

typedef _gostring_ swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef void* swig_type_14;
typedef void* swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef _gostring_ swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef _gostring_ swig_type_36;
typedef _gostring_ swig_type_37;
typedef _gostring_ swig_type_38;
typedef _gostring_ swig_type_39;
typedef _gostring_ swig_type_40;
typedef _gostring_ swig_type_41;
typedef _gostring_ swig_type_42;
typedef _gostring_ swig_type_43;
typedef _gostring_ swig_type_44;
typedef _gostring_ swig_type_45;
typedef _gostring_ swig_type_46;
typedef _gostring_ swig_type_47;
typedef _gostring_ swig_type_48;
typedef _gostring_ swig_type_49;
typedef _gostring_ swig_type_50;
typedef _gostring_ swig_type_51;
typedef _gostring_ swig_type_52;
typedef _gostring_ swig_type_53;
typedef void* swig_type_54;
typedef _gostring_ swig_type_55;
typedef void* swig_type_56;
typedef _gostring_ swig_type_57;
typedef _gostring_ swig_type_58;
typedef _gostring_ swig_type_59;
typedef _gostring_ swig_type_60;
typedef _gostring_ swig_type_61;
typedef _gostring_ swig_type_62;
typedef _gostring_ swig_type_63;
typedef _gostring_ swig_type_64;
typedef _gostring_ swig_type_65;
typedef _gostring_ swig_type_66;
typedef _gostring_ swig_type_67;
typedef _gostring_ swig_type_68;
typedef _gostring_ swig_type_69;
typedef _gostring_ swig_type_70;
typedef _gostring_ swig_type_71;
typedef _gostring_ swig_type_72;
typedef _gostring_ swig_type_73;
typedef _gostring_ swig_type_74;
typedef _gostring_ swig_type_75;
typedef _gostring_ swig_type_76;
typedef _gostring_ swig_type_77;
typedef _gostring_ swig_type_78;
typedef _gostring_ swig_type_79;
typedef _gostring_ swig_type_80;
typedef _gostring_ swig_type_81;
typedef _gostring_ swig_type_82;
typedef _gostring_ swig_type_83;
typedef _gostring_ swig_type_84;
typedef _gostring_ swig_type_85;
typedef _gostring_ swig_type_86;
typedef _gostring_ swig_type_87;
typedef _gostring_ swig_type_88;
typedef _gostring_ swig_type_89;
typedef _gostring_ swig_type_90;
typedef _gostring_ swig_type_91;
typedef _gostring_ swig_type_92;
typedef _gostring_ swig_type_93;
typedef _gostring_ swig_type_94;
typedef _gostring_ swig_type_95;
typedef _gostring_ swig_type_96;
typedef _gostring_ swig_type_97;
typedef _gostring_ swig_type_98;
typedef _gostring_ swig_type_99;
typedef _gostring_ swig_type_100;
typedef _gostring_ swig_type_101;
typedef _gostring_ swig_type_102;
typedef _gostring_ swig_type_103;
typedef _gostring_ swig_type_104;
typedef _gostring_ swig_type_105;
typedef _gostring_ swig_type_106;
typedef _gostring_ swig_type_107;
typedef _gostring_ swig_type_108;
typedef _gostring_ swig_type_109;
typedef _gostring_ swig_type_110;
typedef _gostring_ swig_type_111;
typedef _gostring_ swig_type_112;
typedef _gostring_ swig_type_113;
typedef _gostring_ swig_type_114;
typedef _gostring_ swig_type_115;
typedef _gostring_ swig_type_116;
typedef _gostring_ swig_type_117;
typedef _gostring_ swig_type_118;
typedef _gostring_ swig_type_119;
typedef _gostring_ swig_type_120;
typedef _gostring_ swig_type_121;
typedef _gostring_ swig_type_122;
typedef _gostring_ swig_type_123;
typedef _gostring_ swig_type_124;
typedef _gostring_ swig_type_125;
typedef _gostring_ swig_type_126;
typedef _gostring_ swig_type_127;
typedef _gostring_ swig_type_128;
typedef _gostring_ swig_type_129;
typedef _gostring_ swig_type_130;
typedef _gostring_ swig_type_131;
typedef _gostring_ swig_type_132;
typedef _gostring_ swig_type_133;
typedef _gostring_ swig_type_134;
typedef _gostring_ swig_type_135;
typedef _gostring_ swig_type_136;
typedef _gostring_ swig_type_137;
typedef _gostring_ swig_type_138;
typedef _gostring_ swig_type_139;
typedef _gostring_ swig_type_140;
typedef _gostring_ swig_type_141;
typedef _gostring_ swig_type_142;
typedef _gostring_ swig_type_143;
typedef _gostring_ swig_type_144;
typedef _gostring_ swig_type_145;
typedef _gostring_ swig_type_146;
typedef _gostring_ swig_type_147;
typedef _gostring_ swig_type_148;
typedef _gostring_ swig_type_149;
typedef _gostring_ swig_type_150;
typedef _gostring_ swig_type_151;
typedef _gostring_ swig_type_152;
typedef _gostring_ swig_type_153;
typedef _gostring_ swig_type_154;
typedef _gostring_ swig_type_155;
typedef _gostring_ swig_type_156;
typedef _gostring_ swig_type_157;
typedef _gostring_ swig_type_158;
typedef _gostring_ swig_type_159;
typedef _gostring_ swig_type_160;
typedef _gostring_ swig_type_161;
typedef _gostring_ swig_type_162;
typedef _gostring_ swig_type_163;
typedef _gostring_ swig_type_164;
typedef _gostring_ swig_type_165;
typedef _gostring_ swig_type_166;
typedef _gostring_ swig_type_167;
typedef _gostring_ swig_type_168;
typedef _gostring_ swig_type_169;
typedef _gostring_ swig_type_170;
typedef _gostring_ swig_type_171;
typedef _gostring_ swig_type_172;
typedef _gostring_ swig_type_173;
typedef _gostring_ swig_type_174;
typedef _gostring_ swig_type_175;
typedef _gostring_ swig_type_176;
typedef _gostring_ swig_type_177;
typedef _gostring_ swig_type_178;
typedef _gostring_ swig_type_179;
typedef _gostring_ swig_type_180;
typedef _gostring_ swig_type_181;
typedef _gostring_ swig_type_182;
typedef _gostring_ swig_type_183;
typedef _gostring_ swig_type_184;
typedef _gostring_ swig_type_185;
typedef _gostring_ swig_type_186;
typedef _gostring_ swig_type_187;
typedef _gostring_ swig_type_188;
typedef _gostring_ swig_type_189;
typedef _gostring_ swig_type_190;
typedef _gostring_ swig_type_191;
typedef _gostring_ swig_type_192;
typedef _gostring_ swig_type_193;
typedef _gostring_ swig_type_194;
typedef _gostring_ swig_type_195;
typedef _gostring_ swig_type_196;
typedef _gostring_ swig_type_197;
typedef _gostring_ swig_type_198;
typedef _gostring_ swig_type_199;
typedef _gostring_ swig_type_200;
typedef _gostring_ swig_type_201;
typedef _gostring_ swig_type_202;
typedef _gostring_ swig_type_203;
typedef _gostring_ swig_type_204;
typedef _gostring_ swig_type_205;
typedef _gostring_ swig_type_206;
typedef _gostring_ swig_type_207;
typedef long long swig_type_208;
typedef void* swig_type_209;
typedef _gostring_ swig_type_210;
typedef _gostring_ swig_type_211;
typedef long long swig_type_212;
typedef void* swig_type_213;
typedef _gostring_ swig_type_214;
typedef _gostring_ swig_type_215;
typedef long long swig_type_216;
typedef _gostring_ swig_type_217;
typedef _gostring_ swig_type_218;
typedef long long swig_type_219;
typedef _gostring_ swig_type_220;
typedef _gostring_ swig_type_221;
typedef long long swig_type_222;
typedef void* swig_type_223;
typedef _gostring_ swig_type_224;
typedef _gostring_ swig_type_225;
typedef long long swig_type_226;
typedef void* swig_type_227;
typedef _gostring_ swig_type_228;
typedef _gostring_ swig_type_229;
typedef long long swig_type_230;
typedef _gostring_ swig_type_231;
typedef _gostring_ swig_type_232;
typedef long long swig_type_233;
typedef _gostring_ swig_type_234;
typedef _gostring_ swig_type_235;
typedef long long swig_type_236;
typedef _gostring_ swig_type_237;
typedef _gostring_ swig_type_238;
typedef _gostring_ swig_type_239;
typedef _gostring_ swig_type_240;
typedef _gostring_ swig_type_241;
typedef _gostring_ swig_type_242;
typedef _gostring_ swig_type_243;
typedef _gostring_ swig_type_244;
typedef _gostring_ swig_type_245;
typedef _gostring_ swig_type_246;
typedef _gostring_ swig_type_247;
typedef _gostring_ swig_type_248;
typedef _gostring_ swig_type_249;
typedef _gostring_ swig_type_250;
typedef _gostring_ swig_type_251;
typedef _gostring_ swig_type_252;
typedef _gostring_ swig_type_253;
typedef _gostring_ swig_type_254;
typedef _gostring_ swig_type_255;
typedef _gostring_ swig_type_256;
typedef _gostring_ swig_type_257;
typedef _gostring_ swig_type_258;
typedef _gostring_ swig_type_259;
typedef _gostring_ swig_type_260;
typedef _gostring_ swig_type_261;
typedef _gostring_ swig_type_262;
typedef _gostring_ swig_type_263;
typedef _gostring_ swig_type_264;
typedef _gostring_ swig_type_265;
typedef _gostring_ swig_type_266;
typedef _gostring_ swig_type_267;
typedef _gostring_ swig_type_268;
typedef _gostring_ swig_type_269;
typedef _gostring_ swig_type_270;
typedef _gostring_ swig_type_271;
typedef _gostring_ swig_type_272;
typedef _gostring_ swig_type_273;
typedef _gostring_ swig_type_274;
typedef _gostring_ swig_type_275;
typedef _gostring_ swig_type_276;
typedef _gostring_ swig_type_277;
typedef _gostring_ swig_type_278;
typedef _gostring_ swig_type_279;
typedef _gostring_ swig_type_280;
typedef _gostring_ swig_type_281;
typedef _gostring_ swig_type_282;
typedef _gostring_ swig_type_283;
typedef _gostring_ swig_type_284;
typedef _gostring_ swig_type_285;
typedef _gostring_ swig_type_286;
typedef _gostring_ swig_type_287;
typedef _gostring_ swig_type_288;
typedef _gostring_ swig_type_289;
typedef _gostring_ swig_type_290;
typedef _gostring_ swig_type_291;
typedef _gostring_ swig_type_292;
typedef _gostring_ swig_type_293;
typedef _gostring_ swig_type_294;
typedef _gostring_ swig_type_295;
typedef _gostring_ swig_type_296;
typedef _gostring_ swig_type_297;
typedef _gostring_ swig_type_298;
typedef _gostring_ swig_type_299;
typedef _gostring_ swig_type_300;
typedef _gostring_ swig_type_301;
typedef _gostring_ swig_type_302;
typedef _gostring_ swig_type_303;
typedef _gostring_ swig_type_304;
typedef _gostring_ swig_type_305;
typedef _gostring_ swig_type_306;
typedef _gostring_ swig_type_307;
typedef _gostring_ swig_type_308;
typedef _gostring_ swig_type_309;
typedef _gostring_ swig_type_310;
typedef _gostring_ swig_type_311;
typedef _gostring_ swig_type_312;
typedef _gostring_ swig_type_313;
typedef _gostring_ swig_type_314;
typedef _gostring_ swig_type_315;
typedef _gostring_ swig_type_316;
typedef _gostring_ swig_type_317;
typedef _gostring_ swig_type_318;
typedef _gostring_ swig_type_319;
typedef _gostring_ swig_type_320;
typedef _gostring_ swig_type_321;
typedef void* swig_type_322;
typedef _gostring_ swig_type_323;
typedef void* swig_type_324;
typedef _gostring_ swig_type_325;
typedef _gostring_ swig_type_326;
typedef _gostring_ swig_type_327;
typedef _gostring_ swig_type_328;
typedef _gostring_ swig_type_329;
typedef _gostring_ swig_type_330;
typedef _gostring_ swig_type_331;
typedef _gostring_ swig_type_332;
typedef _gostring_ swig_type_333;
typedef _gostring_ swig_type_334;
typedef _gostring_ swig_type_335;
typedef _gostring_ swig_type_336;
typedef _gostring_ swig_type_337;
typedef _gostring_ swig_type_338;
typedef _gostring_ swig_type_339;
typedef _gostring_ swig_type_340;
typedef _gostring_ swig_type_341;
typedef void* swig_type_342;
typedef _gostring_ swig_type_343;
typedef _gostring_ swig_type_344;
typedef void* swig_type_345;
typedef _gostring_ swig_type_346;
typedef _gostring_ swig_type_347;
typedef void* swig_type_348;
typedef _gostring_ swig_type_349;
typedef _gostring_ swig_type_350;
typedef void* swig_type_351;
typedef _gostring_ swig_type_352;
typedef _gostring_ swig_type_353;
typedef void* swig_type_354;
typedef _gostring_ swig_type_355;
typedef void* swig_type_356;
typedef _gostring_ swig_type_357;
typedef _gostring_ swig_type_358;
typedef _gostring_ swig_type_359;
typedef _gostring_ swig_type_360;
typedef _gostring_ swig_type_361;
typedef _gostring_ swig_type_362;
typedef _gostring_ swig_type_363;
typedef _gostring_ swig_type_364;
typedef _gostring_ swig_type_365;
typedef _gostring_ swig_type_366;
typedef _gostring_ swig_type_367;
typedef _gostring_ swig_type_368;
typedef _gostring_ swig_type_369;
typedef void* swig_type_370;
typedef _gostring_ swig_type_371;
typedef _gostring_ swig_type_372;
typedef void* swig_type_373;
typedef _gostring_ swig_type_374;
typedef _gostring_ swig_type_375;
typedef void* swig_type_376;
typedef _gostring_ swig_type_377;
typedef _gostring_ swig_type_378;
typedef void* swig_type_379;
typedef _gostring_ swig_type_380;
typedef _gostring_ swig_type_381;
typedef void* swig_type_382;
typedef _gostring_ swig_type_383;
typedef void* swig_type_384;
typedef _gostring_ swig_type_385;
typedef _gostring_ swig_type_386;
typedef _gostring_ swig_type_387;
typedef _gostring_ swig_type_388;
typedef _gostring_ swig_type_389;
typedef _gostring_ swig_type_390;
typedef _gostring_ swig_type_391;
typedef _gostring_ swig_type_392;
typedef _gostring_ swig_type_393;
typedef _gostring_ swig_type_394;
typedef _gostring_ swig_type_395;
typedef _gostring_ swig_type_396;
typedef _gostring_ swig_type_397;
typedef _gostring_ swig_type_398;
typedef _gostring_ swig_type_399;
typedef _gostring_ swig_type_400;
typedef _gostring_ swig_type_401;
typedef _gostring_ swig_type_402;
typedef _gostring_ swig_type_403;
typedef _gostring_ swig_type_404;
typedef _gostring_ swig_type_405;
typedef _gostring_ swig_type_406;
typedef _gostring_ swig_type_407;
typedef _gostring_ swig_type_408;
typedef _gostring_ swig_type_409;
typedef _gostring_ swig_type_410;
typedef _gostring_ swig_type_411;
typedef _gostring_ swig_type_412;
typedef _gostring_ swig_type_413;
typedef _gostring_ swig_type_414;
typedef _gostring_ swig_type_415;
typedef _gostring_ swig_type_416;
typedef _gostring_ swig_type_417;
typedef _gostring_ swig_type_418;
typedef _gostring_ swig_type_419;
typedef _gostring_ swig_type_420;
typedef _gostring_ swig_type_421;
typedef _gostring_ swig_type_422;
typedef _gostring_ swig_type_423;
typedef long long swig_type_424;
typedef _gostring_ swig_type_425;
typedef long long swig_type_426;
typedef _gostring_ swig_type_427;
typedef _gostring_ swig_type_428;
typedef _gostring_ swig_type_429;
typedef _gostring_ swig_type_430;
typedef _gostring_ swig_type_431;
typedef _gostring_ swig_type_432;
typedef _gostring_ swig_type_433;
typedef _gostring_ swig_type_434;
typedef _gostring_ swig_type_435;
typedef _gostring_ swig_type_436;
typedef _gostring_ swig_type_437;
typedef _gostring_ swig_type_438;
typedef _gostring_ swig_type_439;
typedef _gostring_ swig_type_440;
typedef long long swig_type_441;
typedef _gostring_ swig_type_442;
typedef _gostring_ swig_type_443;
typedef _gostring_ swig_type_444;
typedef _gostring_ swig_type_445;
typedef void* swig_type_446;
typedef void* swig_type_447;
typedef void* swig_type_448;
typedef void* swig_type_449;
typedef long long swig_type_450;
typedef _gostring_ swig_type_451;
typedef _gostring_ swig_type_452;
typedef _gostring_ swig_type_453;
typedef _gostring_ swig_type_454;
typedef void* swig_type_455;
typedef void* swig_type_456;
typedef void* swig_type_457;
typedef void* swig_type_458;
typedef void* swig_type_459;
typedef void* swig_type_460;
typedef _gostring_ swig_type_461;
typedef _gostring_ swig_type_462;
typedef _gostring_ swig_type_463;
typedef _gostring_ swig_type_464;
typedef _gostring_ swig_type_465;
typedef _gostring_ swig_type_466;
typedef _gostring_ swig_type_467;
typedef _gostring_ swig_type_468;
typedef _gostring_ swig_type_469;
typedef void* swig_type_470;
typedef void* swig_type_471;
typedef _gostring_ swig_type_472;
typedef _gostring_ swig_type_473;
typedef _gostring_ swig_type_474;
typedef _gostring_ swig_type_475;
typedef _gostring_ swig_type_476;
typedef _gostring_ swig_type_477;
typedef _gostring_ swig_type_478;
typedef _gostring_ swig_type_479;
typedef _gostring_ swig_type_480;
typedef _gostring_ swig_type_481;
typedef _gostring_ swig_type_482;
typedef _gostring_ swig_type_483;
typedef void* swig_type_484;
typedef long long swig_type_485;
typedef long long swig_type_486;
typedef long long swig_type_487;
typedef long long swig_type_488;
typedef long long swig_type_489;
typedef long long swig_type_490;
typedef _goslice_ swig_type_491;
typedef _goslice_ swig_type_492;
typedef _gostring_ swig_type_493;
typedef _gostring_ swig_type_494;
typedef _gostring_ swig_type_495;
typedef _gostring_ swig_type_496;
typedef _gostring_ swig_type_497;
typedef _gostring_ swig_type_498;
typedef _gostring_ swig_type_499;
typedef _gostring_ swig_type_500;
typedef _gostring_ swig_type_501;
typedef _gostring_ swig_type_502;
typedef _gostring_ swig_type_503;
typedef _gostring_ swig_type_504;
typedef _gostring_ swig_type_505;
typedef _gostring_ swig_type_506;
typedef _gostring_ swig_type_507;
typedef _gostring_ swig_type_508;
typedef _gostring_ swig_type_509;
typedef _gostring_ swig_type_510;
typedef _gostring_ swig_type_511;
typedef _gostring_ swig_type_512;
typedef _gostring_ swig_type_513;
extern void _wrap_Swig_free(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc(swig_intgo arg1);
extern void _wrap_Vec2_x_set(uintptr_t arg1, float arg2);
extern float _wrap_Vec2_x_get(uintptr_t arg1);
extern void _wrap_Vec2_y_set(uintptr_t arg1, float arg2);
extern float _wrap_Vec2_y_get(uintptr_t arg1);
extern uintptr_t _wrap_new_Vec2__SWIG_0(void);
extern uintptr_t _wrap_new_Vec2__SWIG_1(float arg1, float arg2);
extern void _wrap_delete_Vec2(uintptr_t arg1);
extern void _wrap_Vec4_x_set(uintptr_t arg1, float arg2);
extern float _wrap_Vec4_x_get(uintptr_t arg1);
extern void _wrap_Vec4_y_set(uintptr_t arg1, float arg2);
extern float _wrap_Vec4_y_get(uintptr_t arg1);
extern void _wrap_Vec4_z_set(uintptr_t arg1, float arg2);
extern float _wrap_Vec4_z_get(uintptr_t arg1);
extern void _wrap_Vec4_w_set(uintptr_t arg1, float arg2);
extern float _wrap_Vec4_w_get(uintptr_t arg1);
extern uintptr_t _wrap_new_Vec4__SWIG_0(void);
extern uintptr_t _wrap_new_Vec4__SWIG_1(float arg1, float arg2, float arg3, float arg4);
extern void _wrap_delete_Vec4(uintptr_t arg1);
extern uintptr_t _wrap_CreateContext__SWIG_0(uintptr_t arg1);
extern uintptr_t _wrap_CreateContext__SWIG_1(void);
extern void _wrap_DestroyContext__SWIG_0(uintptr_t arg1);
extern void _wrap_DestroyContext__SWIG_1(void);
extern uintptr_t _wrap_GetCurrentContext(void);
extern void _wrap_SetCurrentContext(uintptr_t arg1);
extern _Bool _wrap_DebugCheckVersionAndDataLayout(swig_type_1 arg1, swig_type_2 arg2, swig_type_3 arg3, swig_type_4 arg4, swig_type_5 arg5, swig_type_6 arg6);
extern uintptr_t _wrap_GetIO(void);
extern uintptr_t _wrap_GetStyle(void);
extern void _wrap_NewFrame(void);
extern void _wrap_EndFrame(void);
extern void _wrap_Render(void);
extern uintptr_t _wrap_GetDrawData(void);
extern void _wrap_StyleColorsDark__SWIG_0(uintptr_t arg1);
extern void _wrap_StyleColorsDark__SWIG_1(void);
extern void _wrap_StyleColorsClassic__SWIG_0(uintptr_t arg1);
extern void _wrap_StyleColorsClassic__SWIG_1(void);
extern void _wrap_StyleColorsLight__SWIG_0(uintptr_t arg1);
extern void _wrap_StyleColorsLight__SWIG_1(void);
extern _Bool _wrap_Begin__SWIG_0(swig_type_7 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_Begin__SWIG_1(swig_type_8 arg1, swig_voidp arg2);
extern _Bool _wrap_Begin__SWIG_2(swig_type_9 arg1);
extern void _wrap_End(void);
extern _Bool _wrap_BeginChild__SWIG_0(swig_type_10 arg1, uintptr_t arg2, _Bool arg3, swig_intgo arg4);
extern _Bool _wrap_BeginChild__SWIG_1(swig_type_11 arg1, uintptr_t arg2, _Bool arg3);
extern _Bool _wrap_BeginChild__SWIG_2(swig_type_12 arg1, uintptr_t arg2);
extern _Bool _wrap_BeginChild__SWIG_3(swig_type_13 arg1);
extern _Bool _wrap_BeginChild__SWIG_4(swig_intgo arg1, uintptr_t arg2, _Bool arg3, swig_intgo arg4);
extern _Bool _wrap_BeginChild__SWIG_5(swig_intgo arg1, uintptr_t arg2, _Bool arg3);
extern _Bool _wrap_BeginChild__SWIG_6(swig_intgo arg1, uintptr_t arg2);
extern _Bool _wrap_BeginChild__SWIG_7(swig_intgo arg1);
extern void _wrap_EndChild(void);
extern _Bool _wrap_IsWindowAppearing(void);
extern _Bool _wrap_IsWindowCollapsed(void);
extern _Bool _wrap_IsWindowFocused__SWIG_0(swig_intgo arg1);
extern _Bool _wrap_IsWindowFocused__SWIG_1(void);
extern _Bool _wrap_IsWindowHovered__SWIG_0(swig_intgo arg1);
extern _Bool _wrap_IsWindowHovered__SWIG_1(void);
extern uintptr_t _wrap_GetWindowDrawList(void);
extern uintptr_t _wrap_GetWindowPos(void);
extern uintptr_t _wrap_GetWindowSize(void);
extern float _wrap_GetWindowWidth(void);
extern float _wrap_GetWindowHeight(void);
extern uintptr_t _wrap_GetContentRegionMax(void);
extern uintptr_t _wrap_GetContentRegionAvail(void);
extern float _wrap_GetContentRegionAvailWidth(void);
extern uintptr_t _wrap_GetWindowContentRegionMin(void);
extern uintptr_t _wrap_GetWindowContentRegionMax(void);
extern float _wrap_GetWindowContentRegionWidth(void);
extern void _wrap_SetNextWindowPos__SWIG_0(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_SetNextWindowPos__SWIG_1(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SetNextWindowPos__SWIG_2(uintptr_t arg1);
extern void _wrap_SetNextWindowSize__SWIG_0(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SetNextWindowSize__SWIG_1(uintptr_t arg1);
extern void _wrap_SetNextWindowSizeConstraints__SWIG_0(uintptr_t arg1, uintptr_t arg2, swig_type_14 arg3, uintptr_t arg4);
extern void _wrap_SetNextWindowSizeConstraints__SWIG_1(uintptr_t arg1, uintptr_t arg2, swig_type_15 arg3);
extern void _wrap_SetNextWindowSizeConstraints__SWIG_2(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SetNextWindowContentSize(uintptr_t arg1);
extern void _wrap_SetNextWindowCollapsed__SWIG_0(_Bool arg1, swig_intgo arg2);
extern void _wrap_SetNextWindowCollapsed__SWIG_1(_Bool arg1);
extern void _wrap_SetNextWindowFocus(void);
extern void _wrap_SetNextWindowBgAlpha(float arg1);
extern void _wrap_SetWindowPos__SWIG_0(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SetWindowPos__SWIG_1(uintptr_t arg1);
extern void _wrap_SetWindowSize__SWIG_0(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SetWindowSize__SWIG_1(uintptr_t arg1);
extern void _wrap_SetWindowCollapsed__SWIG_0(_Bool arg1, swig_intgo arg2);
extern void _wrap_SetWindowCollapsed__SWIG_1(_Bool arg1);
extern void _wrap_SetWindowFocus__SWIG_0(void);
extern void _wrap_SetWindowFontScale(float arg1);
extern void _wrap_SetWindowPos__SWIG_2(swig_type_16 arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_SetWindowPos__SWIG_3(swig_type_17 arg1, uintptr_t arg2);
extern void _wrap_SetWindowSize__SWIG_2(swig_type_18 arg1, uintptr_t arg2, swig_intgo arg3);
extern void _wrap_SetWindowSize__SWIG_3(swig_type_19 arg1, uintptr_t arg2);
extern void _wrap_SetWindowCollapsed__SWIG_2(swig_type_20 arg1, _Bool arg2, swig_intgo arg3);
extern void _wrap_SetWindowCollapsed__SWIG_3(swig_type_21 arg1, _Bool arg2);
extern void _wrap_SetWindowFocus__SWIG_1(swig_type_22 arg1);
extern float _wrap_GetScrollX(void);
extern float _wrap_GetScrollY(void);
extern float _wrap_GetScrollMaxX(void);
extern float _wrap_GetScrollMaxY(void);
extern void _wrap_SetScrollX(float arg1);
extern void _wrap_SetScrollY(float arg1);
extern void _wrap_SetScrollHere__SWIG_0(float arg1);
extern void _wrap_SetScrollHere__SWIG_1(void);
extern void _wrap_SetScrollFromPosY__SWIG_0(float arg1, float arg2);
extern void _wrap_SetScrollFromPosY__SWIG_1(float arg1);
extern void _wrap_PushFont(uintptr_t arg1);
extern void _wrap_PopFont(void);
extern void _wrap_PushStyleColor__SWIG_0(swig_intgo arg1, swig_intgo arg2);
extern void _wrap_PushStyleColor__SWIG_1(swig_intgo arg1, uintptr_t arg2);
extern void _wrap_PopStyleColor__SWIG_0(swig_intgo arg1);
extern void _wrap_PopStyleColor__SWIG_1(void);
extern void _wrap_PushStyleVar__SWIG_0(swig_intgo arg1, float arg2);
extern void _wrap_PushStyleVar__SWIG_1(swig_intgo arg1, uintptr_t arg2);
extern void _wrap_PopStyleVar__SWIG_0(swig_intgo arg1);
extern void _wrap_PopStyleVar__SWIG_1(void);
extern uintptr_t _wrap_GetStyleColorVec4(swig_intgo arg1);
extern uintptr_t _wrap_GetFont(void);
extern float _wrap_GetFontSize(void);
extern uintptr_t _wrap_GetFontTexUvWhitePixel(void);
extern swig_intgo _wrap_GetColorU32__SWIG_0(swig_intgo arg1, float arg2);
extern swig_intgo _wrap_GetColorU32__SWIG_1(swig_intgo arg1);
extern swig_intgo _wrap_GetColorU32__SWIG_2(uintptr_t arg1);
extern swig_intgo _wrap_GetColorU32FromU32(swig_intgo arg1);
extern void _wrap_PushItemWidth(float arg1);
extern void _wrap_PopItemWidth(void);
extern float _wrap_CalcItemWidth(void);
extern void _wrap_PushTextWrapPos__SWIG_0(float arg1);
extern void _wrap_PushTextWrapPos__SWIG_1(void);
extern void _wrap_PopTextWrapPos(void);
extern void _wrap_PushAllowKeyboardFocus(_Bool arg1);
extern void _wrap_PopAllowKeyboardFocus(void);
extern void _wrap_PushButtonRepeat(_Bool arg1);
extern void _wrap_PopButtonRepeat(void);
extern void _wrap_Separator(void);
extern void _wrap_SameLine__SWIG_0(float arg1, float arg2);
extern void _wrap_SameLine__SWIG_1(float arg1);
extern void _wrap_SameLine__SWIG_2(void);
extern void _wrap_NewLine(void);
extern void _wrap_Spacing(void);
extern void _wrap_Dummy(uintptr_t arg1);
extern void _wrap_Indent__SWIG_0(float arg1);
extern void _wrap_Indent__SWIG_1(void);
extern void _wrap_Unindent__SWIG_0(float arg1);
extern void _wrap_Unindent__SWIG_1(void);
extern void _wrap_BeginGroup(void);
extern void _wrap_EndGroup(void);
extern uintptr_t _wrap_GetCursorPos(void);
extern float _wrap_GetCursorPosX(void);
extern float _wrap_GetCursorPosY(void);
extern void _wrap_SetCursorPos(uintptr_t arg1);
extern void _wrap_SetCursorPosX(float arg1);
extern void _wrap_SetCursorPosY(float arg1);
extern uintptr_t _wrap_GetCursorStartPos(void);
extern uintptr_t _wrap_GetCursorScreenPos(void);
extern void _wrap_SetCursorScreenPos(uintptr_t arg1);
extern void _wrap_AlignTextToFramePadding(void);
extern float _wrap_GetTextLineHeight(void);
extern float _wrap_GetTextLineHeightWithSpacing(void);
extern float _wrap_GetFrameHeight(void);
extern float _wrap_GetFrameHeightWithSpacing(void);
extern void _wrap_PushID__SWIG_0(swig_type_23 arg1);
extern void _wrap_PushID__SWIG_1(swig_type_24 arg1, swig_type_25 arg2);
extern void _wrap_PushID__SWIG_2(uintptr_t arg1);
extern void _wrap_PushID__SWIG_3(swig_intgo arg1);
extern void _wrap_PopID(void);
extern swig_intgo _wrap_GetID__SWIG_0(swig_type_26 arg1);
extern swig_intgo _wrap_GetID__SWIG_1(swig_type_27 arg1, swig_type_28 arg2);
extern swig_intgo _wrap_GetID__SWIG_2(uintptr_t arg1);
extern void _wrap_TextUnformatted__SWIG_0(swig_type_29 arg1, swig_type_30 arg2);
extern void _wrap_TextUnformatted__SWIG_1(swig_type_31 arg1);
extern void _wrap_Text(swig_voidp arg1);
extern void _wrap_TextColored(uintptr_t arg1, swig_voidp arg2);
extern void _wrap_TextDisabled(swig_voidp arg1);
extern void _wrap_TextWrapped(swig_voidp arg1);
extern void _wrap_LabelText(swig_type_32 arg1, swig_voidp arg2);
extern void _wrap_BulletText(swig_voidp arg1);
extern _Bool _wrap_Button__SWIG_0(swig_type_33 arg1, uintptr_t arg2);
extern _Bool _wrap_Button__SWIG_1(swig_type_34 arg1);
extern _Bool _wrap_SmallButton(swig_type_35 arg1);
extern _Bool _wrap_InvisibleButton(swig_type_36 arg1, uintptr_t arg2);
extern _Bool _wrap_ArrowButton(swig_type_37 arg1, swig_intgo arg2);
extern void _wrap_Image__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern void _wrap_Image__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_Image__SWIG_2(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_Image__SWIG_3(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Image__SWIG_4(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_ImageButton__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5, uintptr_t arg6, uintptr_t arg7);
extern _Bool _wrap_ImageButton__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5, uintptr_t arg6);
extern _Bool _wrap_ImageButton__SWIG_2(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern _Bool _wrap_ImageButton__SWIG_3(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_ImageButton__SWIG_4(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_ImageButton__SWIG_5(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Checkbox(swig_type_38 arg1, swig_voidp arg2);
extern _Bool _wrap_CheckboxFlags(swig_type_39 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_RadioButton__SWIG_0(swig_type_40 arg1, _Bool arg2);
extern _Bool _wrap_RadioButton__SWIG_1(swig_type_41 arg1, swig_voidp arg2, swig_intgo arg3);
extern void _wrap_ProgressBar__SWIG_0(float arg1, uintptr_t arg2, swig_type_42 arg3);
extern void _wrap_ProgressBar__SWIG_1(float arg1, uintptr_t arg2);
extern void _wrap_ProgressBar__SWIG_2(float arg1);
extern void _wrap_Bullet(void);
extern _Bool _wrap_BeginCombo__SWIG_0(swig_type_43 arg1, swig_type_44 arg2, swig_intgo arg3);
extern _Bool _wrap_BeginCombo__SWIG_1(swig_type_45 arg1, swig_type_46 arg2);
extern void _wrap_EndCombo(void);
extern _Bool _wrap_Combo__SWIG_0(swig_type_47 arg1, swig_voidp arg2, swig_voidp arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_Combo__SWIG_1(swig_type_48 arg1, swig_voidp arg2, swig_voidp arg3, swig_intgo arg4);
extern _Bool _wrap_Combo__SWIG_2(swig_type_49 arg1, swig_voidp arg2, swig_type_50 arg3, swig_intgo arg4);
extern _Bool _wrap_Combo__SWIG_3(swig_type_51 arg1, swig_voidp arg2, swig_type_52 arg3);
extern _Bool _wrap_Combo__SWIG_4(swig_type_53 arg1, swig_voidp arg2, swig_type_54 arg3, uintptr_t arg4, swig_intgo arg5, swig_intgo arg6);
extern _Bool _wrap_Combo__SWIG_5(swig_type_55 arg1, swig_voidp arg2, swig_type_56 arg3, uintptr_t arg4, swig_intgo arg5);
extern _Bool _wrap_DragFloat__SWIG_0(swig_type_57 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_58 arg6, float arg7);
extern _Bool _wrap_DragFloat__SWIG_1(swig_type_59 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_60 arg6);
extern _Bool _wrap_DragFloat__SWIG_2(swig_type_61 arg1, swig_voidp arg2, float arg3, float arg4, float arg5);
extern _Bool _wrap_DragFloat__SWIG_3(swig_type_62 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_DragFloat__SWIG_4(swig_type_63 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragFloat__SWIG_5(swig_type_64 arg1, swig_voidp arg2);
extern _Bool _wrap_DragFloat2__SWIG_0(swig_type_65 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_66 arg6, float arg7);
extern _Bool _wrap_DragFloat2__SWIG_1(swig_type_67 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_68 arg6);
extern _Bool _wrap_DragFloat2__SWIG_2(swig_type_69 arg1, swig_voidp arg2, float arg3, float arg4, float arg5);
extern _Bool _wrap_DragFloat2__SWIG_3(swig_type_70 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_DragFloat2__SWIG_4(swig_type_71 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragFloat2__SWIG_5(swig_type_72 arg1, swig_voidp arg2);
extern _Bool _wrap_DragFloat3__SWIG_0(swig_type_73 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_74 arg6, float arg7);
extern _Bool _wrap_DragFloat3__SWIG_1(swig_type_75 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_76 arg6);
extern _Bool _wrap_DragFloat3__SWIG_2(swig_type_77 arg1, swig_voidp arg2, float arg3, float arg4, float arg5);
extern _Bool _wrap_DragFloat3__SWIG_3(swig_type_78 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_DragFloat3__SWIG_4(swig_type_79 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragFloat3__SWIG_5(swig_type_80 arg1, swig_voidp arg2);
extern _Bool _wrap_DragFloat4__SWIG_0(swig_type_81 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_82 arg6, float arg7);
extern _Bool _wrap_DragFloat4__SWIG_1(swig_type_83 arg1, swig_voidp arg2, float arg3, float arg4, float arg5, swig_type_84 arg6);
extern _Bool _wrap_DragFloat4__SWIG_2(swig_type_85 arg1, swig_voidp arg2, float arg3, float arg4, float arg5);
extern _Bool _wrap_DragFloat4__SWIG_3(swig_type_86 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_DragFloat4__SWIG_4(swig_type_87 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragFloat4__SWIG_5(swig_type_88 arg1, swig_voidp arg2);
extern _Bool _wrap_DragFloatRange2__SWIG_0(swig_type_89 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, float arg5, float arg6, swig_type_90 arg7, swig_type_91 arg8, float arg9);
extern _Bool _wrap_DragFloatRange2__SWIG_1(swig_type_92 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, float arg5, float arg6, swig_type_93 arg7, swig_type_94 arg8);
extern _Bool _wrap_DragFloatRange2__SWIG_2(swig_type_95 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, float arg5, float arg6, swig_type_96 arg7);
extern _Bool _wrap_DragFloatRange2__SWIG_3(swig_type_97 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, float arg5, float arg6);
extern _Bool _wrap_DragFloatRange2__SWIG_4(swig_type_98 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, float arg5);
extern _Bool _wrap_DragFloatRange2__SWIG_5(swig_type_99 arg1, swig_voidp arg2, swig_voidp arg3, float arg4);
extern _Bool _wrap_DragFloatRange2__SWIG_6(swig_type_100 arg1, swig_voidp arg2, swig_voidp arg3);
extern _Bool _wrap_DragInt__SWIG_0(swig_type_101 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5, swig_type_102 arg6);
extern _Bool _wrap_DragInt__SWIG_1(swig_type_103 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_DragInt__SWIG_2(swig_type_104 arg1, swig_voidp arg2, float arg3, swig_intgo arg4);
extern _Bool _wrap_DragInt__SWIG_3(swig_type_105 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragInt__SWIG_4(swig_type_106 arg1, swig_voidp arg2);
extern _Bool _wrap_DragInt2__SWIG_0(swig_type_107 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5, swig_type_108 arg6);
extern _Bool _wrap_DragInt2__SWIG_1(swig_type_109 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_DragInt2__SWIG_2(swig_type_110 arg1, swig_voidp arg2, float arg3, swig_intgo arg4);
extern _Bool _wrap_DragInt2__SWIG_3(swig_type_111 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragInt2__SWIG_4(swig_type_112 arg1, swig_voidp arg2);
extern _Bool _wrap_DragInt3__SWIG_0(swig_type_113 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5, swig_type_114 arg6);
extern _Bool _wrap_DragInt3__SWIG_1(swig_type_115 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_DragInt3__SWIG_2(swig_type_116 arg1, swig_voidp arg2, float arg3, swig_intgo arg4);
extern _Bool _wrap_DragInt3__SWIG_3(swig_type_117 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragInt3__SWIG_4(swig_type_118 arg1, swig_voidp arg2);
extern _Bool _wrap_DragInt4__SWIG_0(swig_type_119 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5, swig_type_120 arg6);
extern _Bool _wrap_DragInt4__SWIG_1(swig_type_121 arg1, swig_voidp arg2, float arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_DragInt4__SWIG_2(swig_type_122 arg1, swig_voidp arg2, float arg3, swig_intgo arg4);
extern _Bool _wrap_DragInt4__SWIG_3(swig_type_123 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_DragInt4__SWIG_4(swig_type_124 arg1, swig_voidp arg2);
extern _Bool _wrap_DragIntRange2__SWIG_0(swig_type_125 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, swig_intgo arg5, swig_intgo arg6, swig_type_126 arg7, swig_type_127 arg8);
extern _Bool _wrap_DragIntRange2__SWIG_1(swig_type_128 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, swig_intgo arg5, swig_intgo arg6, swig_type_129 arg7);
extern _Bool _wrap_DragIntRange2__SWIG_2(swig_type_130 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, swig_intgo arg5, swig_intgo arg6);
extern _Bool _wrap_DragIntRange2__SWIG_3(swig_type_131 arg1, swig_voidp arg2, swig_voidp arg3, float arg4, swig_intgo arg5);
extern _Bool _wrap_DragIntRange2__SWIG_4(swig_type_132 arg1, swig_voidp arg2, swig_voidp arg3, float arg4);
extern _Bool _wrap_DragIntRange2__SWIG_5(swig_type_133 arg1, swig_voidp arg2, swig_voidp arg3);
extern _Bool _wrap_DragScalar__SWIG_0(swig_type_134 arg1, swig_intgo arg2, uintptr_t arg3, float arg4, uintptr_t arg5, uintptr_t arg6, swig_type_135 arg7, float arg8);
extern _Bool _wrap_DragScalar__SWIG_1(swig_type_136 arg1, swig_intgo arg2, uintptr_t arg3, float arg4, uintptr_t arg5, uintptr_t arg6, swig_type_137 arg7);
extern _Bool _wrap_DragScalar__SWIG_2(swig_type_138 arg1, swig_intgo arg2, uintptr_t arg3, float arg4, uintptr_t arg5, uintptr_t arg6);
extern _Bool _wrap_DragScalar__SWIG_3(swig_type_139 arg1, swig_intgo arg2, uintptr_t arg3, float arg4, uintptr_t arg5);
extern _Bool _wrap_DragScalar__SWIG_4(swig_type_140 arg1, swig_intgo arg2, uintptr_t arg3, float arg4);
extern _Bool _wrap_DragScalarN__SWIG_0(swig_type_141 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, float arg5, uintptr_t arg6, uintptr_t arg7, swig_type_142 arg8, float arg9);
extern _Bool _wrap_DragScalarN__SWIG_1(swig_type_143 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, float arg5, uintptr_t arg6, uintptr_t arg7, swig_type_144 arg8);
extern _Bool _wrap_DragScalarN__SWIG_2(swig_type_145 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, float arg5, uintptr_t arg6, uintptr_t arg7);
extern _Bool _wrap_DragScalarN__SWIG_3(swig_type_146 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, float arg5, uintptr_t arg6);
extern _Bool _wrap_DragScalarN__SWIG_4(swig_type_147 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, float arg5);
extern _Bool _wrap_SliderFloat__SWIG_0(swig_type_148 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_149 arg5, float arg6);
extern _Bool _wrap_SliderFloat__SWIG_1(swig_type_150 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_151 arg5);
extern _Bool _wrap_SliderFloat__SWIG_2(swig_type_152 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_SliderFloat2__SWIG_0(swig_type_153 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_154 arg5, float arg6);
extern _Bool _wrap_SliderFloat2__SWIG_1(swig_type_155 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_156 arg5);
extern _Bool _wrap_SliderFloat2__SWIG_2(swig_type_157 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_SliderFloat3__SWIG_0(swig_type_158 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_159 arg5, float arg6);
extern _Bool _wrap_SliderFloat3__SWIG_1(swig_type_160 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_161 arg5);
extern _Bool _wrap_SliderFloat3__SWIG_2(swig_type_162 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_SliderFloat4__SWIG_0(swig_type_163 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_164 arg5, float arg6);
extern _Bool _wrap_SliderFloat4__SWIG_1(swig_type_165 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_166 arg5);
extern _Bool _wrap_SliderFloat4__SWIG_2(swig_type_167 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_SliderAngle__SWIG_0(swig_type_168 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_SliderAngle__SWIG_1(swig_type_169 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_SliderAngle__SWIG_2(swig_type_170 arg1, swig_voidp arg2);
extern _Bool _wrap_SliderInt__SWIG_0(swig_type_171 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_172 arg5);
extern _Bool _wrap_SliderInt__SWIG_1(swig_type_173 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4);
extern _Bool _wrap_SliderInt2__SWIG_0(swig_type_174 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_175 arg5);
extern _Bool _wrap_SliderInt2__SWIG_1(swig_type_176 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4);
extern _Bool _wrap_SliderInt3__SWIG_0(swig_type_177 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_178 arg5);
extern _Bool _wrap_SliderInt3__SWIG_1(swig_type_179 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4);
extern _Bool _wrap_SliderInt4__SWIG_0(swig_type_180 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_181 arg5);
extern _Bool _wrap_SliderInt4__SWIG_1(swig_type_182 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4);
extern _Bool _wrap_SliderScalar__SWIG_0(swig_type_183 arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_type_184 arg6, float arg7);
extern _Bool _wrap_SliderScalar__SWIG_1(swig_type_185 arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_type_186 arg6);
extern _Bool _wrap_SliderScalar__SWIG_2(swig_type_187 arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern _Bool _wrap_SliderScalarN__SWIG_0(swig_type_188 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, uintptr_t arg6, swig_type_189 arg7, float arg8);
extern _Bool _wrap_SliderScalarN__SWIG_1(swig_type_190 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, uintptr_t arg6, swig_type_191 arg7);
extern _Bool _wrap_SliderScalarN__SWIG_2(swig_type_192 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, uintptr_t arg6);
extern _Bool _wrap_VSliderFloat__SWIG_0(swig_type_193 arg1, uintptr_t arg2, swig_voidp arg3, float arg4, float arg5, swig_type_194 arg6, float arg7);
extern _Bool _wrap_VSliderFloat__SWIG_1(swig_type_195 arg1, uintptr_t arg2, swig_voidp arg3, float arg4, float arg5, swig_type_196 arg6);
extern _Bool _wrap_VSliderFloat__SWIG_2(swig_type_197 arg1, uintptr_t arg2, swig_voidp arg3, float arg4, float arg5);
extern _Bool _wrap_VSliderInt__SWIG_0(swig_type_198 arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4, swig_intgo arg5, swig_type_199 arg6);
extern _Bool _wrap_VSliderInt__SWIG_1(swig_type_200 arg1, uintptr_t arg2, swig_voidp arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_VSliderScalar__SWIG_0(swig_type_201 arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, swig_type_202 arg7, float arg8);
extern _Bool _wrap_VSliderScalar__SWIG_1(swig_type_203 arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, swig_type_204 arg7);
extern _Bool _wrap_VSliderScalar__SWIG_2(swig_type_205 arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern _Bool _wrap_InputText__SWIG_0(swig_type_206 arg1, swig_type_207 arg2, swig_type_208 arg3, swig_intgo arg4, swig_type_209 arg5, uintptr_t arg6);
extern _Bool _wrap_InputText__SWIG_1(swig_type_210 arg1, swig_type_211 arg2, swig_type_212 arg3, swig_intgo arg4, swig_type_213 arg5);
extern _Bool _wrap_InputText__SWIG_2(swig_type_214 arg1, swig_type_215 arg2, swig_type_216 arg3, swig_intgo arg4);
extern _Bool _wrap_InputText__SWIG_3(swig_type_217 arg1, swig_type_218 arg2, swig_type_219 arg3);
extern _Bool _wrap_InputTextMultiline__SWIG_0(swig_type_220 arg1, swig_type_221 arg2, swig_type_222 arg3, uintptr_t arg4, swig_intgo arg5, swig_type_223 arg6, uintptr_t arg7);
extern _Bool _wrap_InputTextMultiline__SWIG_1(swig_type_224 arg1, swig_type_225 arg2, swig_type_226 arg3, uintptr_t arg4, swig_intgo arg5, swig_type_227 arg6);
extern _Bool _wrap_InputTextMultiline__SWIG_2(swig_type_228 arg1, swig_type_229 arg2, swig_type_230 arg3, uintptr_t arg4, swig_intgo arg5);
extern _Bool _wrap_InputTextMultiline__SWIG_3(swig_type_231 arg1, swig_type_232 arg2, swig_type_233 arg3, uintptr_t arg4);
extern _Bool _wrap_InputTextMultiline__SWIG_4(swig_type_234 arg1, swig_type_235 arg2, swig_type_236 arg3);
extern _Bool _wrap_InputFloat__SWIG_0(swig_type_237 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_238 arg5, swig_intgo arg6);
extern _Bool _wrap_InputFloat__SWIG_1(swig_type_239 arg1, swig_voidp arg2, float arg3, float arg4, swig_type_240 arg5);
extern _Bool _wrap_InputFloat__SWIG_2(swig_type_241 arg1, swig_voidp arg2, float arg3, float arg4);
extern _Bool _wrap_InputFloat__SWIG_3(swig_type_242 arg1, swig_voidp arg2, float arg3);
extern _Bool _wrap_InputFloat__SWIG_4(swig_type_243 arg1, swig_voidp arg2);
extern _Bool _wrap_InputFloat2__SWIG_0(swig_type_244 arg1, swig_voidp arg2, swig_type_245 arg3, swig_intgo arg4);
extern _Bool _wrap_InputFloat2__SWIG_1(swig_type_246 arg1, swig_voidp arg2, swig_type_247 arg3);
extern _Bool _wrap_InputFloat2__SWIG_2(swig_type_248 arg1, swig_voidp arg2);
extern _Bool _wrap_InputFloat3__SWIG_0(swig_type_249 arg1, swig_voidp arg2, swig_type_250 arg3, swig_intgo arg4);
extern _Bool _wrap_InputFloat3__SWIG_1(swig_type_251 arg1, swig_voidp arg2, swig_type_252 arg3);
extern _Bool _wrap_InputFloat3__SWIG_2(swig_type_253 arg1, swig_voidp arg2);
extern _Bool _wrap_InputFloat4__SWIG_0(swig_type_254 arg1, swig_voidp arg2, swig_type_255 arg3, swig_intgo arg4);
extern _Bool _wrap_InputFloat4__SWIG_1(swig_type_256 arg1, swig_voidp arg2, swig_type_257 arg3);
extern _Bool _wrap_InputFloat4__SWIG_2(swig_type_258 arg1, swig_voidp arg2);
extern _Bool _wrap_InputInt__SWIG_0(swig_type_259 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_InputInt__SWIG_1(swig_type_260 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4);
extern _Bool _wrap_InputInt__SWIG_2(swig_type_261 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_InputInt__SWIG_3(swig_type_262 arg1, swig_voidp arg2);
extern _Bool _wrap_InputInt2__SWIG_0(swig_type_263 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_InputInt2__SWIG_1(swig_type_264 arg1, swig_voidp arg2);
extern _Bool _wrap_InputInt3__SWIG_0(swig_type_265 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_InputInt3__SWIG_1(swig_type_266 arg1, swig_voidp arg2);
extern _Bool _wrap_InputInt4__SWIG_0(swig_type_267 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_InputInt4__SWIG_1(swig_type_268 arg1, swig_voidp arg2);
extern _Bool _wrap_InputDouble__SWIG_0(swig_type_269 arg1, swig_voidp arg2, double arg3, double arg4, swig_type_270 arg5, swig_intgo arg6);
extern _Bool _wrap_InputDouble__SWIG_1(swig_type_271 arg1, swig_voidp arg2, double arg3, double arg4, swig_type_272 arg5);
extern _Bool _wrap_InputDouble__SWIG_2(swig_type_273 arg1, swig_voidp arg2, double arg3, double arg4);
extern _Bool _wrap_InputDouble__SWIG_3(swig_type_274 arg1, swig_voidp arg2, double arg3);
extern _Bool _wrap_InputDouble__SWIG_4(swig_type_275 arg1, swig_voidp arg2);
extern _Bool _wrap_InputScalar__SWIG_0(swig_type_276 arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_type_277 arg6, swig_intgo arg7);
extern _Bool _wrap_InputScalar__SWIG_1(swig_type_278 arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_type_279 arg6);
extern _Bool _wrap_InputScalar__SWIG_2(swig_type_280 arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern _Bool _wrap_InputScalar__SWIG_3(swig_type_281 arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_InputScalar__SWIG_4(swig_type_282 arg1, swig_intgo arg2, uintptr_t arg3);
extern _Bool _wrap_InputScalarN__SWIG_0(swig_type_283 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, uintptr_t arg6, swig_type_284 arg7, swig_intgo arg8);
extern _Bool _wrap_InputScalarN__SWIG_1(swig_type_285 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, uintptr_t arg6, swig_type_286 arg7);
extern _Bool _wrap_InputScalarN__SWIG_2(swig_type_287 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5, uintptr_t arg6);
extern _Bool _wrap_InputScalarN__SWIG_3(swig_type_288 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4, uintptr_t arg5);
extern _Bool _wrap_InputScalarN__SWIG_4(swig_type_289 arg1, swig_intgo arg2, uintptr_t arg3, swig_intgo arg4);
extern _Bool _wrap_ColorEdit3__SWIG_0(swig_type_290 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_ColorEdit3__SWIG_1(swig_type_291 arg1, swig_voidp arg2);
extern _Bool _wrap_ColorEdit4__SWIG_0(swig_type_292 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_ColorEdit4__SWIG_1(swig_type_293 arg1, swig_voidp arg2);
extern _Bool _wrap_ColorPicker3__SWIG_0(swig_type_294 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_ColorPicker3__SWIG_1(swig_type_295 arg1, swig_voidp arg2);
extern _Bool _wrap_ColorPicker4__SWIG_0(swig_type_296 arg1, swig_voidp arg2, swig_intgo arg3, swig_voidp arg4);
extern _Bool _wrap_ColorPicker4__SWIG_1(swig_type_297 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_ColorPicker4__SWIG_2(swig_type_298 arg1, swig_voidp arg2);
extern _Bool _wrap_ColorButton__SWIG_0(swig_type_299 arg1, uintptr_t arg2, swig_intgo arg3, uintptr_t arg4);
extern _Bool _wrap_ColorButton__SWIG_1(swig_type_300 arg1, uintptr_t arg2, swig_intgo arg3);
extern _Bool _wrap_ColorButton__SWIG_2(swig_type_301 arg1, uintptr_t arg2);
extern void _wrap_SetColorEditOptions(swig_intgo arg1);
extern _Bool _wrap_TreeNode__SWIG_0(swig_type_302 arg1);
extern _Bool _wrap_TreeNode__SWIG_1(swig_type_303 arg1, swig_voidp arg2);
extern _Bool _wrap_TreeNode__SWIG_2(uintptr_t arg1, swig_voidp arg2);
extern _Bool _wrap_TreeNodeEx__SWIG_0(swig_type_304 arg1, swig_intgo arg2);
extern _Bool _wrap_TreeNodeEx__SWIG_1(swig_type_305 arg1);
extern _Bool _wrap_TreeNodeEx__SWIG_2(swig_type_306 arg1, swig_intgo arg2, swig_voidp arg3);
extern _Bool _wrap_TreeNodeEx__SWIG_3(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern void _wrap_TreePush__SWIG_0(swig_type_307 arg1);
extern void _wrap_TreePush__SWIG_1(uintptr_t arg1);
extern void _wrap_TreePush__SWIG_2(void);
extern void _wrap_TreePop(void);
extern void _wrap_TreeAdvanceToLabelPos(void);
extern float _wrap_GetTreeNodeToLabelSpacing(void);
extern void _wrap_SetNextTreeNodeOpen__SWIG_0(_Bool arg1, swig_intgo arg2);
extern void _wrap_SetNextTreeNodeOpen__SWIG_1(_Bool arg1);
extern _Bool _wrap_CollapsingHeader__SWIG_0(swig_type_308 arg1, swig_intgo arg2);
extern _Bool _wrap_CollapsingHeader__SWIG_1(swig_type_309 arg1);
extern _Bool _wrap_CollapsingHeader__SWIG_2(swig_type_310 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_CollapsingHeader__SWIG_3(swig_type_311 arg1, swig_voidp arg2);
extern _Bool _wrap_Selectable__SWIG_0(swig_type_312 arg1, _Bool arg2, swig_intgo arg3, uintptr_t arg4);
extern _Bool _wrap_Selectable__SWIG_1(swig_type_313 arg1, _Bool arg2, swig_intgo arg3);
extern _Bool _wrap_Selectable__SWIG_2(swig_type_314 arg1, _Bool arg2);
extern _Bool _wrap_Selectable__SWIG_3(swig_type_315 arg1);
extern _Bool _wrap_Selectable__SWIG_4(swig_type_316 arg1, swig_voidp arg2, swig_intgo arg3, uintptr_t arg4);
extern _Bool _wrap_Selectable__SWIG_5(swig_type_317 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_Selectable__SWIG_6(swig_type_318 arg1, swig_voidp arg2);
extern _Bool _wrap_ListBox__SWIG_0(swig_type_319 arg1, swig_voidp arg2, swig_voidp arg3, swig_intgo arg4, swig_intgo arg5);
extern _Bool _wrap_ListBox__SWIG_1(swig_type_320 arg1, swig_voidp arg2, swig_voidp arg3, swig_intgo arg4);
extern _Bool _wrap_ListBox__SWIG_2(swig_type_321 arg1, swig_voidp arg2, swig_type_322 arg3, uintptr_t arg4, swig_intgo arg5, swig_intgo arg6);
extern _Bool _wrap_ListBox__SWIG_3(swig_type_323 arg1, swig_voidp arg2, swig_type_324 arg3, uintptr_t arg4, swig_intgo arg5);
extern _Bool _wrap_ListBoxHeader__SWIG_0(swig_type_325 arg1, uintptr_t arg2);
extern _Bool _wrap_ListBoxHeader__SWIG_1(swig_type_326 arg1);
extern _Bool _wrap_ListBoxHeader__SWIG_2(swig_type_327 arg1, swig_intgo arg2, swig_intgo arg3);
extern _Bool _wrap_ListBoxHeader__SWIG_3(swig_type_328 arg1, swig_intgo arg2);
extern void _wrap_ListBoxFooter(void);
extern void _wrap_PlotLines__SWIG_0(swig_type_329 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_330 arg5, float arg6, float arg7, uintptr_t arg8, swig_intgo arg9);
extern void _wrap_PlotLines__SWIG_1(swig_type_331 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_332 arg5, float arg6, float arg7, uintptr_t arg8);
extern void _wrap_PlotLines__SWIG_2(swig_type_333 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_334 arg5, float arg6, float arg7);
extern void _wrap_PlotLines__SWIG_3(swig_type_335 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_336 arg5, float arg6);
extern void _wrap_PlotLines__SWIG_4(swig_type_337 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_338 arg5);
extern void _wrap_PlotLines__SWIG_5(swig_type_339 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4);
extern void _wrap_PlotLines__SWIG_6(swig_type_340 arg1, swig_voidp arg2, swig_intgo arg3);
extern void _wrap_PlotLines__SWIG_7(swig_type_341 arg1, swig_type_342 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_343 arg6, float arg7, float arg8, uintptr_t arg9);
extern void _wrap_PlotLines__SWIG_8(swig_type_344 arg1, swig_type_345 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_346 arg6, float arg7, float arg8);
extern void _wrap_PlotLines__SWIG_9(swig_type_347 arg1, swig_type_348 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_349 arg6, float arg7);
extern void _wrap_PlotLines__SWIG_10(swig_type_350 arg1, swig_type_351 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_352 arg6);
extern void _wrap_PlotLines__SWIG_11(swig_type_353 arg1, swig_type_354 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5);
extern void _wrap_PlotLines__SWIG_12(swig_type_355 arg1, swig_type_356 arg2, uintptr_t arg3, swig_intgo arg4);
extern void _wrap_PlotHistogram__SWIG_0(swig_type_357 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_358 arg5, float arg6, float arg7, uintptr_t arg8, swig_intgo arg9);
extern void _wrap_PlotHistogram__SWIG_1(swig_type_359 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_360 arg5, float arg6, float arg7, uintptr_t arg8);
extern void _wrap_PlotHistogram__SWIG_2(swig_type_361 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_362 arg5, float arg6, float arg7);
extern void _wrap_PlotHistogram__SWIG_3(swig_type_363 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_364 arg5, float arg6);
extern void _wrap_PlotHistogram__SWIG_4(swig_type_365 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4, swig_type_366 arg5);
extern void _wrap_PlotHistogram__SWIG_5(swig_type_367 arg1, swig_voidp arg2, swig_intgo arg3, swig_intgo arg4);
extern void _wrap_PlotHistogram__SWIG_6(swig_type_368 arg1, swig_voidp arg2, swig_intgo arg3);
extern void _wrap_PlotHistogram__SWIG_7(swig_type_369 arg1, swig_type_370 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_371 arg6, float arg7, float arg8, uintptr_t arg9);
extern void _wrap_PlotHistogram__SWIG_8(swig_type_372 arg1, swig_type_373 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_374 arg6, float arg7, float arg8);
extern void _wrap_PlotHistogram__SWIG_9(swig_type_375 arg1, swig_type_376 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_377 arg6, float arg7);
extern void _wrap_PlotHistogram__SWIG_10(swig_type_378 arg1, swig_type_379 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_type_380 arg6);
extern void _wrap_PlotHistogram__SWIG_11(swig_type_381 arg1, swig_type_382 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5);
extern void _wrap_PlotHistogram__SWIG_12(swig_type_383 arg1, swig_type_384 arg2, uintptr_t arg3, swig_intgo arg4);
extern void _wrap_Value__SWIG_0(swig_type_385 arg1, _Bool arg2);
extern void _wrap_Value__SWIG_1(swig_type_386 arg1, swig_intgo arg2);
extern void _wrap_ValueUnsigned(swig_type_387 arg1, swig_intgo arg2);
extern void _wrap_Value__SWIG_2(swig_type_388 arg1, float arg2, swig_type_389 arg3);
extern void _wrap_Value__SWIG_3(swig_type_390 arg1, float arg2);
extern _Bool _wrap_BeginMainMenuBar(void);
extern void _wrap_EndMainMenuBar(void);
extern _Bool _wrap_BeginMenuBar(void);
extern void _wrap_EndMenuBar(void);
extern _Bool _wrap_BeginMenu__SWIG_0(swig_type_391 arg1, _Bool arg2);
extern _Bool _wrap_BeginMenu__SWIG_1(swig_type_392 arg1);
extern void _wrap_EndMenu(void);
extern _Bool _wrap_MenuItem__SWIG_0(swig_type_393 arg1, swig_type_394 arg2, _Bool arg3, _Bool arg4);
extern _Bool _wrap_MenuItem__SWIG_1(swig_type_395 arg1, swig_type_396 arg2, _Bool arg3);
extern _Bool _wrap_MenuItem__SWIG_2(swig_type_397 arg1, swig_type_398 arg2);
extern _Bool _wrap_MenuItem__SWIG_3(swig_type_399 arg1);
extern _Bool _wrap_MenuItem__SWIG_4(swig_type_400 arg1, swig_type_401 arg2, swig_voidp arg3, _Bool arg4);
extern _Bool _wrap_MenuItem__SWIG_5(swig_type_402 arg1, swig_type_403 arg2, swig_voidp arg3);
extern void _wrap_BeginTooltip(void);
extern void _wrap_EndTooltip(void);
extern void _wrap_SetTooltip(swig_voidp arg1);
extern void _wrap_OpenPopup(swig_type_404 arg1);
extern _Bool _wrap_BeginPopup__SWIG_0(swig_type_405 arg1, swig_intgo arg2);
extern _Bool _wrap_BeginPopup__SWIG_1(swig_type_406 arg1);
extern _Bool _wrap_BeginPopupContextItem__SWIG_0(swig_type_407 arg1, swig_intgo arg2);
extern _Bool _wrap_BeginPopupContextItem__SWIG_1(swig_type_408 arg1);
extern _Bool _wrap_BeginPopupContextItem__SWIG_2(void);
extern _Bool _wrap_BeginPopupContextWindow__SWIG_0(swig_type_409 arg1, swig_intgo arg2, _Bool arg3);
extern _Bool _wrap_BeginPopupContextWindow__SWIG_1(swig_type_410 arg1, swig_intgo arg2);
extern _Bool _wrap_BeginPopupContextWindow__SWIG_2(swig_type_411 arg1);
extern _Bool _wrap_BeginPopupContextWindow__SWIG_3(void);
extern _Bool _wrap_BeginPopupContextVoid__SWIG_0(swig_type_412 arg1, swig_intgo arg2);
extern _Bool _wrap_BeginPopupContextVoid__SWIG_1(swig_type_413 arg1);
extern _Bool _wrap_BeginPopupContextVoid__SWIG_2(void);
extern _Bool _wrap_BeginPopupModal__SWIG_0(swig_type_414 arg1, swig_voidp arg2, swig_intgo arg3);
extern _Bool _wrap_BeginPopupModal__SWIG_1(swig_type_415 arg1, swig_voidp arg2);
extern _Bool _wrap_BeginPopupModal__SWIG_2(swig_type_416 arg1);
extern void _wrap_EndPopup(void);
extern _Bool _wrap_OpenPopupOnItemClick__SWIG_0(swig_type_417 arg1, swig_intgo arg2);
extern _Bool _wrap_OpenPopupOnItemClick__SWIG_1(swig_type_418 arg1);
extern _Bool _wrap_OpenPopupOnItemClick__SWIG_2(void);
extern _Bool _wrap_IsPopupOpen(swig_type_419 arg1);
extern void _wrap_CloseCurrentPopup(void);
extern void _wrap_Columns__SWIG_0(swig_intgo arg1, swig_type_420 arg2, _Bool arg3);
extern void _wrap_Columns__SWIG_1(swig_intgo arg1, swig_type_421 arg2);
extern void _wrap_Columns__SWIG_2(swig_intgo arg1);
extern void _wrap_Columns__SWIG_3(void);
extern void _wrap_NextColumn(void);
extern swig_intgo _wrap_GetColumnIndex(void);
extern float _wrap_GetColumnWidth__SWIG_0(swig_intgo arg1);
extern float _wrap_GetColumnWidth__SWIG_1(void);
extern void _wrap_SetColumnWidth(swig_intgo arg1, float arg2);
extern float _wrap_GetColumnOffset__SWIG_0(swig_intgo arg1);
extern float _wrap_GetColumnOffset__SWIG_1(void);
extern void _wrap_SetColumnOffset(swig_intgo arg1, float arg2);
extern swig_intgo _wrap_GetColumnsCount(void);
extern void _wrap_LogToTTY__SWIG_0(swig_intgo arg1);
extern void _wrap_LogToTTY__SWIG_1(void);
extern void _wrap_LogToFile__SWIG_0(swig_intgo arg1, swig_type_422 arg2);
extern void _wrap_LogToFile__SWIG_1(swig_intgo arg1);
extern void _wrap_LogToFile__SWIG_2(void);
extern void _wrap_LogToClipboard__SWIG_0(swig_intgo arg1);
extern void _wrap_LogToClipboard__SWIG_1(void);
extern void _wrap_LogFinish(void);
extern void _wrap_LogButtons(void);
extern void _wrap_LogText(swig_voidp arg1);
extern _Bool _wrap_BeginDragDropSource__SWIG_0(swig_intgo arg1);
extern _Bool _wrap_BeginDragDropSource__SWIG_1(void);
extern _Bool _wrap_SetDragDropPayload__SWIG_0(swig_type_423 arg1, uintptr_t arg2, swig_type_424 arg3, swig_intgo arg4);
extern _Bool _wrap_SetDragDropPayload__SWIG_1(swig_type_425 arg1, uintptr_t arg2, swig_type_426 arg3);
extern void _wrap_EndDragDropSource(void);
extern _Bool _wrap_BeginDragDropTarget(void);
extern uintptr_t _wrap_AcceptDragDropPayload__SWIG_0(swig_type_427 arg1, swig_intgo arg2);
extern uintptr_t _wrap_AcceptDragDropPayload__SWIG_1(swig_type_428 arg1);
extern void _wrap_EndDragDropTarget(void);
extern void _wrap_PushClipRect(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern void _wrap_PopClipRect(void);
extern void _wrap_SetItemDefaultFocus(void);
extern void _wrap_SetKeyboardFocusHere__SWIG_0(swig_intgo arg1);
extern void _wrap_SetKeyboardFocusHere__SWIG_1(void);
extern _Bool _wrap_IsItemHovered__SWIG_0(swig_intgo arg1);
extern _Bool _wrap_IsItemHovered__SWIG_1(void);
extern _Bool _wrap_IsItemActive(void);
extern _Bool _wrap_IsItemFocused(void);
extern _Bool _wrap_IsItemClicked__SWIG_0(swig_intgo arg1);
extern _Bool _wrap_IsItemClicked__SWIG_1(void);
extern _Bool _wrap_IsItemVisible(void);
extern _Bool _wrap_IsItemEdited(void);
extern _Bool _wrap_IsItemDeactivated(void);
extern _Bool _wrap_IsItemDeactivatedAfterEdit(void);
extern _Bool _wrap_IsAnyItemHovered(void);
extern _Bool _wrap_IsAnyItemActive(void);
extern _Bool _wrap_IsAnyItemFocused(void);
extern uintptr_t _wrap_GetItemRectMin(void);
extern uintptr_t _wrap_GetItemRectMax(void);
extern uintptr_t _wrap_GetItemRectSize(void);
extern void _wrap_SetItemAllowOverlap(void);
extern _Bool _wrap_IsRectVisible__SWIG_0(uintptr_t arg1);
extern _Bool _wrap_IsRectVisible__SWIG_1(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_GetTime(void);
extern swig_intgo _wrap_GetFrameCount(void);
extern uintptr_t _wrap_GetOverlayDrawList(void);
extern uintptr_t _wrap_GetDrawListSharedData(void);
extern swig_type_429 _wrap_GetStyleColorName(swig_intgo arg1);
extern void _wrap_SetStateStorage(uintptr_t arg1);
extern uintptr_t _wrap_GetStateStorage(void);
extern uintptr_t _wrap_CalcTextSize__SWIG_0(swig_type_430 arg1, swig_type_431 arg2, _Bool arg3, float arg4);
extern uintptr_t _wrap_CalcTextSize__SWIG_1(swig_type_432 arg1, swig_type_433 arg2, _Bool arg3);
extern uintptr_t _wrap_CalcTextSize__SWIG_2(swig_type_434 arg1, swig_type_435 arg2);
extern uintptr_t _wrap_CalcTextSize__SWIG_3(swig_type_436 arg1);
extern void _wrap_CalcListClipping(swig_intgo arg1, float arg2, swig_voidp arg3, swig_voidp arg4);
extern _Bool _wrap_BeginChildFrame__SWIG_0(swig_intgo arg1, uintptr_t arg2, swig_intgo arg3);
extern _Bool _wrap_BeginChildFrame__SWIG_1(swig_intgo arg1, uintptr_t arg2);
extern void _wrap_EndChildFrame(void);
extern uintptr_t _wrap_ColorConvertU32ToFloat4(swig_intgo arg1);
extern swig_intgo _wrap_ColorConvertFloat4ToU32(uintptr_t arg1);
extern void _wrap_ColorConvertRGBtoHSV(float arg1, float arg2, float arg3, swig_voidp arg4, swig_voidp arg5, swig_voidp arg6);
extern void _wrap_ColorConvertHSVtoRGB(float arg1, float arg2, float arg3, swig_voidp arg4, swig_voidp arg5, swig_voidp arg6);
extern swig_intgo _wrap_GetKeyIndex(swig_intgo arg1);
extern _Bool _wrap_IsKeyDown(swig_intgo arg1);
extern _Bool _wrap_IsKeyPressed__SWIG_0(swig_intgo arg1, _Bool arg2);
extern _Bool _wrap_IsKeyPressed__SWIG_1(swig_intgo arg1);
extern _Bool _wrap_IsKeyReleased(swig_intgo arg1);
extern swig_intgo _wrap_GetKeyPressedAmount(swig_intgo arg1, float arg2, float arg3);
extern _Bool _wrap_IsMouseDown(swig_intgo arg1);
extern _Bool _wrap_IsAnyMouseDown(void);
extern _Bool _wrap_IsMouseClicked__SWIG_0(swig_intgo arg1, _Bool arg2);
extern _Bool _wrap_IsMouseClicked__SWIG_1(swig_intgo arg1);
extern _Bool _wrap_IsMouseDoubleClicked(swig_intgo arg1);
extern _Bool _wrap_IsMouseReleased(swig_intgo arg1);
extern _Bool _wrap_IsMouseDragging__SWIG_0(swig_intgo arg1, float arg2);
extern _Bool _wrap_IsMouseDragging__SWIG_1(swig_intgo arg1);
extern _Bool _wrap_IsMouseDragging__SWIG_2(void);
extern _Bool _wrap_IsMouseHoveringRect__SWIG_0(uintptr_t arg1, uintptr_t arg2, _Bool arg3);
extern _Bool _wrap_IsMouseHoveringRect__SWIG_1(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_IsMousePosValid__SWIG_0(uintptr_t arg1);
extern _Bool _wrap_IsMousePosValid__SWIG_1(void);
extern uintptr_t _wrap_GetMousePos(void);
extern uintptr_t _wrap_GetMousePosOnOpeningCurrentPopup(void);
extern uintptr_t _wrap_GetMouseDragDelta__SWIG_0(swig_intgo arg1, float arg2);
extern uintptr_t _wrap_GetMouseDragDelta__SWIG_1(swig_intgo arg1);
extern uintptr_t _wrap_GetMouseDragDelta__SWIG_2(void);
extern void _wrap_ResetMouseDragDelta__SWIG_0(swig_intgo arg1);
extern void _wrap_ResetMouseDragDelta__SWIG_1(void);
extern swig_intgo _wrap_GetMouseCursor(void);
extern void _wrap_SetMouseCursor(swig_intgo arg1);
extern void _wrap_CaptureKeyboardFromApp__SWIG_0(_Bool arg1);
extern void _wrap_CaptureKeyboardFromApp__SWIG_1(void);
extern void _wrap_CaptureMouseFromApp__SWIG_0(_Bool arg1);
extern void _wrap_CaptureMouseFromApp__SWIG_1(void);
extern swig_type_437 _wrap_GetClipboardText(void);
extern void _wrap_SetClipboardText(swig_type_438 arg1);
extern void _wrap_LoadIniSettingsFromDisk(swig_type_439 arg1);
extern void _wrap_LoadIniSettingsFromMemory__SWIG_0(swig_type_440 arg1, swig_type_441 arg2);
extern void _wrap_LoadIniSettingsFromMemory__SWIG_1(swig_type_442 arg1);
extern void _wrap_SaveIniSettingsToDisk(swig_type_443 arg1);
extern swig_type_444 _wrap_SaveIniSettingsToMemory__SWIG_0(swig_voidp arg1);
extern swig_type_445 _wrap_SaveIniSettingsToMemory__SWIG_1(void);
extern void _wrap_SetAllocatorFunctions__SWIG_0(swig_type_446 arg1, swig_type_447 arg2, uintptr_t arg3);
extern void _wrap_SetAllocatorFunctions__SWIG_1(swig_type_448 arg1, swig_type_449 arg2);
extern uintptr_t _wrap_MemAlloc(swig_type_450 arg1);
extern void _wrap_MemFree(uintptr_t arg1);
extern swig_intgo _wrap_WindowFlags_None(void);
extern swig_intgo _wrap_WindowFlags_NoTitleBar(void);
extern swig_intgo _wrap_WindowFlags_NoResize(void);
extern swig_intgo _wrap_WindowFlags_NoMove(void);
extern swig_intgo _wrap_WindowFlags_NoScrollbar(void);
extern swig_intgo _wrap_WindowFlags_NoScrollWithMouse(void);
extern swig_intgo _wrap_WindowFlags_NoCollapse(void);
extern swig_intgo _wrap_WindowFlags_AlwaysAutoResize(void);
extern swig_intgo _wrap_WindowFlags_NoSavedSettings(void);
extern swig_intgo _wrap_WindowFlags_NoInputs(void);
extern swig_intgo _wrap_WindowFlags_MenuBar(void);
extern swig_intgo _wrap_WindowFlags_HorizontalScrollbar(void);
extern swig_intgo _wrap_WindowFlags_NoFocusOnAppearing(void);
extern swig_intgo _wrap_WindowFlags_NoBringToFrontOnFocus(void);
extern swig_intgo _wrap_WindowFlags_AlwaysVerticalScrollbar(void);
extern swig_intgo _wrap_WindowFlags_AlwaysHorizontalScrollbar(void);
extern swig_intgo _wrap_WindowFlags_AlwaysUseWindowPadding(void);
extern swig_intgo _wrap_WindowFlags_NoNavInputs(void);
extern swig_intgo _wrap_WindowFlags_NoNavFocus(void);
extern swig_intgo _wrap_WindowFlags_NoNav(void);
extern swig_intgo _wrap_WindowFlags_NavFlattened(void);
extern swig_intgo _wrap_WindowFlags_ChildWindow(void);
extern swig_intgo _wrap_WindowFlags_Tooltip(void);
extern swig_intgo _wrap_WindowFlags_Popup(void);
extern swig_intgo _wrap_WindowFlags_Modal(void);
extern swig_intgo _wrap_WindowFlags_ChildMenu(void);
extern swig_intgo _wrap_InputTextFlags_None(void);
extern swig_intgo _wrap_InputTextFlags_CharsDecimal(void);
extern swig_intgo _wrap_InputTextFlags_CharsHexadecimal(void);
extern swig_intgo _wrap_InputTextFlags_CharsUppercase(void);
extern swig_intgo _wrap_InputTextFlags_CharsNoBlank(void);
extern swig_intgo _wrap_InputTextFlags_AutoSelectAll(void);
extern swig_intgo _wrap_InputTextFlags_EnterReturnsTrue(void);
extern swig_intgo _wrap_InputTextFlags_CallbackCompletion(void);
extern swig_intgo _wrap_InputTextFlags_CallbackHistory(void);
extern swig_intgo _wrap_InputTextFlags_CallbackAlways(void);
extern swig_intgo _wrap_InputTextFlags_CallbackCharFilter(void);
extern swig_intgo _wrap_InputTextFlags_AllowTabInput(void);
extern swig_intgo _wrap_InputTextFlags_CtrlEnterForNewLine(void);
extern swig_intgo _wrap_InputTextFlags_NoHorizontalScroll(void);
extern swig_intgo _wrap_InputTextFlags_AlwaysInsertMode(void);
extern swig_intgo _wrap_InputTextFlags_ReadOnly(void);
extern swig_intgo _wrap_InputTextFlags_Password(void);
extern swig_intgo _wrap_InputTextFlags_NoUndoRedo(void);
extern swig_intgo _wrap_InputTextFlags_CharsScientific(void);
extern swig_intgo _wrap_InputTextFlags_CallbackResize(void);
extern swig_intgo _wrap_InputTextFlags_Multiline(void);
extern swig_intgo _wrap_TreeNodeFlags_None(void);
extern swig_intgo _wrap_TreeNodeFlags_Selected(void);
extern swig_intgo _wrap_TreeNodeFlags_Framed(void);
extern swig_intgo _wrap_TreeNodeFlags_AllowItemOverlap(void);
extern swig_intgo _wrap_TreeNodeFlags_NoTreePushOnOpen(void);
extern swig_intgo _wrap_TreeNodeFlags_NoAutoOpenOnLog(void);
extern swig_intgo _wrap_TreeNodeFlags_DefaultOpen(void);
extern swig_intgo _wrap_TreeNodeFlags_OpenOnDoubleClick(void);
extern swig_intgo _wrap_TreeNodeFlags_OpenOnArrow(void);
extern swig_intgo _wrap_TreeNodeFlags_Leaf(void);
extern swig_intgo _wrap_TreeNodeFlags_Bullet(void);
extern swig_intgo _wrap_TreeNodeFlags_FramePadding(void);
extern swig_intgo _wrap_TreeNodeFlags_NavLeftJumpsBackHere(void);
extern swig_intgo _wrap_TreeNodeFlags_CollapsingHeader(void);
extern swig_intgo _wrap_SelectableFlags_None(void);
extern swig_intgo _wrap_SelectableFlags_DontClosePopups(void);
extern swig_intgo _wrap_SelectableFlags_SpanAllColumns(void);
extern swig_intgo _wrap_SelectableFlags_AllowDoubleClick(void);
extern swig_intgo _wrap_SelectableFlags_Disabled(void);
extern swig_intgo _wrap_ComboFlags_None(void);
extern swig_intgo _wrap_ComboFlags_PopupAlignLeft(void);
extern swig_intgo _wrap_ComboFlags_HeightSmall(void);
extern swig_intgo _wrap_ComboFlags_HeightRegular(void);
extern swig_intgo _wrap_ComboFlags_HeightLarge(void);
extern swig_intgo _wrap_ComboFlags_HeightLargest(void);
extern swig_intgo _wrap_ComboFlags_NoArrowButton(void);
extern swig_intgo _wrap_ComboFlags_NoPreview(void);
extern swig_intgo _wrap_ComboFlags_HeightMask_(void);
extern swig_intgo _wrap_FocusedFlags_None(void);
extern swig_intgo _wrap_FocusedFlags_ChildWindows(void);
extern swig_intgo _wrap_FocusedFlags_RootWindow(void);
extern swig_intgo _wrap_FocusedFlags_AnyWindow(void);
extern swig_intgo _wrap_FocusedFlags_RootAndChildWindows(void);
extern swig_intgo _wrap_HoveredFlags_None(void);
extern swig_intgo _wrap_HoveredFlags_ChildWindows(void);
extern swig_intgo _wrap_HoveredFlags_RootWindow(void);
extern swig_intgo _wrap_HoveredFlags_AnyWindow(void);
extern swig_intgo _wrap_HoveredFlags_AllowWhenBlockedByPopup(void);
extern swig_intgo _wrap_HoveredFlags_AllowWhenBlockedByActiveItem(void);
extern swig_intgo _wrap_HoveredFlags_AllowWhenOverlapped(void);
extern swig_intgo _wrap_HoveredFlags_AllowWhenDisabled(void);
extern swig_intgo _wrap_HoveredFlags_RectOnly(void);
extern swig_intgo _wrap_HoveredFlags_RootAndChildWindows(void);
extern swig_intgo _wrap_DragDropFlags_None(void);
extern swig_intgo _wrap_DragDropFlags_SourceNoPreviewTooltip(void);
extern swig_intgo _wrap_DragDropFlags_SourceNoDisableHover(void);
extern swig_intgo _wrap_DragDropFlags_SourceNoHoldToOpenOthers(void);
extern swig_intgo _wrap_DragDropFlags_SourceAllowNullID(void);
extern swig_intgo _wrap_DragDropFlags_SourceExtern(void);
extern swig_intgo _wrap_DragDropFlags_SourceAutoExpirePayload(void);
extern swig_intgo _wrap_DragDropFlags_AcceptBeforeDelivery(void);
extern swig_intgo _wrap_DragDropFlags_AcceptNoDrawDefaultRect(void);
extern swig_intgo _wrap_DragDropFlags_AcceptNoPreviewTooltip(void);
extern swig_intgo _wrap_DragDropFlags_AcceptPeekOnly(void);
extern swig_intgo _wrap_DataType_S32(void);
extern swig_intgo _wrap_DataType_U32(void);
extern swig_intgo _wrap_DataType_S64(void);
extern swig_intgo _wrap_DataType_U64(void);
extern swig_intgo _wrap_DataType_Float(void);
extern swig_intgo _wrap_DataType_Double(void);
extern swig_intgo _wrap_DataType_COUNT(void);
extern swig_intgo _wrap_Dir_None(void);
extern swig_intgo _wrap_Dir_Left(void);
extern swig_intgo _wrap_Dir_Right(void);
extern swig_intgo _wrap_Dir_Up(void);
extern swig_intgo _wrap_Dir_Down(void);
extern swig_intgo _wrap_Dir_COUNT(void);
extern swig_intgo _wrap_Key_Tab(void);
extern swig_intgo _wrap_Key_LeftArrow(void);
extern swig_intgo _wrap_Key_RightArrow(void);
extern swig_intgo _wrap_Key_UpArrow(void);
extern swig_intgo _wrap_Key_DownArrow(void);
extern swig_intgo _wrap_Key_PageUp(void);
extern swig_intgo _wrap_Key_PageDown(void);
extern swig_intgo _wrap_Key_Home(void);
extern swig_intgo _wrap_Key_End(void);
extern swig_intgo _wrap_Key_Insert(void);
extern swig_intgo _wrap_Key_Delete(void);
extern swig_intgo _wrap_Key_Backspace(void);
extern swig_intgo _wrap_Key_Space(void);
extern swig_intgo _wrap_Key_Enter(void);
extern swig_intgo _wrap_Key_Escape(void);
extern swig_intgo _wrap_Key_A(void);
extern swig_intgo _wrap_Key_C(void);
extern swig_intgo _wrap_Key_V(void);
extern swig_intgo _wrap_Key_X(void);
extern swig_intgo _wrap_Key_Y(void);
extern swig_intgo _wrap_Key_Z(void);
extern swig_intgo _wrap_Key_COUNT(void);
extern swig_intgo _wrap_NavInput_Activate(void);
extern swig_intgo _wrap_NavInput_Cancel(void);
extern swig_intgo _wrap_NavInput_Input(void);
extern swig_intgo _wrap_NavInput_Menu(void);
extern swig_intgo _wrap_NavInput_DpadLeft(void);
extern swig_intgo _wrap_NavInput_DpadRight(void);
extern swig_intgo _wrap_NavInput_DpadUp(void);
extern swig_intgo _wrap_NavInput_DpadDown(void);
extern swig_intgo _wrap_NavInput_LStickLeft(void);
extern swig_intgo _wrap_NavInput_LStickRight(void);
extern swig_intgo _wrap_NavInput_LStickUp(void);
extern swig_intgo _wrap_NavInput_LStickDown(void);
extern swig_intgo _wrap_NavInput_FocusPrev(void);
extern swig_intgo _wrap_NavInput_FocusNext(void);
extern swig_intgo _wrap_NavInput_TweakSlow(void);
extern swig_intgo _wrap_NavInput_TweakFast(void);
extern swig_intgo _wrap_NavInput_KeyMenu_(void);
extern swig_intgo _wrap_NavInput_KeyLeft_(void);
extern swig_intgo _wrap_NavInput_KeyRight_(void);
extern swig_intgo _wrap_NavInput_KeyUp_(void);
extern swig_intgo _wrap_NavInput_KeyDown_(void);
extern swig_intgo _wrap_NavInput_COUNT(void);
extern swig_intgo _wrap_NavInput_InternalStart_(void);
extern swig_intgo _wrap_ConfigFlags_NavEnableKeyboard(void);
extern swig_intgo _wrap_ConfigFlags_NavEnableGamepad(void);
extern swig_intgo _wrap_ConfigFlags_NavEnableSetMousePos(void);
extern swig_intgo _wrap_ConfigFlags_NavNoCaptureKeyboard(void);
extern swig_intgo _wrap_ConfigFlags_NoMouse(void);
extern swig_intgo _wrap_ConfigFlags_NoMouseCursorChange(void);
extern swig_intgo _wrap_ConfigFlags_IsSRGB(void);
extern swig_intgo _wrap_ConfigFlags_IsTouchScreen(void);
extern swig_intgo _wrap_BackendFlags_HasGamepad(void);
extern swig_intgo _wrap_BackendFlags_HasMouseCursors(void);
extern swig_intgo _wrap_BackendFlags_HasSetMousePos(void);
extern swig_intgo _wrap_Col_Text(void);
extern swig_intgo _wrap_Col_TextDisabled(void);
extern swig_intgo _wrap_Col_WindowBg(void);
extern swig_intgo _wrap_Col_ChildBg(void);
extern swig_intgo _wrap_Col_PopupBg(void);
extern swig_intgo _wrap_Col_Border(void);
extern swig_intgo _wrap_Col_BorderShadow(void);
extern swig_intgo _wrap_Col_FrameBg(void);
extern swig_intgo _wrap_Col_FrameBgHovered(void);
extern swig_intgo _wrap_Col_FrameBgActive(void);
extern swig_intgo _wrap_Col_TitleBg(void);
extern swig_intgo _wrap_Col_TitleBgActive(void);
extern swig_intgo _wrap_Col_TitleBgCollapsed(void);
extern swig_intgo _wrap_Col_MenuBarBg(void);
extern swig_intgo _wrap_Col_ScrollbarBg(void);
extern swig_intgo _wrap_Col_ScrollbarGrab(void);
extern swig_intgo _wrap_Col_ScrollbarGrabHovered(void);
extern swig_intgo _wrap_Col_ScrollbarGrabActive(void);
extern swig_intgo _wrap_Col_CheckMark(void);
extern swig_intgo _wrap_Col_SliderGrab(void);
extern swig_intgo _wrap_Col_SliderGrabActive(void);
extern swig_intgo _wrap_Col_Button(void);
extern swig_intgo _wrap_Col_ButtonHovered(void);
extern swig_intgo _wrap_Col_ButtonActive(void);
extern swig_intgo _wrap_Col_Header(void);
extern swig_intgo _wrap_Col_HeaderHovered(void);
extern swig_intgo _wrap_Col_HeaderActive(void);
extern swig_intgo _wrap_Col_Separator(void);
extern swig_intgo _wrap_Col_SeparatorHovered(void);
extern swig_intgo _wrap_Col_SeparatorActive(void);
extern swig_intgo _wrap_Col_ResizeGrip(void);
extern swig_intgo _wrap_Col_ResizeGripHovered(void);
extern swig_intgo _wrap_Col_ResizeGripActive(void);
extern swig_intgo _wrap_Col_PlotLines(void);
extern swig_intgo _wrap_Col_PlotLinesHovered(void);
extern swig_intgo _wrap_Col_PlotHistogram(void);
extern swig_intgo _wrap_Col_PlotHistogramHovered(void);
extern swig_intgo _wrap_Col_TextSelectedBg(void);
extern swig_intgo _wrap_Col_DragDropTarget(void);
extern swig_intgo _wrap_Col_NavHighlight(void);
extern swig_intgo _wrap_Col_NavWindowingHighlight(void);
extern swig_intgo _wrap_Col_NavWindowingDimBg(void);
extern swig_intgo _wrap_Col_ModalWindowDimBg(void);
extern swig_intgo _wrap_Col_COUNT(void);
extern swig_intgo _wrap_StyleVar_Alpha(void);
extern swig_intgo _wrap_StyleVar_WindowPadding(void);
extern swig_intgo _wrap_StyleVar_WindowRounding(void);
extern swig_intgo _wrap_StyleVar_WindowBorderSize(void);
extern swig_intgo _wrap_StyleVar_WindowMinSize(void);
extern swig_intgo _wrap_StyleVar_WindowTitleAlign(void);
extern swig_intgo _wrap_StyleVar_ChildRounding(void);
extern swig_intgo _wrap_StyleVar_ChildBorderSize(void);
extern swig_intgo _wrap_StyleVar_PopupRounding(void);
extern swig_intgo _wrap_StyleVar_PopupBorderSize(void);
extern swig_intgo _wrap_StyleVar_FramePadding(void);
extern swig_intgo _wrap_StyleVar_FrameRounding(void);
extern swig_intgo _wrap_StyleVar_FrameBorderSize(void);
extern swig_intgo _wrap_StyleVar_ItemSpacing(void);
extern swig_intgo _wrap_StyleVar_ItemInnerSpacing(void);
extern swig_intgo _wrap_StyleVar_IndentSpacing(void);
extern swig_intgo _wrap_StyleVar_ScrollbarSize(void);
extern swig_intgo _wrap_StyleVar_ScrollbarRounding(void);
extern swig_intgo _wrap_StyleVar_GrabMinSize(void);
extern swig_intgo _wrap_StyleVar_GrabRounding(void);
extern swig_intgo _wrap_StyleVar_ButtonTextAlign(void);
extern swig_intgo _wrap_StyleVar_COUNT(void);
extern swig_intgo _wrap_ColorEditFlags_None(void);
extern swig_intgo _wrap_ColorEditFlags_NoAlpha(void);
extern swig_intgo _wrap_ColorEditFlags_NoPicker(void);
extern swig_intgo _wrap_ColorEditFlags_NoOptions(void);
extern swig_intgo _wrap_ColorEditFlags_NoSmallPreview(void);
extern swig_intgo _wrap_ColorEditFlags_NoInputs(void);
extern swig_intgo _wrap_ColorEditFlags_NoTooltip(void);
extern swig_intgo _wrap_ColorEditFlags_NoLabel(void);
extern swig_intgo _wrap_ColorEditFlags_NoSidePreview(void);
extern swig_intgo _wrap_ColorEditFlags_NoDragDrop(void);
extern swig_intgo _wrap_ColorEditFlags_AlphaBar(void);
extern swig_intgo _wrap_ColorEditFlags_AlphaPreview(void);
extern swig_intgo _wrap_ColorEditFlags_AlphaPreviewHalf(void);
extern swig_intgo _wrap_ColorEditFlags_HDR(void);
extern swig_intgo _wrap_ColorEditFlags_RGB(void);
extern swig_intgo _wrap_ColorEditFlags_HSV(void);
extern swig_intgo _wrap_ColorEditFlags_HEX(void);
extern swig_intgo _wrap_ColorEditFlags_Uint8(void);
extern swig_intgo _wrap_ColorEditFlags_Float(void);
extern swig_intgo _wrap_ColorEditFlags_PickerHueBar(void);
extern swig_intgo _wrap_ColorEditFlags_PickerHueWheel(void);
extern swig_intgo _wrap_ColorEditFlags__InputsMask(void);
extern swig_intgo _wrap_ColorEditFlags__DataTypeMask(void);
extern swig_intgo _wrap_ColorEditFlags__PickerMask(void);
extern swig_intgo _wrap_ColorEditFlags__OptionsDefault(void);
extern swig_intgo _wrap_MouseCursor_None(void);
extern swig_intgo _wrap_MouseCursor_Arrow(void);
extern swig_intgo _wrap_MouseCursor_TextInput(void);
extern swig_intgo _wrap_MouseCursor_ResizeAll(void);
extern swig_intgo _wrap_MouseCursor_ResizeNS(void);
extern swig_intgo _wrap_MouseCursor_ResizeEW(void);
extern swig_intgo _wrap_MouseCursor_ResizeNESW(void);
extern swig_intgo _wrap_MouseCursor_ResizeNWSE(void);
extern swig_intgo _wrap_MouseCursor_Hand(void);
extern swig_intgo _wrap_MouseCursor_COUNT(void);
extern swig_intgo _wrap_Cond_Always(void);
extern swig_intgo _wrap_Cond_Once(void);
extern swig_intgo _wrap_Cond_FirstUseEver(void);
extern swig_intgo _wrap_Cond_Appearing(void);
extern void _wrap_Style_Alpha_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_Alpha_get(uintptr_t arg1);
extern void _wrap_Style_WindowPadding_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_WindowPadding_get(uintptr_t arg1);
extern void _wrap_Style_WindowRounding_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_WindowRounding_get(uintptr_t arg1);
extern void _wrap_Style_WindowBorderSize_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_WindowBorderSize_get(uintptr_t arg1);
extern void _wrap_Style_WindowMinSize_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_WindowMinSize_get(uintptr_t arg1);
extern void _wrap_Style_WindowTitleAlign_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_WindowTitleAlign_get(uintptr_t arg1);
extern void _wrap_Style_ChildRounding_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_ChildRounding_get(uintptr_t arg1);
extern void _wrap_Style_ChildBorderSize_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_ChildBorderSize_get(uintptr_t arg1);
extern void _wrap_Style_PopupRounding_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_PopupRounding_get(uintptr_t arg1);
extern void _wrap_Style_PopupBorderSize_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_PopupBorderSize_get(uintptr_t arg1);
extern void _wrap_Style_FramePadding_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_FramePadding_get(uintptr_t arg1);
extern void _wrap_Style_FrameRounding_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_FrameRounding_get(uintptr_t arg1);
extern void _wrap_Style_FrameBorderSize_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_FrameBorderSize_get(uintptr_t arg1);
extern void _wrap_Style_ItemSpacing_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_ItemSpacing_get(uintptr_t arg1);
extern void _wrap_Style_ItemInnerSpacing_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_ItemInnerSpacing_get(uintptr_t arg1);
extern void _wrap_Style_TouchExtraPadding_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_TouchExtraPadding_get(uintptr_t arg1);
extern void _wrap_Style_IndentSpacing_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_IndentSpacing_get(uintptr_t arg1);
extern void _wrap_Style_ColumnsMinSpacing_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_ColumnsMinSpacing_get(uintptr_t arg1);
extern void _wrap_Style_ScrollbarSize_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_ScrollbarSize_get(uintptr_t arg1);
extern void _wrap_Style_ScrollbarRounding_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_ScrollbarRounding_get(uintptr_t arg1);
extern void _wrap_Style_GrabMinSize_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_GrabMinSize_get(uintptr_t arg1);
extern void _wrap_Style_GrabRounding_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_GrabRounding_get(uintptr_t arg1);
extern void _wrap_Style_ButtonTextAlign_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_ButtonTextAlign_get(uintptr_t arg1);
extern void _wrap_Style_DisplayWindowPadding_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_DisplayWindowPadding_get(uintptr_t arg1);
extern void _wrap_Style_DisplaySafeAreaPadding_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_DisplaySafeAreaPadding_get(uintptr_t arg1);
extern void _wrap_Style_MouseCursorScale_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_MouseCursorScale_get(uintptr_t arg1);
extern void _wrap_Style_AntiAliasedLines_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_Style_AntiAliasedLines_get(uintptr_t arg1);
extern void _wrap_Style_AntiAliasedFill_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_Style_AntiAliasedFill_get(uintptr_t arg1);
extern void _wrap_Style_CurveTessellationTol_set(uintptr_t arg1, float arg2);
extern float _wrap_Style_CurveTessellationTol_get(uintptr_t arg1);
extern void _wrap_Style_Colors_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Style_Colors_get(uintptr_t arg1);
extern uintptr_t _wrap_new_Style(void);
extern void _wrap_Style_ScaleAllSizes(uintptr_t arg1, float arg2);
extern void _wrap_delete_Style(uintptr_t arg1);
extern void _wrap_IO_ConfigFlags_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IO_ConfigFlags_get(uintptr_t arg1);
extern void _wrap_IO_BackendFlags_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IO_BackendFlags_get(uintptr_t arg1);
extern void _wrap_IO_DisplaySize_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_DisplaySize_get(uintptr_t arg1);
extern void _wrap_IO_DeltaTime_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_DeltaTime_get(uintptr_t arg1);
extern void _wrap_IO_IniSavingRate_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_IniSavingRate_get(uintptr_t arg1);
extern void _wrap_IO_IniFilename_set(uintptr_t arg1, swig_type_451 arg2);
extern swig_type_452 _wrap_IO_IniFilename_get(uintptr_t arg1);
extern void _wrap_IO_LogFilename_set(uintptr_t arg1, swig_type_453 arg2);
extern swig_type_454 _wrap_IO_LogFilename_get(uintptr_t arg1);
extern void _wrap_IO_MouseDoubleClickTime_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_MouseDoubleClickTime_get(uintptr_t arg1);
extern void _wrap_IO_MouseDoubleClickMaxDist_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_MouseDoubleClickMaxDist_get(uintptr_t arg1);
extern void _wrap_IO_MouseDragThreshold_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_MouseDragThreshold_get(uintptr_t arg1);
extern void _wrap_IO_KeyMap_set(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_IO_KeyMap_get(uintptr_t arg1);
extern void _wrap_IO_KeyRepeatDelay_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_KeyRepeatDelay_get(uintptr_t arg1);
extern void _wrap_IO_KeyRepeatRate_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_KeyRepeatRate_get(uintptr_t arg1);
extern void _wrap_IO_UserData_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_UserData_get(uintptr_t arg1);
extern void _wrap_IO_Fonts_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_Fonts_get(uintptr_t arg1);
extern void _wrap_IO_FontGlobalScale_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_FontGlobalScale_get(uintptr_t arg1);
extern void _wrap_IO_FontAllowUserScaling_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_FontAllowUserScaling_get(uintptr_t arg1);
extern void _wrap_IO_FontDefault_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_FontDefault_get(uintptr_t arg1);
extern void _wrap_IO_DisplayFramebufferScale_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_DisplayFramebufferScale_get(uintptr_t arg1);
extern void _wrap_IO_DisplayVisibleMin_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_DisplayVisibleMin_get(uintptr_t arg1);
extern void _wrap_IO_DisplayVisibleMax_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_DisplayVisibleMax_get(uintptr_t arg1);
extern void _wrap_IO_MouseDrawCursor_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_MouseDrawCursor_get(uintptr_t arg1);
extern void _wrap_IO_ConfigMacOSXBehaviors_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_ConfigMacOSXBehaviors_get(uintptr_t arg1);
extern void _wrap_IO_ConfigInputTextCursorBlink_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_ConfigInputTextCursorBlink_get(uintptr_t arg1);
extern void _wrap_IO_ConfigResizeWindowsFromEdges_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_ConfigResizeWindowsFromEdges_get(uintptr_t arg1);
extern void _wrap_IO_GetClipboardTextFn_set(uintptr_t arg1, swig_type_455 arg2);
extern swig_type_456 _wrap_IO_GetClipboardTextFn_get(uintptr_t arg1);
extern void _wrap_IO_SetClipboardTextFn_set(uintptr_t arg1, swig_type_457 arg2);
extern swig_type_458 _wrap_IO_SetClipboardTextFn_get(uintptr_t arg1);
extern void _wrap_IO_ClipboardUserData_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_ClipboardUserData_get(uintptr_t arg1);
extern void _wrap_IO_ImeSetInputScreenPosFn_set(uintptr_t arg1, swig_type_459 arg2);
extern swig_type_460 _wrap_IO_ImeSetInputScreenPosFn_get(uintptr_t arg1);
extern void _wrap_IO_ImeWindowHandle_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_ImeWindowHandle_get(uintptr_t arg1);
extern void _wrap_IO_MousePos_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_MousePos_get(uintptr_t arg1);
extern void _wrap_IO_MouseDown_set(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_IO_MouseDown_get(uintptr_t arg1);
extern void _wrap_IO_MouseWheel_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_MouseWheel_get(uintptr_t arg1);
extern void _wrap_IO_MouseWheelH_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_MouseWheelH_get(uintptr_t arg1);
extern void _wrap_IO_KeyCtrl_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_KeyCtrl_get(uintptr_t arg1);
extern void _wrap_IO_KeyShift_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_KeyShift_get(uintptr_t arg1);
extern void _wrap_IO_KeyAlt_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_KeyAlt_get(uintptr_t arg1);
extern void _wrap_IO_KeySuper_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_KeySuper_get(uintptr_t arg1);
extern void _wrap_IO_KeysDown_set(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_IO_KeysDown_get(uintptr_t arg1);
extern void _wrap_IO_InputCharacters_set(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_IO_InputCharacters_get(uintptr_t arg1);
extern void _wrap_IO_NavInputs_set(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_IO_NavInputs_get(uintptr_t arg1);
extern void _wrap_IO_AddInputCharacter(uintptr_t arg1, short arg2);
extern void _wrap_IO_AddInputCharactersUTF8(uintptr_t arg1, swig_type_461 arg2);
extern void _wrap_IO_ClearInputCharacters(uintptr_t arg1);
extern void _wrap_IO_WantCaptureMouse_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_WantCaptureMouse_get(uintptr_t arg1);
extern void _wrap_IO_WantCaptureKeyboard_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_WantCaptureKeyboard_get(uintptr_t arg1);
extern void _wrap_IO_WantTextInput_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_WantTextInput_get(uintptr_t arg1);
extern void _wrap_IO_WantSetMousePos_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_WantSetMousePos_get(uintptr_t arg1);
extern void _wrap_IO_WantSaveIniSettings_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_WantSaveIniSettings_get(uintptr_t arg1);
extern void _wrap_IO_NavActive_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_NavActive_get(uintptr_t arg1);
extern void _wrap_IO_NavVisible_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_IO_NavVisible_get(uintptr_t arg1);
extern void _wrap_IO_Framerate_set(uintptr_t arg1, float arg2);
extern float _wrap_IO_Framerate_get(uintptr_t arg1);
extern void _wrap_IO_MetricsRenderVertices_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IO_MetricsRenderVertices_get(uintptr_t arg1);
extern void _wrap_IO_MetricsRenderIndices_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IO_MetricsRenderIndices_get(uintptr_t arg1);
extern void _wrap_IO_MetricsRenderWindows_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IO_MetricsRenderWindows_get(uintptr_t arg1);
extern void _wrap_IO_MetricsActiveWindows_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IO_MetricsActiveWindows_get(uintptr_t arg1);
extern void _wrap_IO_MetricsActiveAllocations_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_IO_MetricsActiveAllocations_get(uintptr_t arg1);
extern void _wrap_IO_MouseDelta_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_IO_MouseDelta_get(uintptr_t arg1);
extern uintptr_t _wrap_new_IO(void);
extern void _wrap_delete_IO(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_EventFlag_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_EventFlag_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_Flags_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_Flags_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_UserData_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_InputTextCallbackData_UserData_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_EventChar_set(uintptr_t arg1, short arg2);
extern short _wrap_InputTextCallbackData_EventChar_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_EventKey_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_EventKey_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_Buf_set(uintptr_t arg1, swig_type_462 arg2);
extern swig_type_463 _wrap_InputTextCallbackData_Buf_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_BufTextLen_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_BufTextLen_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_BufSize_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_BufSize_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_BufDirty_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_InputTextCallbackData_BufDirty_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_CursorPos_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_CursorPos_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_SelectionStart_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_SelectionStart_get(uintptr_t arg1);
extern void _wrap_InputTextCallbackData_SelectionEnd_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_InputTextCallbackData_SelectionEnd_get(uintptr_t arg1);
extern uintptr_t _wrap_new_InputTextCallbackData(void);
extern void _wrap_InputTextCallbackData_DeleteChars(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_InputTextCallbackData_InsertChars__SWIG_0(uintptr_t arg1, swig_intgo arg2, swig_type_464 arg3, swig_type_465 arg4);
extern void _wrap_InputTextCallbackData_InsertChars__SWIG_1(uintptr_t arg1, swig_intgo arg2, swig_type_466 arg3);
extern _Bool _wrap_InputTextCallbackData_HasSelection(uintptr_t arg1);
extern void _wrap_delete_InputTextCallbackData(uintptr_t arg1);
extern void _wrap_SizeCallbackData_UserData_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SizeCallbackData_UserData_get(uintptr_t arg1);
extern void _wrap_SizeCallbackData_Pos_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SizeCallbackData_Pos_get(uintptr_t arg1);
extern void _wrap_SizeCallbackData_CurrentSize_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SizeCallbackData_CurrentSize_get(uintptr_t arg1);
extern void _wrap_SizeCallbackData_DesiredSize_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SizeCallbackData_DesiredSize_get(uintptr_t arg1);
extern uintptr_t _wrap_new_SizeCallbackData(void);
extern void _wrap_delete_SizeCallbackData(uintptr_t arg1);
extern void _wrap_Payload_Data_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Payload_Data_get(uintptr_t arg1);
extern void _wrap_Payload_DataSize_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Payload_DataSize_get(uintptr_t arg1);
extern void _wrap_Payload_SourceId_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Payload_SourceId_get(uintptr_t arg1);
extern void _wrap_Payload_SourceParentId_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Payload_SourceParentId_get(uintptr_t arg1);
extern void _wrap_Payload_DataFrameCount_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Payload_DataFrameCount_get(uintptr_t arg1);
extern void _wrap_Payload_DataType_set(uintptr_t arg1, swig_type_467 arg2);
extern swig_type_468 _wrap_Payload_DataType_get(uintptr_t arg1);
extern void _wrap_Payload_Preview_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_Payload_Preview_get(uintptr_t arg1);
extern void _wrap_Payload_Delivery_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_Payload_Delivery_get(uintptr_t arg1);
extern uintptr_t _wrap_new_Payload(void);
extern void _wrap_Payload_Clear(uintptr_t arg1);
extern _Bool _wrap_Payload_IsDataType(uintptr_t arg1, swig_type_469 arg2);
extern _Bool _wrap_Payload_IsPreview(uintptr_t arg1);
extern _Bool _wrap_Payload_IsDelivery(uintptr_t arg1);
extern void _wrap_delete_Payload(uintptr_t arg1);
extern void _wrap_Color_Value_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Color_Value_get(uintptr_t arg1);
extern uintptr_t _wrap_new_Color__SWIG_0(void);
extern uintptr_t _wrap_new_Color__SWIG_1(swig_intgo arg1, swig_intgo arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_new_Color__SWIG_2(swig_intgo arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_Color__SWIG_3(swig_intgo arg1);
extern uintptr_t _wrap_new_Color__SWIG_4(float arg1, float arg2, float arg3, float arg4);
extern uintptr_t _wrap_new_Color__SWIG_5(float arg1, float arg2, float arg3);
extern uintptr_t _wrap_new_Color__SWIG_6(uintptr_t arg1);
extern swig_intgo _wrap_Color_U32(uintptr_t arg1);
extern uintptr_t _wrap_Color_Vec4(uintptr_t arg1);
extern void _wrap_Color_SetHSV__SWIG_0(uintptr_t arg1, float arg2, float arg3, float arg4, float arg5);
extern void _wrap_Color_SetHSV__SWIG_1(uintptr_t arg1, float arg2, float arg3, float arg4);
extern uintptr_t _wrap_Color_HSV__SWIG_0(float arg1, float arg2, float arg3, float arg4);
extern uintptr_t _wrap_Color_HSV__SWIG_1(float arg1, float arg2, float arg3);
extern void _wrap_delete_Color(uintptr_t arg1);
extern void _wrap_ListClipper_StartPosY_set(uintptr_t arg1, float arg2);
extern float _wrap_ListClipper_StartPosY_get(uintptr_t arg1);
extern void _wrap_ListClipper_ItemsHeight_set(uintptr_t arg1, float arg2);
extern float _wrap_ListClipper_ItemsHeight_get(uintptr_t arg1);
extern void _wrap_ListClipper_ItemsCount_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ListClipper_ItemsCount_get(uintptr_t arg1);
extern void _wrap_ListClipper_StepNo_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ListClipper_StepNo_get(uintptr_t arg1);
extern void _wrap_ListClipper_DisplayStart_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ListClipper_DisplayStart_get(uintptr_t arg1);
extern void _wrap_ListClipper_DisplayEnd_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_ListClipper_DisplayEnd_get(uintptr_t arg1);
extern uintptr_t _wrap_new_ListClipper__SWIG_0(swig_intgo arg1, float arg2);
extern uintptr_t _wrap_new_ListClipper__SWIG_1(swig_intgo arg1);
extern uintptr_t _wrap_new_ListClipper__SWIG_2(void);
extern void _wrap_delete_ListClipper(uintptr_t arg1);
extern _Bool _wrap_ListClipper_Step(uintptr_t arg1);
extern void _wrap_ListClipper_Begin__SWIG_0(uintptr_t arg1, swig_intgo arg2, float arg3);
extern void _wrap_ListClipper_Begin__SWIG_1(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ListClipper_End(uintptr_t arg1);
extern void _wrap_DrawCmd_ElemCount_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawCmd_ElemCount_get(uintptr_t arg1);
extern void _wrap_DrawCmd_ClipRect_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawCmd_ClipRect_get(uintptr_t arg1);
extern void _wrap_DrawCmd_TextureId_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawCmd_TextureId_get(uintptr_t arg1);
extern void _wrap_DrawCmd_UserCallback_set(uintptr_t arg1, swig_type_470 arg2);
extern swig_type_471 _wrap_DrawCmd_UserCallback_get(uintptr_t arg1);
extern void _wrap_DrawCmd_UserCallbackData_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawCmd_UserCallbackData_get(uintptr_t arg1);
extern uintptr_t _wrap_new_DrawCmd(void);
extern void _wrap_delete_DrawCmd(uintptr_t arg1);
extern void _wrap_DrawCmdUserCall(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_DrawIdxSize_get(void);
extern void _wrap_DrawVert_pos_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawVert_pos_get(uintptr_t arg1);
extern void _wrap_DrawVert_uv_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawVert_uv_get(uintptr_t arg1);
extern void _wrap_DrawVert_col_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawVert_col_get(uintptr_t arg1);
extern uintptr_t _wrap_new_DrawVert(void);
extern void _wrap_delete_DrawVert(uintptr_t arg1);
extern swig_intgo _wrap_DrawVertSize_get(void);
extern void _wrap_DrawVertOffset(swig_voidp arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_DrawChannel_CmdBuffer_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawChannel_CmdBuffer_get(uintptr_t arg1);
extern void _wrap_DrawChannel_IdxBuffer_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawChannel_IdxBuffer_get(uintptr_t arg1);
extern uintptr_t _wrap_new_DrawChannel(void);
extern void _wrap_delete_DrawChannel(uintptr_t arg1);
extern swig_intgo _wrap_DrawCornerFlags_TopLeft(void);
extern swig_intgo _wrap_DrawCornerFlags_TopRight(void);
extern swig_intgo _wrap_DrawCornerFlags_BotLeft(void);
extern swig_intgo _wrap_DrawCornerFlags_BotRight(void);
extern swig_intgo _wrap_DrawCornerFlags_Top(void);
extern swig_intgo _wrap_DrawCornerFlags_Bot(void);
extern swig_intgo _wrap_DrawCornerFlags_Left(void);
extern swig_intgo _wrap_DrawCornerFlags_Right(void);
extern swig_intgo _wrap_DrawCornerFlags_All(void);
extern swig_intgo _wrap_DrawListFlags_AntiAliasedLines(void);
extern swig_intgo _wrap_DrawListFlags_AntiAliasedFill(void);
extern void _wrap_DrawList_CmdBuffer_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList_CmdBuffer_get(uintptr_t arg1);
extern void _wrap_DrawList_IdxBuffer_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList_IdxBuffer_get(uintptr_t arg1);
extern void _wrap_DrawList_VtxBuffer_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList_VtxBuffer_get(uintptr_t arg1);
extern void _wrap_DrawList_Flags_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawList_Flags_get(uintptr_t arg1);
extern void _wrap_DrawList__Data_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList__Data_get(uintptr_t arg1);
extern void _wrap_DrawList__OwnerName_set(uintptr_t arg1, swig_type_472 arg2);
extern swig_type_473 _wrap_DrawList__OwnerName_get(uintptr_t arg1);
extern void _wrap_DrawList__VtxCurrentIdx_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawList__VtxCurrentIdx_get(uintptr_t arg1);
extern void _wrap_DrawList__VtxWritePtr_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList__VtxWritePtr_get(uintptr_t arg1);
extern void _wrap_DrawList__IdxWritePtr_set(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_DrawList__IdxWritePtr_get(uintptr_t arg1);
extern void _wrap_DrawList__ClipRectStack_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList__ClipRectStack_get(uintptr_t arg1);
extern void _wrap_DrawList__TextureIdStack_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList__TextureIdStack_get(uintptr_t arg1);
extern void _wrap_DrawList__Path_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList__Path_get(uintptr_t arg1);
extern void _wrap_DrawList__ChannelsCurrent_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawList__ChannelsCurrent_get(uintptr_t arg1);
extern void _wrap_DrawList__ChannelsCount_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawList__ChannelsCount_get(uintptr_t arg1);
extern void _wrap_DrawList__Channels_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawList__Channels_get(uintptr_t arg1);
extern uintptr_t _wrap_new_DrawList(uintptr_t arg1);
extern void _wrap_delete_DrawList(uintptr_t arg1);
extern void _wrap_DrawList_PushClipRect__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, _Bool arg4);
extern void _wrap_DrawList_PushClipRect__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_DrawList_PushClipRectFullScreen(uintptr_t arg1);
extern void _wrap_DrawList_PopClipRect(uintptr_t arg1);
extern void _wrap_DrawList_PushTextureID(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_DrawList_PopTextureID(uintptr_t arg1);
extern uintptr_t _wrap_DrawList_GetClipRectMin(uintptr_t arg1);
extern uintptr_t _wrap_DrawList_GetClipRectMax(uintptr_t arg1);
extern void _wrap_DrawList_AddLine__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, float arg5);
extern void _wrap_DrawList_AddLine__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern void _wrap_DrawList_AddRect__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, float arg5, swig_intgo arg6, float arg7);
extern void _wrap_DrawList_AddRect__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, float arg5, swig_intgo arg6);
extern void _wrap_DrawList_AddRect__SWIG_2(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, float arg5);
extern void _wrap_DrawList_AddRect__SWIG_3(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern void _wrap_DrawList_AddRectFilled__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, float arg5, swig_intgo arg6);
extern void _wrap_DrawList_AddRectFilled__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, float arg5);
extern void _wrap_DrawList_AddRectFilled__SWIG_2(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern void _wrap_DrawList_AddRectFilledMultiColor(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, swig_intgo arg6, swig_intgo arg7);
extern void _wrap_DrawList_AddQuad__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_intgo arg6, float arg7);
extern void _wrap_DrawList_AddQuad__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_intgo arg6);
extern void _wrap_DrawList_AddQuadFilled(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_intgo arg6);
extern void _wrap_DrawList_AddTriangle__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5, float arg6);
extern void _wrap_DrawList_AddTriangle__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern void _wrap_DrawList_AddTriangleFilled(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern void _wrap_DrawList_AddCircle__SWIG_0(uintptr_t arg1, uintptr_t arg2, float arg3, swig_intgo arg4, swig_intgo arg5, float arg6);
extern void _wrap_DrawList_AddCircle__SWIG_1(uintptr_t arg1, uintptr_t arg2, float arg3, swig_intgo arg4, swig_intgo arg5);
extern void _wrap_DrawList_AddCircle__SWIG_2(uintptr_t arg1, uintptr_t arg2, float arg3, swig_intgo arg4);
extern void _wrap_DrawList_AddCircleFilled__SWIG_0(uintptr_t arg1, uintptr_t arg2, float arg3, swig_intgo arg4, swig_intgo arg5);
extern void _wrap_DrawList_AddCircleFilled__SWIG_1(uintptr_t arg1, uintptr_t arg2, float arg3, swig_intgo arg4);
extern void _wrap_DrawList_AddText__SWIG_0(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_type_474 arg4, swig_type_475 arg5);
extern void _wrap_DrawList_AddText__SWIG_1(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_type_476 arg4);
extern void _wrap_DrawList_AddText__SWIG_2(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, swig_type_477 arg6, swig_type_478 arg7, float arg8, uintptr_t arg9);
extern void _wrap_DrawList_AddText__SWIG_3(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, swig_type_479 arg6, swig_type_480 arg7, float arg8);
extern void _wrap_DrawList_AddText__SWIG_4(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, swig_type_481 arg6, swig_type_482 arg7);
extern void _wrap_DrawList_AddText__SWIG_5(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, swig_type_483 arg6);
extern void _wrap_DrawList_AddImage__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, swig_intgo arg7);
extern void _wrap_DrawList_AddImage__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern void _wrap_DrawList_AddImage__SWIG_2(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5);
extern void _wrap_DrawList_AddImage__SWIG_3(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_DrawList_AddImageQuad__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7, uintptr_t arg8, uintptr_t arg9, uintptr_t arg10, swig_intgo arg11);
extern void _wrap_DrawList_AddImageQuad__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7, uintptr_t arg8, uintptr_t arg9, uintptr_t arg10);
extern void _wrap_DrawList_AddImageQuad__SWIG_2(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7, uintptr_t arg8, uintptr_t arg9);
extern void _wrap_DrawList_AddImageQuad__SWIG_3(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7, uintptr_t arg8);
extern void _wrap_DrawList_AddImageQuad__SWIG_4(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, uintptr_t arg7);
extern void _wrap_DrawList_AddImageQuad__SWIG_5(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern void _wrap_DrawList_AddImageRounded__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, swig_intgo arg7, float arg8, swig_intgo arg9);
extern void _wrap_DrawList_AddImageRounded__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6, swig_intgo arg7, float arg8);
extern void _wrap_DrawList_AddPolyline(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4, _Bool arg5, float arg6);
extern void _wrap_DrawList_AddConvexPolyFilled(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, swig_intgo arg4);
extern void _wrap_DrawList_AddBezierCurve__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_intgo arg6, float arg7, swig_intgo arg8);
extern void _wrap_DrawList_AddBezierCurve__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, swig_intgo arg6, float arg7);
extern void _wrap_DrawList_PathClear(uintptr_t arg1);
extern void _wrap_DrawList_PathLineTo(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_DrawList_PathLineToMergeDuplicate(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_DrawList_PathFillConvex(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_DrawList_PathStroke__SWIG_0(uintptr_t arg1, swig_intgo arg2, _Bool arg3, float arg4);
extern void _wrap_DrawList_PathStroke__SWIG_1(uintptr_t arg1, swig_intgo arg2, _Bool arg3);
extern void _wrap_DrawList_PathArcTo__SWIG_0(uintptr_t arg1, uintptr_t arg2, float arg3, float arg4, float arg5, swig_intgo arg6);
extern void _wrap_DrawList_PathArcTo__SWIG_1(uintptr_t arg1, uintptr_t arg2, float arg3, float arg4, float arg5);
extern void _wrap_DrawList_PathArcToFast(uintptr_t arg1, uintptr_t arg2, float arg3, swig_intgo arg4, swig_intgo arg5);
extern void _wrap_DrawList_PathBezierCurveTo__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_intgo arg5);
extern void _wrap_DrawList_PathBezierCurveTo__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern void _wrap_DrawList_PathRect__SWIG_0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, float arg4, swig_intgo arg5);
extern void _wrap_DrawList_PathRect__SWIG_1(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, float arg4);
extern void _wrap_DrawList_PathRect__SWIG_2(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_DrawList_ChannelsSplit(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_DrawList_ChannelsMerge(uintptr_t arg1);
extern void _wrap_DrawList_ChannelsSetCurrent(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_DrawList_AddCallback(uintptr_t arg1, swig_type_484 arg2, uintptr_t arg3);
extern void _wrap_DrawList_AddDrawCmd(uintptr_t arg1);
extern uintptr_t _wrap_DrawList_CloneOutput(uintptr_t arg1);
extern swig_type_485 _wrap_DrawList_CommandsSize(uintptr_t arg1);
extern uintptr_t _wrap_DrawList_CommandsAt(uintptr_t arg1, swig_type_486 arg2);
extern swig_type_487 _wrap_DrawList_VtxBufferSize(uintptr_t arg1);
extern uintptr_t _wrap_DrawList_VtxBufferAt(uintptr_t arg1, swig_type_488 arg2);
extern swig_type_489 _wrap_DrawList_IdxBufferSize(uintptr_t arg1);
extern swig_voidp _wrap_DrawList_IdxBufferAt(uintptr_t arg1, swig_type_490 arg2);
extern void _wrap_DrawData_Valid_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_DrawData_Valid_get(uintptr_t arg1);
extern void _wrap_DrawData_CmdLists_set(uintptr_t arg1, swig_type_491 arg2);
extern swig_type_492 _wrap_DrawData_CmdLists_get(uintptr_t arg1);
extern void _wrap_DrawData_CmdListsCount_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawData_CmdListsCount_get(uintptr_t arg1);
extern void _wrap_DrawData_TotalIdxCount_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawData_TotalIdxCount_get(uintptr_t arg1);
extern void _wrap_DrawData_TotalVtxCount_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_DrawData_TotalVtxCount_get(uintptr_t arg1);
extern void _wrap_DrawData_DisplayPos_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawData_DisplayPos_get(uintptr_t arg1);
extern void _wrap_DrawData_DisplaySize_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DrawData_DisplaySize_get(uintptr_t arg1);
extern uintptr_t _wrap_new_DrawData(void);
extern void _wrap_delete_DrawData(uintptr_t arg1);
extern void _wrap_DrawData_Clear(uintptr_t arg1);
extern void _wrap_DrawData_DeIndexAllBuffers(uintptr_t arg1);
extern void _wrap_DrawData_ScaleClipRects(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_FontConfig_FontData_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FontConfig_FontData_get(uintptr_t arg1);
extern void _wrap_FontConfig_FontDataSize_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontConfig_FontDataSize_get(uintptr_t arg1);
extern void _wrap_FontConfig_FontDataOwnedByAtlas_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_FontConfig_FontDataOwnedByAtlas_get(uintptr_t arg1);
extern void _wrap_FontConfig_FontNo_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontConfig_FontNo_get(uintptr_t arg1);
extern void _wrap_FontConfig_SizePixels_set(uintptr_t arg1, float arg2);
extern float _wrap_FontConfig_SizePixels_get(uintptr_t arg1);
extern void _wrap_FontConfig_OversampleH_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontConfig_OversampleH_get(uintptr_t arg1);
extern void _wrap_FontConfig_OversampleV_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontConfig_OversampleV_get(uintptr_t arg1);
extern void _wrap_FontConfig_PixelSnapH_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_FontConfig_PixelSnapH_get(uintptr_t arg1);
extern void _wrap_FontConfig_GlyphExtraSpacing_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FontConfig_GlyphExtraSpacing_get(uintptr_t arg1);
extern void _wrap_FontConfig_GlyphOffset_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FontConfig_GlyphOffset_get(uintptr_t arg1);
extern void _wrap_FontConfig_GlyphRanges_set(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_FontConfig_GlyphRanges_get(uintptr_t arg1);
extern void _wrap_FontConfig_GlyphMinAdvanceX_set(uintptr_t arg1, float arg2);
extern float _wrap_FontConfig_GlyphMinAdvanceX_get(uintptr_t arg1);
extern void _wrap_FontConfig_GlyphMaxAdvanceX_set(uintptr_t arg1, float arg2);
extern float _wrap_FontConfig_GlyphMaxAdvanceX_get(uintptr_t arg1);
extern void _wrap_FontConfig_MergeMode_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_FontConfig_MergeMode_get(uintptr_t arg1);
extern void _wrap_FontConfig_RasterizerFlags_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontConfig_RasterizerFlags_get(uintptr_t arg1);
extern void _wrap_FontConfig_RasterizerMultiply_set(uintptr_t arg1, float arg2);
extern float _wrap_FontConfig_RasterizerMultiply_get(uintptr_t arg1);
extern uintptr_t _wrap_new_FontConfig(void);
extern void _wrap_delete_FontConfig(uintptr_t arg1);
extern void _wrap_FontGlyph_Codepoint_set(uintptr_t arg1, short arg2);
extern short _wrap_FontGlyph_Codepoint_get(uintptr_t arg1);
extern void _wrap_FontGlyph_AdvanceX_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_AdvanceX_get(uintptr_t arg1);
extern void _wrap_FontGlyph_X0_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_X0_get(uintptr_t arg1);
extern void _wrap_FontGlyph_Y0_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_Y0_get(uintptr_t arg1);
extern void _wrap_FontGlyph_X1_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_X1_get(uintptr_t arg1);
extern void _wrap_FontGlyph_Y1_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_Y1_get(uintptr_t arg1);
extern void _wrap_FontGlyph_U0_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_U0_get(uintptr_t arg1);
extern void _wrap_FontGlyph_V0_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_V0_get(uintptr_t arg1);
extern void _wrap_FontGlyph_U1_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_U1_get(uintptr_t arg1);
extern void _wrap_FontGlyph_V1_set(uintptr_t arg1, float arg2);
extern float _wrap_FontGlyph_V1_get(uintptr_t arg1);
extern uintptr_t _wrap_new_FontGlyph(void);
extern void _wrap_delete_FontGlyph(uintptr_t arg1);
extern swig_intgo _wrap_FontAtlasFlags_None(void);
extern swig_intgo _wrap_FontAtlasFlags_NoPowerOfTwoHeight(void);
extern swig_intgo _wrap_FontAtlasFlags_NoMouseCursors(void);
extern uintptr_t _wrap_new_FontAtlas(void);
extern void _wrap_delete_FontAtlas(uintptr_t arg1);
extern uintptr_t _wrap_FontAtlas_AddFont(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FontAtlas_AddFontDefault__SWIG_0(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FontAtlas_AddFontDefault__SWIG_1(uintptr_t arg1);
extern uintptr_t _wrap_FontAtlas_AddFontFromFileTTF__SWIG_0(uintptr_t arg1, swig_type_493 arg2, float arg3, uintptr_t arg4, swig_voidp arg5);
extern uintptr_t _wrap_FontAtlas_AddFontFromFileTTF__SWIG_1(uintptr_t arg1, swig_type_494 arg2, float arg3, uintptr_t arg4);
extern uintptr_t _wrap_FontAtlas_AddFontFromFileTTF__SWIG_2(uintptr_t arg1, swig_type_495 arg2, float arg3);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryTTF__SWIG_0(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, float arg4, uintptr_t arg5, swig_voidp arg6);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryTTF__SWIG_1(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, float arg4, uintptr_t arg5);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryTTF__SWIG_2(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, float arg4);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryCompressedTTF__SWIG_0(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, float arg4, uintptr_t arg5, swig_voidp arg6);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryCompressedTTF__SWIG_1(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, float arg4, uintptr_t arg5);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryCompressedTTF__SWIG_2(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, float arg4);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_0(uintptr_t arg1, swig_type_496 arg2, float arg3, uintptr_t arg4, swig_voidp arg5);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_1(uintptr_t arg1, swig_type_497 arg2, float arg3, uintptr_t arg4);
extern uintptr_t _wrap_FontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_2(uintptr_t arg1, swig_type_498 arg2, float arg3);
extern void _wrap_FontAtlas_ClearInputData(uintptr_t arg1);
extern void _wrap_FontAtlas_ClearTexData(uintptr_t arg1);
extern void _wrap_FontAtlas_ClearFonts(uintptr_t arg1);
extern void _wrap_FontAtlas_Clear(uintptr_t arg1);
extern _Bool _wrap_FontAtlas_Build(uintptr_t arg1);
extern _Bool _wrap_FontAtlas_IsBuilt(uintptr_t arg1);
extern void _wrap_FontAtlas_GetTexDataAsAlpha8__SWIG_0(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4, swig_voidp arg5);
extern void _wrap_FontAtlas_GetTexDataAsAlpha8__SWIG_1(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4);
extern void _wrap_FontAtlas_GetTexDataAsRGBA32__SWIG_0(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4, swig_voidp arg5);
extern void _wrap_FontAtlas_GetTexDataAsRGBA32__SWIG_1(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4);
extern void _wrap_FontAtlas_SetTexID_(uintptr_t arg1, uintptr_t arg2);
extern swig_voidp _wrap_FontAtlas_GetGlyphRangesDefault(uintptr_t arg1);
extern swig_voidp _wrap_FontAtlas_GetGlyphRangesKorean(uintptr_t arg1);
extern swig_voidp _wrap_FontAtlas_GetGlyphRangesJapanese(uintptr_t arg1);
extern swig_voidp _wrap_FontAtlas_GetGlyphRangesChineseFull(uintptr_t arg1);
extern swig_voidp _wrap_FontAtlas_GetGlyphRangesChineseSimplifiedCommon(uintptr_t arg1);
extern swig_voidp _wrap_FontAtlas_GetGlyphRangesCyrillic(uintptr_t arg1);
extern swig_voidp _wrap_FontAtlas_GetGlyphRangesThai(uintptr_t arg1);
extern swig_intgo _wrap_FontAtlas_AddCustomRectRegular(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_intgo arg4);
extern swig_intgo _wrap_FontAtlas_AddCustomRectFontGlyph__SWIG_0(uintptr_t arg1, uintptr_t arg2, short arg3, swig_intgo arg4, swig_intgo arg5, float arg6, uintptr_t arg7);
extern swig_intgo _wrap_FontAtlas_AddCustomRectFontGlyph__SWIG_1(uintptr_t arg1, uintptr_t arg2, short arg3, swig_intgo arg4, swig_intgo arg5, float arg6);
extern uintptr_t _wrap_FontAtlas_GetCustomRectByIndex(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_FontAtlas_CalcCustomRectUV(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern _Bool _wrap_FontAtlas_GetMouseCursorTexData(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3, uintptr_t arg4, uintptr_t arg5, uintptr_t arg6);
extern void _wrap_FontAtlas_Locked_set(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_FontAtlas_Locked_get(uintptr_t arg1);
extern void _wrap_FontAtlas_Flags_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontAtlas_Flags_get(uintptr_t arg1);
extern void _wrap_FontAtlas_TexID_set(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FontAtlas_TexID_get(uintptr_t arg1);
extern void _wrap_FontAtlas_TexDesiredWidth_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontAtlas_TexDesiredWidth_get(uintptr_t arg1);
extern void _wrap_FontAtlas_TexGlyphPadding_set(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_FontAtlas_TexGlyphPadding_get(uintptr_t arg1);
extern uintptr_t _wrap_new_Font(void);
extern void _wrap_delete_Font(uintptr_t arg1);
extern void _wrap_Font_ClearOutputData(uintptr_t arg1);
extern void _wrap_Font_BuildLookupTable(uintptr_t arg1);
extern uintptr_t _wrap_Font_FindGlyph(uintptr_t arg1, short arg2);
extern uintptr_t _wrap_Font_FindGlyphNoFallback(uintptr_t arg1, short arg2);
extern void _wrap_Font_SetFallbackChar_(uintptr_t arg1, short arg2);
extern float _wrap_Font_GetCharAdvance(uintptr_t arg1, short arg2);
extern _Bool _wrap_Font_IsLoaded(uintptr_t arg1);
extern swig_type_499 _wrap_Font_GetDebugName(uintptr_t arg1);
extern uintptr_t _wrap_Font_CalcTextSizeA__SWIG_0(uintptr_t arg1, float arg2, float arg3, float arg4, swig_type_500 arg5, swig_type_501 arg6, swig_voidp arg7);
extern uintptr_t _wrap_Font_CalcTextSizeA__SWIG_1(uintptr_t arg1, float arg2, float arg3, float arg4, swig_type_502 arg5, swig_type_503 arg6);
extern uintptr_t _wrap_Font_CalcTextSizeA__SWIG_2(uintptr_t arg1, float arg2, float arg3, float arg4, swig_type_504 arg5);
extern swig_type_505 _wrap_Font_CalcWordWrapPositionA(uintptr_t arg1, float arg2, swig_type_506 arg3, swig_type_507 arg4, float arg5);
extern void _wrap_Font_RenderChar(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, short arg6);
extern void _wrap_Font_RenderText__SWIG_0(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, uintptr_t arg6, swig_type_508 arg7, swig_type_509 arg8, float arg9, _Bool arg10);
extern void _wrap_Font_RenderText__SWIG_1(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, uintptr_t arg6, swig_type_510 arg7, swig_type_511 arg8, float arg9);
extern void _wrap_Font_RenderText__SWIG_2(uintptr_t arg1, uintptr_t arg2, float arg3, uintptr_t arg4, swig_intgo arg5, uintptr_t arg6, swig_type_512 arg7, swig_type_513 arg8);
extern void _wrap_Font_GrowIndex(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Font_AddGlyph(uintptr_t arg1, short arg2, float arg3, float arg4, float arg5, float arg6, float arg7, float arg8, float arg9, float arg10, float arg11);
extern void _wrap_Font_AddRemapChar__SWIG_0(uintptr_t arg1, short arg2, short arg3, _Bool arg4);
extern void _wrap_Font_AddRemapChar__SWIG_1(uintptr_t arg1, short arg2, short arg3);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"
import "fmt"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

func fmtString(format string, args ...interface{}) *C.char {
	return C.CString(fmt.Sprintf(format, args...))
}

func (p SwigcptrColor) Delete() {
	DeleteColor(p)
}

func (p SwigcptrDrawCmd) Delete() {
	DeleteDrawCmd(p)
}

func (p SwigcptrDrawChannel) Delete() {
	DeleteDrawChannel(p)
}

func (p SwigcptrFontGlyph) Delete() {
	DeleteFontGlyph(p)
}

func (arg1 SwigcptrVec2) Delete() {
	DeleteVec2(arg1)
}

func (arg1 SwigcptrVec4) Delete() {
	DeleteVec4(arg1)
}

func (arg1 SwigcptrIO) Delete() {
	DeleteIO(arg1)
}

func (arg1 SwigcptrDrawVert) Delete() {
	DeleteDrawVert(arg1)
}

func (arg1 SwigcptrDrawData) Delete() {
	DeleteDrawData(arg1)
}

func (arg1 SwigcptrFontConfig) Delete() {
	DeleteFontConfig(arg1)
}

func (p SwigcptrFontAtlas) GetTexDataAsAlpha8() ([]uint8, int, int) {
	pixels := (*byte)(nil)
	var w, h int
	p.GetTexDataAsAlpha8__SWIG_1(&pixels, &w, &h)
	return (*[1 << 28]uint8)(unsafe.Pointer(pixels))[:w*h], w, h
}

func (p SwigcptrFontAtlas) GetTexDataAsRGBA32() ([]uint32, int, int) {
	pixels := (*byte)(nil)
	var w, h int
	p.GetTexDataAsRGBA32__SWIG_1(&pixels, &w, &h)
	return (*[1 << 28]uint32)(unsafe.Pointer(pixels))[:w*h], w, h
}

func (arg1 SwigcptrFontAtlas) Delete() {
	DeleteFontAtlas(arg1)
}

func (arg1 SwigcptrPayload) Delete() {
	DeletePayload(arg1)
}

func (arg1 SwigcptrInputTextCallbackData) Delete() {
	DeleteInputTextCallbackData(arg1)
}

func (arg1 SwigcptrSizeCallbackData) Delete() {
	DeleteSizeCallbackData(arg1)
}

func (arg1 SwigcptrStyle) Delete() {
	DeleteStyle(arg1)
}

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc(C.swig_intgo(_swig_i_0)))
	return swig_r
}

const IMGUI_VERSION string = "1.65"
const IMGUI_VERSION_NUM int = 16501

type SwigcptrVec2 uintptr

func (p SwigcptrVec2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVec2) SwigIsVec2() {
}

func (arg1 SwigcptrVec2) SetX(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec2_x_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrVec2) GetX() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Vec2_x_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec2) SetY(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec2_y_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrVec2) GetY() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Vec2_y_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewVec2__SWIG_0() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_new_Vec2__SWIG_0()))
	return swig_r
}

func NewVec2__SWIG_1(arg1 float32, arg2 float32) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_new_Vec2__SWIG_1(C.float(_swig_i_0), C.float(_swig_i_1))))
	return swig_r
}

func NewVec2(a ...interface{}) Vec2 {
	argc := len(a)
	if argc == 0 {
		return NewVec2__SWIG_0()
	}
	if argc == 2 {
		return NewVec2__SWIG_1(a[0].(float32), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func DeleteVec2(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vec2(C.uintptr_t(_swig_i_0))
}

type Vec2 interface {
	Swigcptr() uintptr
	SwigIsVec2()
	SetX(arg2 float32)
	GetX() (_swig_ret float32)
	SetY(arg2 float32)
	GetY() (_swig_ret float32)
	Delete()
}

type SwigcptrVec4 uintptr

func (p SwigcptrVec4) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVec4) SwigIsVec4() {
}

func (arg1 SwigcptrVec4) SetX(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_x_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetX() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Vec4_x_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) SetY(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_y_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetY() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Vec4_y_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) SetZ(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_z_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetZ() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Vec4_z_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) SetW(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_w_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetW() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Vec4_w_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewVec4__SWIG_0() (_swig_ret Vec4) {
	var swig_r Vec4
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_new_Vec4__SWIG_0()))
	return swig_r
}

func NewVec4__SWIG_1(arg1 float32, arg2 float32, arg3 float32, arg4 float32) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_new_Vec4__SWIG_1(C.float(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3))))
	return swig_r
}

func NewVec4(a ...interface{}) Vec4 {
	argc := len(a)
	if argc == 0 {
		return NewVec4__SWIG_0()
	}
	if argc == 4 {
		return NewVec4__SWIG_1(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func DeleteVec4(arg1 Vec4) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vec4(C.uintptr_t(_swig_i_0))
}

type Vec4 interface {
	Swigcptr() uintptr
	SwigIsVec4()
	SetX(arg2 float32)
	GetX() (_swig_ret float32)
	SetY(arg2 float32)
	GetY() (_swig_ret float32)
	SetZ(arg2 float32)
	GetZ() (_swig_ret float32)
	SetW(arg2 float32)
	GetW() (_swig_ret float32)
	Delete()
}

func CreateContext__SWIG_0(arg1 FontAtlas) (_swig_ret ImGuiContext) {
	var swig_r ImGuiContext
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (ImGuiContext)(SwigcptrImGuiContext(C._wrap_CreateContext__SWIG_0(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func CreateContext__SWIG_1() (_swig_ret ImGuiContext) {
	var swig_r ImGuiContext
	swig_r = (ImGuiContext)(SwigcptrImGuiContext(C._wrap_CreateContext__SWIG_1()))
	return swig_r
}

func CreateContext(a ...interface{}) ImGuiContext {
	argc := len(a)
	if argc == 0 {
		return CreateContext__SWIG_1()
	}
	if argc == 1 {
		return CreateContext__SWIG_0(a[0].(FontAtlas))
	}
	panic("No match for overloaded function call")
}

func DestroyContext__SWIG_0(arg1 ImGuiContext) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_DestroyContext__SWIG_0(C.uintptr_t(_swig_i_0))
}

func DestroyContext__SWIG_1() {
	C._wrap_DestroyContext__SWIG_1()
}

func DestroyContext(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		DestroyContext__SWIG_1()
		return
	}
	if argc == 1 {
		DestroyContext__SWIG_0(a[0].(ImGuiContext))
		return
	}
	panic("No match for overloaded function call")
}

func GetCurrentContext() (_swig_ret ImGuiContext) {
	var swig_r ImGuiContext
	swig_r = (ImGuiContext)(SwigcptrImGuiContext(C._wrap_GetCurrentContext()))
	return swig_r
}

func SetCurrentContext(arg1 ImGuiContext) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetCurrentContext(C.uintptr_t(_swig_i_0))
}

func DebugCheckVersionAndDataLayout(arg1 string, arg2 int64, arg3 int64, arg4 int64, arg5 int64, arg6 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DebugCheckVersionAndDataLayout(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), C.swig_type_2(_swig_i_1), C.swig_type_3(_swig_i_2), C.swig_type_4(_swig_i_3), C.swig_type_5(_swig_i_4), C.swig_type_6(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func GetIO() (_swig_ret IO) {
	var swig_r IO
	swig_r = (IO)(SwigcptrIO(C._wrap_GetIO()))
	return swig_r
}

func GetStyle() (_swig_ret Style) {
	var swig_r Style
	swig_r = (Style)(SwigcptrStyle(C._wrap_GetStyle()))
	return swig_r
}

func NewFrame() {
	C._wrap_NewFrame()
}

func EndFrame() {
	C._wrap_EndFrame()
}

func Render() {
	C._wrap_Render()
}

func GetDrawData() (_swig_ret DrawData) {
	var swig_r DrawData
	swig_r = (DrawData)(SwigcptrDrawData(C._wrap_GetDrawData()))
	return swig_r
}

func StyleColorsDark__SWIG_0(arg1 Style) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_StyleColorsDark__SWIG_0(C.uintptr_t(_swig_i_0))
}

func StyleColorsDark__SWIG_1() {
	C._wrap_StyleColorsDark__SWIG_1()
}

func StyleColorsDark(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		StyleColorsDark__SWIG_1()
		return
	}
	if argc == 1 {
		StyleColorsDark__SWIG_0(a[0].(Style))
		return
	}
	panic("No match for overloaded function call")
}

func StyleColorsClassic__SWIG_0(arg1 Style) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_StyleColorsClassic__SWIG_0(C.uintptr_t(_swig_i_0))
}

func StyleColorsClassic__SWIG_1() {
	C._wrap_StyleColorsClassic__SWIG_1()
}

func StyleColorsClassic(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		StyleColorsClassic__SWIG_1()
		return
	}
	if argc == 1 {
		StyleColorsClassic__SWIG_0(a[0].(Style))
		return
	}
	panic("No match for overloaded function call")
}

func StyleColorsLight__SWIG_0(arg1 Style) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_StyleColorsLight__SWIG_0(C.uintptr_t(_swig_i_0))
}

func StyleColorsLight__SWIG_1() {
	C._wrap_StyleColorsLight__SWIG_1()
}

func StyleColorsLight(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		StyleColorsLight__SWIG_1()
		return
	}
	if argc == 1 {
		StyleColorsLight__SWIG_0(a[0].(Style))
		return
	}
	panic("No match for overloaded function call")
}

func Begin__SWIG_0(arg1 string, arg2 *bool, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Begin__SWIG_0(*(*C.swig_type_7)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Begin__SWIG_1(arg1 string, arg2 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Begin__SWIG_1(*(*C.swig_type_8)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Begin__SWIG_2(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Begin__SWIG_2(*(*C.swig_type_9)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Begin(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return Begin__SWIG_2(a0)
	}
	if argc == 1 {
		return Begin__SWIG_1(a0, a[0].(*bool))
	}
	if argc == 2 {
		return Begin__SWIG_0(a0, a[0].(*bool), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func End() {
	C._wrap_End()
}

func BeginChild__SWIG_0(arg1 string, arg2 Vec2, arg3 bool, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_BeginChild__SWIG_0(*(*C.swig_type_10)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginChild__SWIG_1(arg1 string, arg2 Vec2, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_BeginChild__SWIG_1(*(*C.swig_type_11)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginChild__SWIG_2(arg1 string, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_BeginChild__SWIG_2(*(*C.swig_type_12)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginChild__SWIG_3(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginChild__SWIG_3(*(*C.swig_type_13)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginChild__SWIG_4(arg1 uint, arg2 Vec2, arg3 bool, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_BeginChild__SWIG_4(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func BeginChild__SWIG_5(arg1 uint, arg2 Vec2, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_BeginChild__SWIG_5(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func BeginChild__SWIG_6(arg1 uint, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_BeginChild__SWIG_6(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func BeginChild__SWIG_7(arg1 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginChild__SWIG_7(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func BeginChild(a0 interface{}, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		if _, ok := a0.(uint); !ok {
			goto check_1
		}
		return BeginChild__SWIG_7(a0.(uint))
	}
check_1:
	if argc == 0 {
		return BeginChild__SWIG_3(a0.(string))
	}
	if argc == 1 {
		if _, ok := a0.(uint); !ok {
			goto check_3
		}
		return BeginChild__SWIG_6(a0.(uint), a[0].(Vec2))
	}
check_3:
	if argc == 1 {
		return BeginChild__SWIG_2(a0.(string), a[0].(Vec2))
	}
	if argc == 2 {
		if _, ok := a0.(uint); !ok {
			goto check_5
		}
		return BeginChild__SWIG_5(a0.(uint), a[0].(Vec2), a[1].(bool))
	}
check_5:
	if argc == 2 {
		return BeginChild__SWIG_1(a0.(string), a[0].(Vec2), a[1].(bool))
	}
	if argc == 3 {
		if _, ok := a0.(uint); !ok {
			goto check_7
		}
		return BeginChild__SWIG_4(a0.(uint), a[0].(Vec2), a[1].(bool), a[2].(int))
	}
check_7:
	if argc == 3 {
		return BeginChild__SWIG_0(a0.(string), a[0].(Vec2), a[1].(bool), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func EndChild() {
	C._wrap_EndChild()
}

func IsWindowAppearing() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsWindowAppearing())
	return swig_r
}

func IsWindowCollapsed() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsWindowCollapsed())
	return swig_r
}

func IsWindowFocused__SWIG_0(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsWindowFocused__SWIG_0(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsWindowFocused__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsWindowFocused__SWIG_1())
	return swig_r
}

func IsWindowFocused(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsWindowFocused__SWIG_1()
	}
	if argc == 1 {
		return IsWindowFocused__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func IsWindowHovered__SWIG_0(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsWindowHovered__SWIG_0(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsWindowHovered__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsWindowHovered__SWIG_1())
	return swig_r
}

func IsWindowHovered(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsWindowHovered__SWIG_1()
	}
	if argc == 1 {
		return IsWindowHovered__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func GetWindowDrawList() (_swig_ret DrawList) {
	var swig_r DrawList
	swig_r = (DrawList)(SwigcptrDrawList(C._wrap_GetWindowDrawList()))
	return swig_r
}

func GetWindowPos() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetWindowPos()))
	return swig_r
}

func GetWindowSize() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetWindowSize()))
	return swig_r
}

func GetWindowWidth() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetWindowWidth())
	return swig_r
}

func GetWindowHeight() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetWindowHeight())
	return swig_r
}

func GetContentRegionMax() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetContentRegionMax()))
	return swig_r
}

func GetContentRegionAvail() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetContentRegionAvail()))
	return swig_r
}

func GetContentRegionAvailWidth() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetContentRegionAvailWidth())
	return swig_r
}

func GetWindowContentRegionMin() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetWindowContentRegionMin()))
	return swig_r
}

func GetWindowContentRegionMax() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetWindowContentRegionMax()))
	return swig_r
}

func GetWindowContentRegionWidth() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetWindowContentRegionWidth())
	return swig_r
}

func SetNextWindowPos__SWIG_0(arg1 Vec2, arg2 int, arg3 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_SetNextWindowPos__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func SetNextWindowPos__SWIG_1(arg1 Vec2, arg2 int) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SetNextWindowPos__SWIG_1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SetNextWindowPos__SWIG_2(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetNextWindowPos__SWIG_2(C.uintptr_t(_swig_i_0))
}

func SetNextWindowPos(a0 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetNextWindowPos__SWIG_2(a0)
		return
	}
	if argc == 1 {
		SetNextWindowPos__SWIG_1(a0, a[0].(int))
		return
	}
	if argc == 2 {
		SetNextWindowPos__SWIG_0(a0, a[0].(int), a[1].(Vec2))
		return
	}
	panic("No match for overloaded function call")
}

func SetNextWindowSize__SWIG_0(arg1 Vec2, arg2 int) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SetNextWindowSize__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SetNextWindowSize__SWIG_1(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetNextWindowSize__SWIG_1(C.uintptr_t(_swig_i_0))
}

func SetNextWindowSize(a0 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetNextWindowSize__SWIG_1(a0)
		return
	}
	if argc == 1 {
		SetNextWindowSize__SWIG_0(a0, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func SetNextWindowSizeConstraints__SWIG_0(arg1 Vec2, arg2 Vec2, arg3 _swig_fnptr, arg4 uintptr) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_SetNextWindowSizeConstraints__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_14(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func SetNextWindowSizeConstraints__SWIG_1(arg1 Vec2, arg2 Vec2, arg3 _swig_fnptr) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_SetNextWindowSizeConstraints__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_type_15(_swig_i_2))
}

func SetNextWindowSizeConstraints__SWIG_2(arg1 Vec2, arg2 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SetNextWindowSizeConstraints__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func SetNextWindowSizeConstraints(a0 Vec2, a1 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetNextWindowSizeConstraints__SWIG_2(a0, a1)
		return
	}
	if argc == 1 {
		SetNextWindowSizeConstraints__SWIG_1(a0, a1, a[0].(_swig_fnptr))
		return
	}
	if argc == 2 {
		SetNextWindowSizeConstraints__SWIG_0(a0, a1, a[0].(_swig_fnptr), a[1].(uintptr))
		return
	}
	panic("No match for overloaded function call")
}

func SetNextWindowContentSize(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetNextWindowContentSize(C.uintptr_t(_swig_i_0))
}

func SetNextWindowCollapsed__SWIG_0(arg1 bool, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetNextWindowCollapsed__SWIG_0(C._Bool(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SetNextWindowCollapsed__SWIG_1(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetNextWindowCollapsed__SWIG_1(C._Bool(_swig_i_0))
}

func SetNextWindowCollapsed(a0 bool, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetNextWindowCollapsed__SWIG_1(a0)
		return
	}
	if argc == 1 {
		SetNextWindowCollapsed__SWIG_0(a0, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func SetNextWindowFocus() {
	C._wrap_SetNextWindowFocus()
}

func SetNextWindowBgAlpha(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetNextWindowBgAlpha(C.float(_swig_i_0))
}

func SetWindowPos__SWIG_0(arg1 Vec2, arg2 int) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SetWindowPos__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SetWindowPos__SWIG_1(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetWindowPos__SWIG_1(C.uintptr_t(_swig_i_0))
}

func SetWindowSize__SWIG_0(arg1 Vec2, arg2 int) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	C._wrap_SetWindowSize__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SetWindowSize__SWIG_1(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetWindowSize__SWIG_1(C.uintptr_t(_swig_i_0))
}

func SetWindowCollapsed__SWIG_0(arg1 bool, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetWindowCollapsed__SWIG_0(C._Bool(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SetWindowCollapsed__SWIG_1(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetWindowCollapsed__SWIG_1(C._Bool(_swig_i_0))
}

func SetWindowFocus__SWIG_0() {
	C._wrap_SetWindowFocus__SWIG_0()
}

func SetWindowFontScale(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetWindowFontScale(C.float(_swig_i_0))
}

func SetWindowPos__SWIG_2(arg1 string, arg2 Vec2, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_SetWindowPos__SWIG_2(*(*C.swig_type_16)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SetWindowPos__SWIG_3(arg1 string, arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SetWindowPos__SWIG_3(*(*C.swig_type_17)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SetWindowPos(a0 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetWindowPos__SWIG_1(a0.(Vec2))
		return
	}
	if argc == 1 {
		if _, ok := a0.(SwigcptrVec2); !ok {
			goto check_2
		}
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		SetWindowPos__SWIG_0(a0.(Vec2), a[0].(int))
		return
	}
check_2:
	if argc == 1 {
		SetWindowPos__SWIG_3(a0.(string), a[0].(Vec2))
		return
	}
	if argc == 2 {
		SetWindowPos__SWIG_2(a0.(string), a[0].(Vec2), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func SetWindowSize__SWIG_2(arg1 string, arg2 Vec2, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_SetWindowSize__SWIG_2(*(*C.swig_type_18)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SetWindowSize__SWIG_3(arg1 string, arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SetWindowSize__SWIG_3(*(*C.swig_type_19)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SetWindowSize(a0 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetWindowSize__SWIG_1(a0.(Vec2))
		return
	}
	if argc == 1 {
		if _, ok := a0.(SwigcptrVec2); !ok {
			goto check_2
		}
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		SetWindowSize__SWIG_0(a0.(Vec2), a[0].(int))
		return
	}
check_2:
	if argc == 1 {
		SetWindowSize__SWIG_3(a0.(string), a[0].(Vec2))
		return
	}
	if argc == 2 {
		SetWindowSize__SWIG_2(a0.(string), a[0].(Vec2), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func SetWindowCollapsed__SWIG_2(arg1 string, arg2 bool, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_SetWindowCollapsed__SWIG_2(*(*C.swig_type_20)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SetWindowCollapsed__SWIG_3(arg1 string, arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetWindowCollapsed__SWIG_3(*(*C.swig_type_21)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SetWindowCollapsed(a0 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetWindowCollapsed__SWIG_1(a0.(bool))
		return
	}
	if argc == 1 {
		if _, ok := a0.(bool); !ok {
			goto check_2
		}
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		SetWindowCollapsed__SWIG_0(a0.(bool), a[0].(int))
		return
	}
check_2:
	if argc == 1 {
		SetWindowCollapsed__SWIG_3(a0.(string), a[0].(bool))
		return
	}
	if argc == 2 {
		SetWindowCollapsed__SWIG_2(a0.(string), a[0].(bool), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func SetWindowFocus__SWIG_1(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SetWindowFocus__SWIG_1(*(*C.swig_type_22)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SetWindowFocus(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetWindowFocus__SWIG_0()
		return
	}
	if argc == 1 {
		SetWindowFocus__SWIG_1(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func GetScrollX() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetScrollX())
	return swig_r
}

func GetScrollY() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetScrollY())
	return swig_r
}

func GetScrollMaxX() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetScrollMaxX())
	return swig_r
}

func GetScrollMaxY() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetScrollMaxY())
	return swig_r
}

func SetScrollX(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetScrollX(C.float(_swig_i_0))
}

func SetScrollY(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetScrollY(C.float(_swig_i_0))
}

func SetScrollHere__SWIG_0(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetScrollHere__SWIG_0(C.float(_swig_i_0))
}

func SetScrollHere__SWIG_1() {
	C._wrap_SetScrollHere__SWIG_1()
}

func SetScrollHere(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetScrollHere__SWIG_1()
		return
	}
	if argc == 1 {
		SetScrollHere__SWIG_0(a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func SetScrollFromPosY__SWIG_0(arg1 float32, arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetScrollFromPosY__SWIG_0(C.float(_swig_i_0), C.float(_swig_i_1))
}

func SetScrollFromPosY__SWIG_1(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetScrollFromPosY__SWIG_1(C.float(_swig_i_0))
}

func SetScrollFromPosY(a0 float32, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetScrollFromPosY__SWIG_1(a0)
		return
	}
	if argc == 1 {
		SetScrollFromPosY__SWIG_0(a0, a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func PushFont(arg1 Font) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_PushFont(C.uintptr_t(_swig_i_0))
}

func PopFont() {
	C._wrap_PopFont()
}

func PushStyleColor__SWIG_0(arg1 int, arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PushStyleColor__SWIG_0(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func PushStyleColor__SWIG_1(arg1 int, arg2 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_PushStyleColor__SWIG_1(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func PushStyleColor(a0 int, a1 interface{}) {
	{
		if _, ok := a1.(SwigcptrVec4); !ok {
			goto check_1
		}
		PushStyleColor__SWIG_1(a0, a1.(Vec4))
		return
	}
check_1:
	{
		PushStyleColor__SWIG_0(a0, a1.(uint))
		return
	}
	panic("No match for overloaded function call")
}

func PopStyleColor__SWIG_0(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_PopStyleColor__SWIG_0(C.swig_intgo(_swig_i_0))
}

func PopStyleColor__SWIG_1() {
	C._wrap_PopStyleColor__SWIG_1()
}

func PopStyleColor(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		PopStyleColor__SWIG_1()
		return
	}
	if argc == 1 {
		PopStyleColor__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func PushStyleVar__SWIG_0(arg1 int, arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PushStyleVar__SWIG_0(C.swig_intgo(_swig_i_0), C.float(_swig_i_1))
}

func PushStyleVar__SWIG_1(arg1 int, arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_PushStyleVar__SWIG_1(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func PushStyleVar(a0 int, a1 interface{}) {
	{
		if _, ok := a1.(SwigcptrVec2); !ok {
			goto check_1
		}
		PushStyleVar__SWIG_1(a0, a1.(Vec2))
		return
	}
check_1:
	{
		PushStyleVar__SWIG_0(a0, a1.(float32))
		return
	}
	panic("No match for overloaded function call")
}

func PopStyleVar__SWIG_0(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_PopStyleVar__SWIG_0(C.swig_intgo(_swig_i_0))
}

func PopStyleVar__SWIG_1() {
	C._wrap_PopStyleVar__SWIG_1()
}

func PopStyleVar(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		PopStyleVar__SWIG_1()
		return
	}
	if argc == 1 {
		PopStyleVar__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func GetStyleColorVec4(arg1 int) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_GetStyleColorVec4(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func GetFont() (_swig_ret Font) {
	var swig_r Font
	swig_r = (Font)(SwigcptrFont(C._wrap_GetFont()))
	return swig_r
}

func GetFontSize() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetFontSize())
	return swig_r
}

func GetFontTexUvWhitePixel() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetFontTexUvWhitePixel()))
	return swig_r
}

func GetColorU32__SWIG_0(arg1 int, arg2 float32) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_GetColorU32__SWIG_0(C.swig_intgo(_swig_i_0), C.float(_swig_i_1)))
	return swig_r
}

func GetColorU32__SWIG_1(arg1 int) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_GetColorU32__SWIG_1(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func GetColorU32__SWIG_2(arg1 Vec4) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (uint)(C._wrap_GetColorU32__SWIG_2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func GetColorU32(a0 interface{}, a ...interface{}) uint {
	argc := len(a)
	if argc == 0 {
		if _, ok := a0.(SwigcptrVec4); !ok {
			goto check_1
		}
		return GetColorU32__SWIG_2(a0.(Vec4))
	}
check_1:
	if argc == 0 {
		return GetColorU32__SWIG_1(a0.(int))
	}
	if argc == 1 {
		return GetColorU32__SWIG_0(a0.(int), a[0].(float32))
	}
	panic("No match for overloaded function call")
}

func GetColorU32FromU32(arg1 uint) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_GetColorU32FromU32(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func PushItemWidth(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_PushItemWidth(C.float(_swig_i_0))
}

func PopItemWidth() {
	C._wrap_PopItemWidth()
}

func CalcItemWidth() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_CalcItemWidth())
	return swig_r
}

func PushTextWrapPos__SWIG_0(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_PushTextWrapPos__SWIG_0(C.float(_swig_i_0))
}

func PushTextWrapPos__SWIG_1() {
	C._wrap_PushTextWrapPos__SWIG_1()
}

func PushTextWrapPos(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		PushTextWrapPos__SWIG_1()
		return
	}
	if argc == 1 {
		PushTextWrapPos__SWIG_0(a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func PopTextWrapPos() {
	C._wrap_PopTextWrapPos()
}

func PushAllowKeyboardFocus(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_PushAllowKeyboardFocus(C._Bool(_swig_i_0))
}

func PopAllowKeyboardFocus() {
	C._wrap_PopAllowKeyboardFocus()
}

func PushButtonRepeat(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_PushButtonRepeat(C._Bool(_swig_i_0))
}

func PopButtonRepeat() {
	C._wrap_PopButtonRepeat()
}

func Separator() {
	C._wrap_Separator()
}

func SameLine__SWIG_0(arg1 float32, arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SameLine__SWIG_0(C.float(_swig_i_0), C.float(_swig_i_1))
}

func SameLine__SWIG_1(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SameLine__SWIG_1(C.float(_swig_i_0))
}

func SameLine__SWIG_2() {
	C._wrap_SameLine__SWIG_2()
}

func SameLine(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SameLine__SWIG_2()
		return
	}
	if argc == 1 {
		SameLine__SWIG_1(a[0].(float32))
		return
	}
	if argc == 2 {
		SameLine__SWIG_0(a[0].(float32), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func NewLine() {
	C._wrap_NewLine()
}

func Spacing() {
	C._wrap_Spacing()
}

func Dummy(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_Dummy(C.uintptr_t(_swig_i_0))
}

func Indent__SWIG_0(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_Indent__SWIG_0(C.float(_swig_i_0))
}

func Indent__SWIG_1() {
	C._wrap_Indent__SWIG_1()
}

func Indent(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		Indent__SWIG_1()
		return
	}
	if argc == 1 {
		Indent__SWIG_0(a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func Unindent__SWIG_0(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_Unindent__SWIG_0(C.float(_swig_i_0))
}

func Unindent__SWIG_1() {
	C._wrap_Unindent__SWIG_1()
}

func Unindent(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		Unindent__SWIG_1()
		return
	}
	if argc == 1 {
		Unindent__SWIG_0(a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func BeginGroup() {
	C._wrap_BeginGroup()
}

func EndGroup() {
	C._wrap_EndGroup()
}

func GetCursorPos() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetCursorPos()))
	return swig_r
}

func GetCursorPosX() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetCursorPosX())
	return swig_r
}

func GetCursorPosY() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetCursorPosY())
	return swig_r
}

func SetCursorPos(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetCursorPos(C.uintptr_t(_swig_i_0))
}

func SetCursorPosX(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetCursorPosX(C.float(_swig_i_0))
}

func SetCursorPosY(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_SetCursorPosY(C.float(_swig_i_0))
}

func GetCursorStartPos() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetCursorStartPos()))
	return swig_r
}

func GetCursorScreenPos() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetCursorScreenPos()))
	return swig_r
}

func SetCursorScreenPos(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetCursorScreenPos(C.uintptr_t(_swig_i_0))
}

func AlignTextToFramePadding() {
	C._wrap_AlignTextToFramePadding()
}

func GetTextLineHeight() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetTextLineHeight())
	return swig_r
}

func GetTextLineHeightWithSpacing() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetTextLineHeightWithSpacing())
	return swig_r
}

func GetFrameHeight() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetFrameHeight())
	return swig_r
}

func GetFrameHeightWithSpacing() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetFrameHeightWithSpacing())
	return swig_r
}

func PushID__SWIG_0(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_PushID__SWIG_0(*(*C.swig_type_23)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PushID__SWIG_1(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PushID__SWIG_1(*(*C.swig_type_24)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func PushID__SWIG_2(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_PushID__SWIG_2(C.uintptr_t(_swig_i_0))
}

func PushID__SWIG_3(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_PushID__SWIG_3(C.swig_intgo(_swig_i_0))
}

func PushID(a0 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		if _, ok := a0.(uintptr); !ok {
			goto check_1
		}
		PushID__SWIG_2(a0.(uintptr))
		return
	}
check_1:
	if argc == 0 {
		if _, ok := a0.(int); !ok {
			goto check_2
		}
		PushID__SWIG_3(a0.(int))
		return
	}
check_2:
	if argc == 0 {
		PushID__SWIG_0(a0.(string))
		return
	}
	if argc == 1 {
		PushID__SWIG_1(a0.(string), a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func PopID() {
	C._wrap_PopID()
}

func GetID__SWIG_0(arg1 string) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_GetID__SWIG_0(*(*C.swig_type_26)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func GetID__SWIG_1(arg1 string, arg2 string) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_GetID__SWIG_1(*(*C.swig_type_27)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_28)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func GetID__SWIG_2(arg1 uintptr) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_GetID__SWIG_2(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func GetID(a0 interface{}, a ...interface{}) uint {
	argc := len(a)
	if argc == 0 {
		if _, ok := a0.(uintptr); !ok {
			goto check_1
		}
		return GetID__SWIG_2(a0.(uintptr))
	}
check_1:
	if argc == 0 {
		return GetID__SWIG_0(a0.(string))
	}
	if argc == 1 {
		return GetID__SWIG_1(a0.(string), a[0].(string))
	}
	panic("No match for overloaded function call")
}

func TextUnformatted__SWIG_0(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_TextUnformatted__SWIG_0(*(*C.swig_type_29)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_30)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func TextUnformatted__SWIG_1(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_TextUnformatted__SWIG_1(*(*C.swig_type_31)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func TextUnformatted(a0 string, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		TextUnformatted__SWIG_1(a0)
		return
	}
	if argc == 1 {
		TextUnformatted__SWIG_0(a0, a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func Text(arg1 string, args ...interface{}) {

	_swig_i_0 := fmtString(arg1, args...)
	C._wrap_Text(C.swig_voidp(_swig_i_0))
}

func TextColored(arg1 Vec4, arg2 string, args ...interface{}) {
	_swig_i_0 := arg1.Swigcptr()

	_swig_i_1 := fmtString(arg2, args...)
	C._wrap_TextColored(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func TextDisabled(arg1 string, args ...interface{}) {

	_swig_i_0 := fmtString(arg1, args...)
	C._wrap_TextDisabled(C.swig_voidp(_swig_i_0))
}

func TextWrapped(arg1 string, args ...interface{}) {

	_swig_i_0 := fmtString(arg1, args...)
	C._wrap_TextWrapped(C.swig_voidp(_swig_i_0))
}

func LabelText(arg1 string, arg2 string, args ...interface{}) {
	_swig_i_0 := arg1

	_swig_i_1 := fmtString(arg2, args...)
	C._wrap_LabelText(*(*C.swig_type_32)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func BulletText(arg1 string, args ...interface{}) {

	_swig_i_0 := fmtString(arg1, args...)
	C._wrap_BulletText(C.swig_voidp(_swig_i_0))
}

func Button__SWIG_0(arg1 string, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_Button__SWIG_0(*(*C.swig_type_33)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Button__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Button__SWIG_1(*(*C.swig_type_34)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Button(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return Button__SWIG_1(a0)
	}
	if argc == 1 {
		return Button__SWIG_0(a0, a[0].(Vec2))
	}
	panic("No match for overloaded function call")
}

func SmallButton(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SmallButton(*(*C.swig_type_35)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InvisibleButton(arg1 string, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_InvisibleButton(*(*C.swig_type_36)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ArrowButton(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ArrowButton(*(*C.swig_type_37)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Image__SWIG_0(arg1 uintptr, arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec4, arg6 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	C._wrap_Image__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))
}

func Image__SWIG_1(arg1 uintptr, arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	C._wrap_Image__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func Image__SWIG_2(arg1 uintptr, arg2 Vec2, arg3 Vec2, arg4 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_Image__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func Image__SWIG_3(arg1 uintptr, arg2 Vec2, arg3 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_Image__SWIG_3(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func Image__SWIG_4(arg1 uintptr, arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Image__SWIG_4(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func Image(a0 uintptr, a1 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		Image__SWIG_4(a0, a1)
		return
	}
	if argc == 1 {
		Image__SWIG_3(a0, a1, a[0].(Vec2))
		return
	}
	if argc == 2 {
		Image__SWIG_2(a0, a1, a[0].(Vec2), a[1].(Vec2))
		return
	}
	if argc == 3 {
		Image__SWIG_1(a0, a1, a[0].(Vec2), a[1].(Vec2), a[2].(Vec4))
		return
	}
	if argc == 4 {
		Image__SWIG_0(a0, a1, a[0].(Vec2), a[1].(Vec2), a[2].(Vec4), a[3].(Vec4))
		return
	}
	panic("No match for overloaded function call")
}

func ImageButton__SWIG_0(arg1 uintptr, arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 int, arg6 Vec4, arg7 Vec4) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	swig_r = (bool)(C._wrap_ImageButton__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6)))
	return swig_r
}

func ImageButton__SWIG_1(arg1 uintptr, arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 int, arg6 Vec4) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	swig_r = (bool)(C._wrap_ImageButton__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.uintptr_t(_swig_i_5)))
	return swig_r
}

func ImageButton__SWIG_2(arg1 uintptr, arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_ImageButton__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4)))
	return swig_r
}

func ImageButton__SWIG_3(arg1 uintptr, arg2 Vec2, arg3 Vec2, arg4 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_ImageButton__SWIG_3(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	return swig_r
}

func ImageButton__SWIG_4(arg1 uintptr, arg2 Vec2, arg3 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_ImageButton__SWIG_4(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func ImageButton__SWIG_5(arg1 uintptr, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_ImageButton__SWIG_5(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func ImageButton(a0 uintptr, a1 Vec2, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ImageButton__SWIG_5(a0, a1)
	}
	if argc == 1 {
		return ImageButton__SWIG_4(a0, a1, a[0].(Vec2))
	}
	if argc == 2 {
		return ImageButton__SWIG_3(a0, a1, a[0].(Vec2), a[1].(Vec2))
	}
	if argc == 3 {
		return ImageButton__SWIG_2(a0, a1, a[0].(Vec2), a[1].(Vec2), a[2].(int))
	}
	if argc == 4 {
		return ImageButton__SWIG_1(a0, a1, a[0].(Vec2), a[1].(Vec2), a[2].(int), a[3].(Vec4))
	}
	if argc == 5 {
		return ImageButton__SWIG_0(a0, a1, a[0].(Vec2), a[1].(Vec2), a[2].(int), a[3].(Vec4), a[4].(Vec4))
	}
	panic("No match for overloaded function call")
}

func Checkbox(arg1 string, arg2 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Checkbox(*(*C.swig_type_38)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func CheckboxFlags(arg1 string, arg2 *uint, arg3 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_CheckboxFlags(*(*C.swig_type_39)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func RadioButton__SWIG_0(arg1 string, arg2 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RadioButton__SWIG_0(*(*C.swig_type_40)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func RadioButton__SWIG_1(arg1 string, arg2 *int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RadioButton__SWIG_1(*(*C.swig_type_41)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func RadioButton(a0 string, a1 interface{}, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return RadioButton__SWIG_0(a0, a1.(bool))
	}
	if argc == 1 {
		return RadioButton__SWIG_1(a0, a1.(*int), a[0].(int))
	}
	panic("No match for overloaded function call")
}

func ProgressBar__SWIG_0(arg1 float32, arg2 Vec2, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_ProgressBar__SWIG_0(C.float(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_42)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func ProgressBar__SWIG_1(arg1 float32, arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ProgressBar__SWIG_1(C.float(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func ProgressBar__SWIG_2(arg1 float32) {
	_swig_i_0 := arg1
	C._wrap_ProgressBar__SWIG_2(C.float(_swig_i_0))
}

func ProgressBar(a0 float32, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		ProgressBar__SWIG_2(a0)
		return
	}
	if argc == 1 {
		ProgressBar__SWIG_1(a0, a[0].(Vec2))
		return
	}
	if argc == 2 {
		ProgressBar__SWIG_0(a0, a[0].(Vec2), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func Bullet() {
	C._wrap_Bullet()
}

func BeginCombo__SWIG_0(arg1 string, arg2 string, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_BeginCombo__SWIG_0(*(*C.swig_type_43)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_44)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func BeginCombo__SWIG_1(arg1 string, arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BeginCombo__SWIG_1(*(*C.swig_type_45)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_46)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func BeginCombo(a0 string, a1 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginCombo__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return BeginCombo__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func EndCombo() {
	C._wrap_EndCombo()
}

func Combo__SWIG_0(arg1 string, arg2 *int, arg3 *string, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_Combo__SWIG_0(*(*C.swig_type_47)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Combo__SWIG_1(arg1 string, arg2 *int, arg3 *string, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_Combo__SWIG_1(*(*C.swig_type_48)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Combo__SWIG_2(arg1 string, arg2 *int, arg3 string, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_Combo__SWIG_2(*(*C.swig_type_49)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_50)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func Combo__SWIG_3(arg1 string, arg2 *int, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Combo__SWIG_3(*(*C.swig_type_51)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_52)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func Combo__SWIG_4(arg1 string, arg2 *int, arg3 _swig_fnptr, arg4 uintptr, arg5 int, arg6 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_Combo__SWIG_4(*(*C.swig_type_53)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_type_54(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Combo__SWIG_5(arg1 string, arg2 *int, arg3 _swig_fnptr, arg4 uintptr, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_Combo__SWIG_5(*(*C.swig_type_55)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_type_56(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Combo(a0 string, a1 *int, a2 interface{}, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return Combo__SWIG_3(a0, a1, a2.(string))
	}
	if argc == 1 {
		if _, ok := a2.(*string); !ok {
			goto check_2
		}
		return Combo__SWIG_1(a0, a1, a2.(*string), a[0].(int))
	}
check_2:
	if argc == 1 {
		return Combo__SWIG_2(a0, a1, a2.(string), a[0].(int))
	}
	if argc == 2 {
		if _, ok := a2.(*string); !ok {
			goto check_4
		}
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		return Combo__SWIG_0(a0, a1, a2.(*string), a[0].(int), a[1].(int))
	}
check_4:
	if argc == 2 {
		return Combo__SWIG_5(a0, a1, a2.(_swig_fnptr), a[0].(uintptr), a[1].(int))
	}
	if argc == 3 {
		return Combo__SWIG_4(a0, a1, a2.(_swig_fnptr), a[0].(uintptr), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func DragFloat__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string, arg7 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragFloat__SWIG_0(*(*C.swig_type_57)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_58)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragFloat__SWIG_1(*(*C.swig_type_59)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_60)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragFloat__SWIG_2(*(*C.swig_type_61)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat__SWIG_3(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragFloat__SWIG_3(*(*C.swig_type_62)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat__SWIG_4(arg1 string, arg2 *float32, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragFloat__SWIG_4(*(*C.swig_type_63)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat__SWIG_5(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragFloat__SWIG_5(*(*C.swig_type_64)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragFloat__SWIG_5(a0, a1)
	}
	if argc == 1 {
		return DragFloat__SWIG_4(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragFloat__SWIG_3(a0, a1, a[0].(float32), a[1].(float32))
	}
	if argc == 3 {
		return DragFloat__SWIG_2(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		return DragFloat__SWIG_1(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string))
	}
	if argc == 5 {
		return DragFloat__SWIG_0(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string), a[4].(float32))
	}
	panic("No match for overloaded function call")
}

func DragFloat2__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string, arg7 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragFloat2__SWIG_0(*(*C.swig_type_65)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_66)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat2__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragFloat2__SWIG_1(*(*C.swig_type_67)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_68)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat2__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragFloat2__SWIG_2(*(*C.swig_type_69)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat2__SWIG_3(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragFloat2__SWIG_3(*(*C.swig_type_70)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat2__SWIG_4(arg1 string, arg2 *float32, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragFloat2__SWIG_4(*(*C.swig_type_71)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat2__SWIG_5(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragFloat2__SWIG_5(*(*C.swig_type_72)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat2(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragFloat2__SWIG_5(a0, a1)
	}
	if argc == 1 {
		return DragFloat2__SWIG_4(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragFloat2__SWIG_3(a0, a1, a[0].(float32), a[1].(float32))
	}
	if argc == 3 {
		return DragFloat2__SWIG_2(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		return DragFloat2__SWIG_1(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string))
	}
	if argc == 5 {
		return DragFloat2__SWIG_0(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string), a[4].(float32))
	}
	panic("No match for overloaded function call")
}

func DragFloat3__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string, arg7 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragFloat3__SWIG_0(*(*C.swig_type_73)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_74)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat3__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragFloat3__SWIG_1(*(*C.swig_type_75)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_76)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat3__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragFloat3__SWIG_2(*(*C.swig_type_77)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat3__SWIG_3(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragFloat3__SWIG_3(*(*C.swig_type_78)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat3__SWIG_4(arg1 string, arg2 *float32, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragFloat3__SWIG_4(*(*C.swig_type_79)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat3__SWIG_5(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragFloat3__SWIG_5(*(*C.swig_type_80)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat3(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragFloat3__SWIG_5(a0, a1)
	}
	if argc == 1 {
		return DragFloat3__SWIG_4(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragFloat3__SWIG_3(a0, a1, a[0].(float32), a[1].(float32))
	}
	if argc == 3 {
		return DragFloat3__SWIG_2(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		return DragFloat3__SWIG_1(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string))
	}
	if argc == 5 {
		return DragFloat3__SWIG_0(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string), a[4].(float32))
	}
	panic("No match for overloaded function call")
}

func DragFloat4__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string, arg7 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragFloat4__SWIG_0(*(*C.swig_type_81)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_82)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat4__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragFloat4__SWIG_1(*(*C.swig_type_83)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_84)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragFloat4__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragFloat4__SWIG_2(*(*C.swig_type_85)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat4__SWIG_3(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragFloat4__SWIG_3(*(*C.swig_type_86)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat4__SWIG_4(arg1 string, arg2 *float32, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragFloat4__SWIG_4(*(*C.swig_type_87)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat4__SWIG_5(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragFloat4__SWIG_5(*(*C.swig_type_88)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloat4(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragFloat4__SWIG_5(a0, a1)
	}
	if argc == 1 {
		return DragFloat4__SWIG_4(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragFloat4__SWIG_3(a0, a1, a[0].(float32), a[1].(float32))
	}
	if argc == 3 {
		return DragFloat4__SWIG_2(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		return DragFloat4__SWIG_1(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string))
	}
	if argc == 5 {
		return DragFloat4__SWIG_0(a0, a1, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string), a[4].(float32))
	}
	panic("No match for overloaded function call")
}

func DragFloatRange2__SWIG_0(arg1 string, arg2 *float32, arg3 *float32, arg4 float32, arg5 float32, arg6 float32, arg7 string, arg8 string, arg9 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	swig_r = (bool)(C._wrap_DragFloatRange2__SWIG_0(*(*C.swig_type_89)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), C.float(_swig_i_5), *(*C.swig_type_90)(unsafe.Pointer(&_swig_i_6)), *(*C.swig_type_91)(unsafe.Pointer(&_swig_i_7)), C.float(_swig_i_8)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
	return swig_r
}

func DragFloatRange2__SWIG_1(arg1 string, arg2 *float32, arg3 *float32, arg4 float32, arg5 float32, arg6 float32, arg7 string, arg8 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (bool)(C._wrap_DragFloatRange2__SWIG_1(*(*C.swig_type_92)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), C.float(_swig_i_5), *(*C.swig_type_93)(unsafe.Pointer(&_swig_i_6)), *(*C.swig_type_94)(unsafe.Pointer(&_swig_i_7))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
	return swig_r
}

func DragFloatRange2__SWIG_2(arg1 string, arg2 *float32, arg3 *float32, arg4 float32, arg5 float32, arg6 float32, arg7 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragFloatRange2__SWIG_2(*(*C.swig_type_95)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), C.float(_swig_i_5), *(*C.swig_type_96)(unsafe.Pointer(&_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func DragFloatRange2__SWIG_3(arg1 string, arg2 *float32, arg3 *float32, arg4 float32, arg5 float32, arg6 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragFloatRange2__SWIG_3(*(*C.swig_type_97)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), C.float(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloatRange2__SWIG_4(arg1 string, arg2 *float32, arg3 *float32, arg4 float32, arg5 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragFloatRange2__SWIG_4(*(*C.swig_type_98)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloatRange2__SWIG_5(arg1 string, arg2 *float32, arg3 *float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragFloatRange2__SWIG_5(*(*C.swig_type_99)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloatRange2__SWIG_6(arg1 string, arg2 *float32, arg3 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragFloatRange2__SWIG_6(*(*C.swig_type_100)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragFloatRange2(a0 string, a1 *float32, a2 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragFloatRange2__SWIG_6(a0, a1, a2)
	}
	if argc == 1 {
		return DragFloatRange2__SWIG_5(a0, a1, a2, a[0].(float32))
	}
	if argc == 2 {
		return DragFloatRange2__SWIG_4(a0, a1, a2, a[0].(float32), a[1].(float32))
	}
	if argc == 3 {
		return DragFloatRange2__SWIG_3(a0, a1, a2, a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		return DragFloatRange2__SWIG_2(a0, a1, a2, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string))
	}
	if argc == 5 {
		return DragFloatRange2__SWIG_1(a0, a1, a2, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string), a[4].(string))
	}
	if argc == 6 {
		return DragFloatRange2__SWIG_0(a0, a1, a2, a[0].(float32), a[1].(float32), a[2].(float32), a[3].(string), a[4].(string), a[5].(float32))
	}
	panic("No match for overloaded function call")
}

func DragInt__SWIG_0(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragInt__SWIG_0(*(*C.swig_type_101)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_102)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragInt__SWIG_1(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragInt__SWIG_1(*(*C.swig_type_103)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt__SWIG_2(arg1 string, arg2 *int, arg3 float32, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragInt__SWIG_2(*(*C.swig_type_104)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt__SWIG_3(arg1 string, arg2 *int, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragInt__SWIG_3(*(*C.swig_type_105)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt__SWIG_4(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragInt__SWIG_4(*(*C.swig_type_106)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragInt__SWIG_4(a0, a1)
	}
	if argc == 1 {
		return DragInt__SWIG_3(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragInt__SWIG_2(a0, a1, a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return DragInt__SWIG_1(a0, a1, a[0].(float32), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return DragInt__SWIG_0(a0, a1, a[0].(float32), a[1].(int), a[2].(int), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func DragInt2__SWIG_0(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragInt2__SWIG_0(*(*C.swig_type_107)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_108)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragInt2__SWIG_1(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragInt2__SWIG_1(*(*C.swig_type_109)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt2__SWIG_2(arg1 string, arg2 *int, arg3 float32, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragInt2__SWIG_2(*(*C.swig_type_110)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt2__SWIG_3(arg1 string, arg2 *int, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragInt2__SWIG_3(*(*C.swig_type_111)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt2__SWIG_4(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragInt2__SWIG_4(*(*C.swig_type_112)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt2(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragInt2__SWIG_4(a0, a1)
	}
	if argc == 1 {
		return DragInt2__SWIG_3(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragInt2__SWIG_2(a0, a1, a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return DragInt2__SWIG_1(a0, a1, a[0].(float32), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return DragInt2__SWIG_0(a0, a1, a[0].(float32), a[1].(int), a[2].(int), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func DragInt3__SWIG_0(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragInt3__SWIG_0(*(*C.swig_type_113)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_114)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragInt3__SWIG_1(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragInt3__SWIG_1(*(*C.swig_type_115)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt3__SWIG_2(arg1 string, arg2 *int, arg3 float32, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragInt3__SWIG_2(*(*C.swig_type_116)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt3__SWIG_3(arg1 string, arg2 *int, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragInt3__SWIG_3(*(*C.swig_type_117)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt3__SWIG_4(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragInt3__SWIG_4(*(*C.swig_type_118)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt3(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragInt3__SWIG_4(a0, a1)
	}
	if argc == 1 {
		return DragInt3__SWIG_3(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragInt3__SWIG_2(a0, a1, a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return DragInt3__SWIG_1(a0, a1, a[0].(float32), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return DragInt3__SWIG_0(a0, a1, a[0].(float32), a[1].(int), a[2].(int), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func DragInt4__SWIG_0(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragInt4__SWIG_0(*(*C.swig_type_119)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_120)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func DragInt4__SWIG_1(arg1 string, arg2 *int, arg3 float32, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragInt4__SWIG_1(*(*C.swig_type_121)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt4__SWIG_2(arg1 string, arg2 *int, arg3 float32, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragInt4__SWIG_2(*(*C.swig_type_122)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt4__SWIG_3(arg1 string, arg2 *int, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragInt4__SWIG_3(*(*C.swig_type_123)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt4__SWIG_4(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DragInt4__SWIG_4(*(*C.swig_type_124)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragInt4(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragInt4__SWIG_4(a0, a1)
	}
	if argc == 1 {
		return DragInt4__SWIG_3(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return DragInt4__SWIG_2(a0, a1, a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return DragInt4__SWIG_1(a0, a1, a[0].(float32), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return DragInt4__SWIG_0(a0, a1, a[0].(float32), a[1].(int), a[2].(int), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func DragIntRange2__SWIG_0(arg1 string, arg2 *int, arg3 *int, arg4 float32, arg5 int, arg6 int, arg7 string, arg8 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (bool)(C._wrap_DragIntRange2__SWIG_0(*(*C.swig_type_125)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), *(*C.swig_type_126)(unsafe.Pointer(&_swig_i_6)), *(*C.swig_type_127)(unsafe.Pointer(&_swig_i_7))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
	return swig_r
}

func DragIntRange2__SWIG_1(arg1 string, arg2 *int, arg3 *int, arg4 float32, arg5 int, arg6 int, arg7 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragIntRange2__SWIG_1(*(*C.swig_type_128)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), *(*C.swig_type_129)(unsafe.Pointer(&_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func DragIntRange2__SWIG_2(arg1 string, arg2 *int, arg3 *int, arg4 float32, arg5 int, arg6 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragIntRange2__SWIG_2(*(*C.swig_type_130)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragIntRange2__SWIG_3(arg1 string, arg2 *int, arg3 *int, arg4 float32, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragIntRange2__SWIG_3(*(*C.swig_type_131)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragIntRange2__SWIG_4(arg1 string, arg2 *int, arg3 *int, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragIntRange2__SWIG_4(*(*C.swig_type_132)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragIntRange2__SWIG_5(arg1 string, arg2 *int, arg3 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DragIntRange2__SWIG_5(*(*C.swig_type_133)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragIntRange2(a0 string, a1 *int, a2 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragIntRange2__SWIG_5(a0, a1, a2)
	}
	if argc == 1 {
		return DragIntRange2__SWIG_4(a0, a1, a2, a[0].(float32))
	}
	if argc == 2 {
		return DragIntRange2__SWIG_3(a0, a1, a2, a[0].(float32), a[1].(int))
	}
	if argc == 3 {
		return DragIntRange2__SWIG_2(a0, a1, a2, a[0].(float32), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return DragIntRange2__SWIG_1(a0, a1, a2, a[0].(float32), a[1].(int), a[2].(int), a[3].(string))
	}
	if argc == 5 {
		return DragIntRange2__SWIG_0(a0, a1, a2, a[0].(float32), a[1].(int), a[2].(int), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func DragScalar__SWIG_0(arg1 string, arg2 int, arg3 uintptr, arg4 float32, arg5 uintptr, arg6 uintptr, arg7 string, arg8 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (bool)(C._wrap_DragScalar__SWIG_0(*(*C.swig_type_134)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_135)(unsafe.Pointer(&_swig_i_6)), C.float(_swig_i_7)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func DragScalar__SWIG_1(arg1 string, arg2 int, arg3 uintptr, arg4 float32, arg5 uintptr, arg6 uintptr, arg7 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragScalar__SWIG_1(*(*C.swig_type_136)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_137)(unsafe.Pointer(&_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func DragScalar__SWIG_2(arg1 string, arg2 int, arg3 uintptr, arg4 float32, arg5 uintptr, arg6 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragScalar__SWIG_2(*(*C.swig_type_138)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragScalar__SWIG_3(arg1 string, arg2 int, arg3 uintptr, arg4 float32, arg5 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragScalar__SWIG_3(*(*C.swig_type_139)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragScalar__SWIG_4(arg1 string, arg2 int, arg3 uintptr, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DragScalar__SWIG_4(*(*C.swig_type_140)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragScalar(a0 string, a1 int, a2 uintptr, a3 float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragScalar__SWIG_4(a0, a1, a2, a3)
	}
	if argc == 1 {
		return DragScalar__SWIG_3(a0, a1, a2, a3, a[0].(uintptr))
	}
	if argc == 2 {
		return DragScalar__SWIG_2(a0, a1, a2, a3, a[0].(uintptr), a[1].(uintptr))
	}
	if argc == 3 {
		return DragScalar__SWIG_1(a0, a1, a2, a3, a[0].(uintptr), a[1].(uintptr), a[2].(string))
	}
	if argc == 4 {
		return DragScalar__SWIG_0(a0, a1, a2, a3, a[0].(uintptr), a[1].(uintptr), a[2].(string), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func DragScalarN__SWIG_0(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 float32, arg6 uintptr, arg7 uintptr, arg8 string, arg9 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	swig_r = (bool)(C._wrap_DragScalarN__SWIG_0(*(*C.swig_type_141)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), *(*C.swig_type_142)(unsafe.Pointer(&_swig_i_7)), C.float(_swig_i_8)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
	return swig_r
}

func DragScalarN__SWIG_1(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 float32, arg6 uintptr, arg7 uintptr, arg8 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (bool)(C._wrap_DragScalarN__SWIG_1(*(*C.swig_type_143)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), *(*C.swig_type_144)(unsafe.Pointer(&_swig_i_7))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
	return swig_r
}

func DragScalarN__SWIG_2(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 float32, arg6 uintptr, arg7 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_DragScalarN__SWIG_2(*(*C.swig_type_145)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragScalarN__SWIG_3(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 float32, arg6 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_DragScalarN__SWIG_3(*(*C.swig_type_146)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4), C.uintptr_t(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragScalarN__SWIG_4(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_DragScalarN__SWIG_4(*(*C.swig_type_147)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DragScalarN(a0 string, a1 int, a2 uintptr, a3 int, a4 float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return DragScalarN__SWIG_4(a0, a1, a2, a3, a4)
	}
	if argc == 1 {
		return DragScalarN__SWIG_3(a0, a1, a2, a3, a4, a[0].(uintptr))
	}
	if argc == 2 {
		return DragScalarN__SWIG_2(a0, a1, a2, a3, a4, a[0].(uintptr), a[1].(uintptr))
	}
	if argc == 3 {
		return DragScalarN__SWIG_1(a0, a1, a2, a3, a4, a[0].(uintptr), a[1].(uintptr), a[2].(string))
	}
	if argc == 4 {
		return DragScalarN__SWIG_0(a0, a1, a2, a3, a4, a[0].(uintptr), a[1].(uintptr), a[2].(string), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func SliderFloat__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string, arg6 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_SliderFloat__SWIG_0(*(*C.swig_type_148)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_149)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderFloat__SWIG_1(*(*C.swig_type_150)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_151)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderFloat__SWIG_2(*(*C.swig_type_152)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderFloat(a0 string, a1 *float32, a2 float32, a3 float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderFloat__SWIG_2(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderFloat__SWIG_1(a0, a1, a2, a3, a[0].(string))
	}
	if argc == 2 {
		return SliderFloat__SWIG_0(a0, a1, a2, a3, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func SliderFloat2__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string, arg6 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_SliderFloat2__SWIG_0(*(*C.swig_type_153)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_154)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat2__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderFloat2__SWIG_1(*(*C.swig_type_155)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_156)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat2__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderFloat2__SWIG_2(*(*C.swig_type_157)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderFloat2(a0 string, a1 *float32, a2 float32, a3 float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderFloat2__SWIG_2(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderFloat2__SWIG_1(a0, a1, a2, a3, a[0].(string))
	}
	if argc == 2 {
		return SliderFloat2__SWIG_0(a0, a1, a2, a3, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func SliderFloat3__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string, arg6 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_SliderFloat3__SWIG_0(*(*C.swig_type_158)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_159)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat3__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderFloat3__SWIG_1(*(*C.swig_type_160)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_161)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat3__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderFloat3__SWIG_2(*(*C.swig_type_162)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderFloat3(a0 string, a1 *float32, a2 float32, a3 float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderFloat3__SWIG_2(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderFloat3__SWIG_1(a0, a1, a2, a3, a[0].(string))
	}
	if argc == 2 {
		return SliderFloat3__SWIG_0(a0, a1, a2, a3, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func SliderFloat4__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string, arg6 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_SliderFloat4__SWIG_0(*(*C.swig_type_163)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_164)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat4__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderFloat4__SWIG_1(*(*C.swig_type_165)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_166)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderFloat4__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderFloat4__SWIG_2(*(*C.swig_type_167)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderFloat4(a0 string, a1 *float32, a2 float32, a3 float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderFloat4__SWIG_2(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderFloat4__SWIG_1(a0, a1, a2, a3, a[0].(string))
	}
	if argc == 2 {
		return SliderFloat4__SWIG_0(a0, a1, a2, a3, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func SliderAngle__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderAngle__SWIG_0(*(*C.swig_type_168)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderAngle__SWIG_1(arg1 string, arg2 *float32, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_SliderAngle__SWIG_1(*(*C.swig_type_169)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderAngle__SWIG_2(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_SliderAngle__SWIG_2(*(*C.swig_type_170)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderAngle(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderAngle__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return SliderAngle__SWIG_1(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return SliderAngle__SWIG_0(a0, a1, a[0].(float32), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func SliderInt__SWIG_0(arg1 string, arg2 *int, arg3 int, arg4 int, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderInt__SWIG_0(*(*C.swig_type_171)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_172)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderInt__SWIG_1(arg1 string, arg2 *int, arg3 int, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderInt__SWIG_1(*(*C.swig_type_173)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderInt(a0 string, a1 *int, a2 int, a3 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderInt__SWIG_1(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderInt__SWIG_0(a0, a1, a2, a3, a[0].(string))
	}
	panic("No match for overloaded function call")
}

func SliderInt2__SWIG_0(arg1 string, arg2 *int, arg3 int, arg4 int, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderInt2__SWIG_0(*(*C.swig_type_174)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_175)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderInt2__SWIG_1(arg1 string, arg2 *int, arg3 int, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderInt2__SWIG_1(*(*C.swig_type_176)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderInt2(a0 string, a1 *int, a2 int, a3 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderInt2__SWIG_1(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderInt2__SWIG_0(a0, a1, a2, a3, a[0].(string))
	}
	panic("No match for overloaded function call")
}

func SliderInt3__SWIG_0(arg1 string, arg2 *int, arg3 int, arg4 int, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderInt3__SWIG_0(*(*C.swig_type_177)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_178)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderInt3__SWIG_1(arg1 string, arg2 *int, arg3 int, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderInt3__SWIG_1(*(*C.swig_type_179)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderInt3(a0 string, a1 *int, a2 int, a3 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderInt3__SWIG_1(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderInt3__SWIG_0(a0, a1, a2, a3, a[0].(string))
	}
	panic("No match for overloaded function call")
}

func SliderInt4__SWIG_0(arg1 string, arg2 *int, arg3 int, arg4 int, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderInt4__SWIG_0(*(*C.swig_type_180)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_181)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func SliderInt4__SWIG_1(arg1 string, arg2 *int, arg3 int, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SliderInt4__SWIG_1(*(*C.swig_type_182)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderInt4(a0 string, a1 *int, a2 int, a3 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderInt4__SWIG_1(a0, a1, a2, a3)
	}
	if argc == 1 {
		return SliderInt4__SWIG_0(a0, a1, a2, a3, a[0].(string))
	}
	panic("No match for overloaded function call")
}

func SliderScalar__SWIG_0(arg1 string, arg2 int, arg3 uintptr, arg4 uintptr, arg5 uintptr, arg6 string, arg7 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_SliderScalar__SWIG_0(*(*C.swig_type_183)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), *(*C.swig_type_184)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func SliderScalar__SWIG_1(arg1 string, arg2 int, arg3 uintptr, arg4 uintptr, arg5 uintptr, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_SliderScalar__SWIG_1(*(*C.swig_type_185)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), *(*C.swig_type_186)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func SliderScalar__SWIG_2(arg1 string, arg2 int, arg3 uintptr, arg4 uintptr, arg5 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_SliderScalar__SWIG_2(*(*C.swig_type_187)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderScalar(a0 string, a1 int, a2 uintptr, a3 uintptr, a4 uintptr, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderScalar__SWIG_2(a0, a1, a2, a3, a4)
	}
	if argc == 1 {
		return SliderScalar__SWIG_1(a0, a1, a2, a3, a4, a[0].(string))
	}
	if argc == 2 {
		return SliderScalar__SWIG_0(a0, a1, a2, a3, a4, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func SliderScalarN__SWIG_0(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 uintptr, arg6 uintptr, arg7 string, arg8 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (bool)(C._wrap_SliderScalarN__SWIG_0(*(*C.swig_type_188)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_189)(unsafe.Pointer(&_swig_i_6)), C.float(_swig_i_7)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func SliderScalarN__SWIG_1(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 uintptr, arg6 uintptr, arg7 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_SliderScalarN__SWIG_1(*(*C.swig_type_190)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_191)(unsafe.Pointer(&_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func SliderScalarN__SWIG_2(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 uintptr, arg6 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_SliderScalarN__SWIG_2(*(*C.swig_type_192)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SliderScalarN(a0 string, a1 int, a2 uintptr, a3 int, a4 uintptr, a5 uintptr, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SliderScalarN__SWIG_2(a0, a1, a2, a3, a4, a5)
	}
	if argc == 1 {
		return SliderScalarN__SWIG_1(a0, a1, a2, a3, a4, a5, a[0].(string))
	}
	if argc == 2 {
		return SliderScalarN__SWIG_0(a0, a1, a2, a3, a4, a5, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func VSliderFloat__SWIG_0(arg1 string, arg2 Vec2, arg3 *float32, arg4 float32, arg5 float32, arg6 string, arg7 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_VSliderFloat__SWIG_0(*(*C.swig_type_193)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_194)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func VSliderFloat__SWIG_1(arg1 string, arg2 Vec2, arg3 *float32, arg4 float32, arg5 float32, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_VSliderFloat__SWIG_1(*(*C.swig_type_195)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), *(*C.swig_type_196)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func VSliderFloat__SWIG_2(arg1 string, arg2 Vec2, arg3 *float32, arg4 float32, arg5 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_VSliderFloat__SWIG_2(*(*C.swig_type_197)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func VSliderFloat(a0 string, a1 Vec2, a2 *float32, a3 float32, a4 float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return VSliderFloat__SWIG_2(a0, a1, a2, a3, a4)
	}
	if argc == 1 {
		return VSliderFloat__SWIG_1(a0, a1, a2, a3, a4, a[0].(string))
	}
	if argc == 2 {
		return VSliderFloat__SWIG_0(a0, a1, a2, a3, a4, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func VSliderInt__SWIG_0(arg1 string, arg2 Vec2, arg3 *int, arg4 int, arg5 int, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_VSliderInt__SWIG_0(*(*C.swig_type_198)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_199)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func VSliderInt__SWIG_1(arg1 string, arg2 Vec2, arg3 *int, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_VSliderInt__SWIG_1(*(*C.swig_type_200)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func VSliderInt(a0 string, a1 Vec2, a2 *int, a3 int, a4 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return VSliderInt__SWIG_1(a0, a1, a2, a3, a4)
	}
	if argc == 1 {
		return VSliderInt__SWIG_0(a0, a1, a2, a3, a4, a[0].(string))
	}
	panic("No match for overloaded function call")
}

func VSliderScalar__SWIG_0(arg1 string, arg2 Vec2, arg3 int, arg4 uintptr, arg5 uintptr, arg6 uintptr, arg7 string, arg8 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (bool)(C._wrap_VSliderScalar__SWIG_0(*(*C.swig_type_201)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_202)(unsafe.Pointer(&_swig_i_6)), C.float(_swig_i_7)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func VSliderScalar__SWIG_1(arg1 string, arg2 Vec2, arg3 int, arg4 uintptr, arg5 uintptr, arg6 uintptr, arg7 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_VSliderScalar__SWIG_1(*(*C.swig_type_203)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_204)(unsafe.Pointer(&_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func VSliderScalar__SWIG_2(arg1 string, arg2 Vec2, arg3 int, arg4 uintptr, arg5 uintptr, arg6 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_VSliderScalar__SWIG_2(*(*C.swig_type_205)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func VSliderScalar(a0 string, a1 Vec2, a2 int, a3 uintptr, a4 uintptr, a5 uintptr, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return VSliderScalar__SWIG_2(a0, a1, a2, a3, a4, a5)
	}
	if argc == 1 {
		return VSliderScalar__SWIG_1(a0, a1, a2, a3, a4, a5, a[0].(string))
	}
	if argc == 2 {
		return VSliderScalar__SWIG_0(a0, a1, a2, a3, a4, a5, a[0].(string), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func InputText__SWIG_0(arg1 string, arg2 string, arg3 int64, arg4 int, arg5 _swig_fnptr, arg6 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_InputText__SWIG_0(*(*C.swig_type_206)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_207)(unsafe.Pointer(&_swig_i_1)), C.swig_type_208(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_209(_swig_i_4), C.uintptr_t(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputText__SWIG_1(arg1 string, arg2 string, arg3 int64, arg4 int, arg5 _swig_fnptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_InputText__SWIG_1(*(*C.swig_type_210)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_211)(unsafe.Pointer(&_swig_i_1)), C.swig_type_212(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_type_213(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputText__SWIG_2(arg1 string, arg2 string, arg3 int64, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputText__SWIG_2(*(*C.swig_type_214)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_215)(unsafe.Pointer(&_swig_i_1)), C.swig_type_216(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputText__SWIG_3(arg1 string, arg2 string, arg3 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputText__SWIG_3(*(*C.swig_type_217)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_218)(unsafe.Pointer(&_swig_i_1)), C.swig_type_219(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputText(a0 string, a1 string, a2 int64, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputText__SWIG_3(a0, a1, a2)
	}
	if argc == 1 {
		return InputText__SWIG_2(a0, a1, a2, a[0].(int))
	}
	if argc == 2 {
		return InputText__SWIG_1(a0, a1, a2, a[0].(int), a[1].(_swig_fnptr))
	}
	if argc == 3 {
		return InputText__SWIG_0(a0, a1, a2, a[0].(int), a[1].(_swig_fnptr), a[2].(uintptr))
	}
	panic("No match for overloaded function call")
}

func InputTextMultiline__SWIG_0(arg1 string, arg2 string, arg3 int64, arg4 Vec2, arg5 int, arg6 _swig_fnptr, arg7 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_InputTextMultiline__SWIG_0(*(*C.swig_type_220)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_221)(unsafe.Pointer(&_swig_i_1)), C.swig_type_222(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_type_223(_swig_i_5), C.uintptr_t(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputTextMultiline__SWIG_1(arg1 string, arg2 string, arg3 int64, arg4 Vec2, arg5 int, arg6 _swig_fnptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_InputTextMultiline__SWIG_1(*(*C.swig_type_224)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_225)(unsafe.Pointer(&_swig_i_1)), C.swig_type_226(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_type_227(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputTextMultiline__SWIG_2(arg1 string, arg2 string, arg3 int64, arg4 Vec2, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_InputTextMultiline__SWIG_2(*(*C.swig_type_228)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_229)(unsafe.Pointer(&_swig_i_1)), C.swig_type_230(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputTextMultiline__SWIG_3(arg1 string, arg2 string, arg3 int64, arg4 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_InputTextMultiline__SWIG_3(*(*C.swig_type_231)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_232)(unsafe.Pointer(&_swig_i_1)), C.swig_type_233(_swig_i_2), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputTextMultiline__SWIG_4(arg1 string, arg2 string, arg3 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputTextMultiline__SWIG_4(*(*C.swig_type_234)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_235)(unsafe.Pointer(&_swig_i_1)), C.swig_type_236(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func InputTextMultiline(a0 string, a1 string, a2 int64, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputTextMultiline__SWIG_4(a0, a1, a2)
	}
	if argc == 1 {
		return InputTextMultiline__SWIG_3(a0, a1, a2, a[0].(Vec2))
	}
	if argc == 2 {
		return InputTextMultiline__SWIG_2(a0, a1, a2, a[0].(Vec2), a[1].(int))
	}
	if argc == 3 {
		return InputTextMultiline__SWIG_1(a0, a1, a2, a[0].(Vec2), a[1].(int), a[2].(_swig_fnptr))
	}
	if argc == 4 {
		return InputTextMultiline__SWIG_0(a0, a1, a2, a[0].(Vec2), a[1].(int), a[2].(_swig_fnptr), a[3].(uintptr))
	}
	panic("No match for overloaded function call")
}

func InputFloat__SWIG_0(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string, arg6 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_InputFloat__SWIG_0(*(*C.swig_type_237)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_238)(unsafe.Pointer(&_swig_i_4)), C.swig_intgo(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func InputFloat__SWIG_1(arg1 string, arg2 *float32, arg3 float32, arg4 float32, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_InputFloat__SWIG_1(*(*C.swig_type_239)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_240)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func InputFloat__SWIG_2(arg1 string, arg2 *float32, arg3 float32, arg4 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputFloat__SWIG_2(*(*C.swig_type_241)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputFloat__SWIG_3(arg1 string, arg2 *float32, arg3 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputFloat__SWIG_3(*(*C.swig_type_242)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.float(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputFloat__SWIG_4(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputFloat__SWIG_4(*(*C.swig_type_243)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputFloat(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputFloat__SWIG_4(a0, a1)
	}
	if argc == 1 {
		return InputFloat__SWIG_3(a0, a1, a[0].(float32))
	}
	if argc == 2 {
		return InputFloat__SWIG_2(a0, a1, a[0].(float32), a[1].(float32))
	}
	if argc == 3 {
		return InputFloat__SWIG_1(a0, a1, a[0].(float32), a[1].(float32), a[2].(string))
	}
	if argc == 4 {
		return InputFloat__SWIG_0(a0, a1, a[0].(float32), a[1].(float32), a[2].(string), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func InputFloat2__SWIG_0(arg1 string, arg2 *float32, arg3 string, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputFloat2__SWIG_0(*(*C.swig_type_244)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_245)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func InputFloat2__SWIG_1(arg1 string, arg2 *float32, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputFloat2__SWIG_1(*(*C.swig_type_246)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_247)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func InputFloat2__SWIG_2(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputFloat2__SWIG_2(*(*C.swig_type_248)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputFloat2(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputFloat2__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return InputFloat2__SWIG_1(a0, a1, a[0].(string))
	}
	if argc == 2 {
		return InputFloat2__SWIG_0(a0, a1, a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func InputFloat3__SWIG_0(arg1 string, arg2 *float32, arg3 string, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputFloat3__SWIG_0(*(*C.swig_type_249)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_250)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func InputFloat3__SWIG_1(arg1 string, arg2 *float32, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputFloat3__SWIG_1(*(*C.swig_type_251)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_252)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func InputFloat3__SWIG_2(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputFloat3__SWIG_2(*(*C.swig_type_253)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputFloat3(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputFloat3__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return InputFloat3__SWIG_1(a0, a1, a[0].(string))
	}
	if argc == 2 {
		return InputFloat3__SWIG_0(a0, a1, a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func InputFloat4__SWIG_0(arg1 string, arg2 *float32, arg3 string, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputFloat4__SWIG_0(*(*C.swig_type_254)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_255)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func InputFloat4__SWIG_1(arg1 string, arg2 *float32, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputFloat4__SWIG_1(*(*C.swig_type_256)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), *(*C.swig_type_257)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func InputFloat4__SWIG_2(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputFloat4__SWIG_2(*(*C.swig_type_258)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputFloat4(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputFloat4__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return InputFloat4__SWIG_1(a0, a1, a[0].(string))
	}
	if argc == 2 {
		return InputFloat4__SWIG_0(a0, a1, a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func InputInt__SWIG_0(arg1 string, arg2 *int, arg3 int, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_InputInt__SWIG_0(*(*C.swig_type_259)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt__SWIG_1(arg1 string, arg2 *int, arg3 int, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputInt__SWIG_1(*(*C.swig_type_260)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt__SWIG_2(arg1 string, arg2 *int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputInt__SWIG_2(*(*C.swig_type_261)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt__SWIG_3(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputInt__SWIG_3(*(*C.swig_type_262)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputInt__SWIG_3(a0, a1)
	}
	if argc == 1 {
		return InputInt__SWIG_2(a0, a1, a[0].(int))
	}
	if argc == 2 {
		return InputInt__SWIG_1(a0, a1, a[0].(int), a[1].(int))
	}
	if argc == 3 {
		return InputInt__SWIG_0(a0, a1, a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func InputInt2__SWIG_0(arg1 string, arg2 *int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputInt2__SWIG_0(*(*C.swig_type_263)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt2__SWIG_1(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputInt2__SWIG_1(*(*C.swig_type_264)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt2(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputInt2__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return InputInt2__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func InputInt3__SWIG_0(arg1 string, arg2 *int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputInt3__SWIG_0(*(*C.swig_type_265)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt3__SWIG_1(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputInt3__SWIG_1(*(*C.swig_type_266)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt3(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputInt3__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return InputInt3__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func InputInt4__SWIG_0(arg1 string, arg2 *int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputInt4__SWIG_0(*(*C.swig_type_267)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt4__SWIG_1(arg1 string, arg2 *int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputInt4__SWIG_1(*(*C.swig_type_268)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputInt4(a0 string, a1 *int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputInt4__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return InputInt4__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func InputDouble__SWIG_0(arg1 string, arg2 *float64, arg3 float64, arg4 float64, arg5 string, arg6 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_InputDouble__SWIG_0(*(*C.swig_type_269)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), *(*C.swig_type_270)(unsafe.Pointer(&_swig_i_4)), C.swig_intgo(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func InputDouble__SWIG_1(arg1 string, arg2 *float64, arg3 float64, arg4 float64, arg5 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_InputDouble__SWIG_1(*(*C.swig_type_271)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3), *(*C.swig_type_272)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func InputDouble__SWIG_2(arg1 string, arg2 *float64, arg3 float64, arg4 float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputDouble__SWIG_2(*(*C.swig_type_273)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputDouble__SWIG_3(arg1 string, arg2 *float64, arg3 float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputDouble__SWIG_3(*(*C.swig_type_274)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.double(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputDouble__SWIG_4(arg1 string, arg2 *float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_InputDouble__SWIG_4(*(*C.swig_type_275)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputDouble(a0 string, a1 *float64, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputDouble__SWIG_4(a0, a1)
	}
	if argc == 1 {
		return InputDouble__SWIG_3(a0, a1, a[0].(float64))
	}
	if argc == 2 {
		return InputDouble__SWIG_2(a0, a1, a[0].(float64), a[1].(float64))
	}
	if argc == 3 {
		return InputDouble__SWIG_1(a0, a1, a[0].(float64), a[1].(float64), a[2].(string))
	}
	if argc == 4 {
		return InputDouble__SWIG_0(a0, a1, a[0].(float64), a[1].(float64), a[2].(string), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func InputScalar__SWIG_0(arg1 string, arg2 int, arg3 uintptr, arg4 uintptr, arg5 uintptr, arg6 string, arg7 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_InputScalar__SWIG_0(*(*C.swig_type_276)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), *(*C.swig_type_277)(unsafe.Pointer(&_swig_i_5)), C.swig_intgo(_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func InputScalar__SWIG_1(arg1 string, arg2 int, arg3 uintptr, arg4 uintptr, arg5 uintptr, arg6 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_InputScalar__SWIG_1(*(*C.swig_type_278)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), *(*C.swig_type_279)(unsafe.Pointer(&_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func InputScalar__SWIG_2(arg1 string, arg2 int, arg3 uintptr, arg4 uintptr, arg5 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_InputScalar__SWIG_2(*(*C.swig_type_280)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputScalar__SWIG_3(arg1 string, arg2 int, arg3 uintptr, arg4 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputScalar__SWIG_3(*(*C.swig_type_281)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputScalar__SWIG_4(arg1 string, arg2 int, arg3 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_InputScalar__SWIG_4(*(*C.swig_type_282)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputScalar(a0 string, a1 int, a2 uintptr, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputScalar__SWIG_4(a0, a1, a2)
	}
	if argc == 1 {
		return InputScalar__SWIG_3(a0, a1, a2, a[0].(uintptr))
	}
	if argc == 2 {
		return InputScalar__SWIG_2(a0, a1, a2, a[0].(uintptr), a[1].(uintptr))
	}
	if argc == 3 {
		return InputScalar__SWIG_1(a0, a1, a2, a[0].(uintptr), a[1].(uintptr), a[2].(string))
	}
	if argc == 4 {
		return InputScalar__SWIG_0(a0, a1, a2, a[0].(uintptr), a[1].(uintptr), a[2].(string), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func InputScalarN__SWIG_0(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 uintptr, arg6 uintptr, arg7 string, arg8 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (bool)(C._wrap_InputScalarN__SWIG_0(*(*C.swig_type_283)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_284)(unsafe.Pointer(&_swig_i_6)), C.swig_intgo(_swig_i_7)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func InputScalarN__SWIG_1(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 uintptr, arg6 uintptr, arg7 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (bool)(C._wrap_InputScalarN__SWIG_1(*(*C.swig_type_285)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_286)(unsafe.Pointer(&_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	return swig_r
}

func InputScalarN__SWIG_2(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 uintptr, arg6 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_InputScalarN__SWIG_2(*(*C.swig_type_287)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputScalarN__SWIG_3(arg1 string, arg2 int, arg3 uintptr, arg4 int, arg5 uintptr) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_InputScalarN__SWIG_3(*(*C.swig_type_288)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.uintptr_t(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputScalarN__SWIG_4(arg1 string, arg2 int, arg3 uintptr, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_InputScalarN__SWIG_4(*(*C.swig_type_289)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func InputScalarN(a0 string, a1 int, a2 uintptr, a3 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return InputScalarN__SWIG_4(a0, a1, a2, a3)
	}
	if argc == 1 {
		return InputScalarN__SWIG_3(a0, a1, a2, a3, a[0].(uintptr))
	}
	if argc == 2 {
		return InputScalarN__SWIG_2(a0, a1, a2, a3, a[0].(uintptr), a[1].(uintptr))
	}
	if argc == 3 {
		return InputScalarN__SWIG_1(a0, a1, a2, a3, a[0].(uintptr), a[1].(uintptr), a[2].(string))
	}
	if argc == 4 {
		return InputScalarN__SWIG_0(a0, a1, a2, a3, a[0].(uintptr), a[1].(uintptr), a[2].(string), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func ColorEdit3__SWIG_0(arg1 string, arg2 *float32, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ColorEdit3__SWIG_0(*(*C.swig_type_290)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorEdit3__SWIG_1(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ColorEdit3__SWIG_1(*(*C.swig_type_291)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorEdit3(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ColorEdit3__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return ColorEdit3__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func ColorEdit4__SWIG_0(arg1 string, arg2 *float32, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ColorEdit4__SWIG_0(*(*C.swig_type_292)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorEdit4__SWIG_1(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ColorEdit4__SWIG_1(*(*C.swig_type_293)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorEdit4(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ColorEdit4__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return ColorEdit4__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func ColorPicker3__SWIG_0(arg1 string, arg2 *float32, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ColorPicker3__SWIG_0(*(*C.swig_type_294)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorPicker3__SWIG_1(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ColorPicker3__SWIG_1(*(*C.swig_type_295)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorPicker3(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ColorPicker3__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return ColorPicker3__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func ColorPicker4__SWIG_0(arg1 string, arg2 *float32, arg3 int, arg4 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_ColorPicker4__SWIG_0(*(*C.swig_type_296)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_voidp(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorPicker4__SWIG_1(arg1 string, arg2 *float32, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ColorPicker4__SWIG_1(*(*C.swig_type_297)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorPicker4__SWIG_2(arg1 string, arg2 *float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ColorPicker4__SWIG_2(*(*C.swig_type_298)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorPicker4(a0 string, a1 *float32, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ColorPicker4__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return ColorPicker4__SWIG_1(a0, a1, a[0].(int))
	}
	if argc == 2 {
		return ColorPicker4__SWIG_0(a0, a1, a[0].(int), a[1].(*float32))
	}
	panic("No match for overloaded function call")
}

func ColorButton__SWIG_0(arg1 string, arg2 Vec4, arg3 int, arg4 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_ColorButton__SWIG_0(*(*C.swig_type_299)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorButton__SWIG_1(arg1 string, arg2 Vec4, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ColorButton__SWIG_1(*(*C.swig_type_300)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorButton__SWIG_2(arg1 string, arg2 Vec4) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_ColorButton__SWIG_2(*(*C.swig_type_301)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ColorButton(a0 string, a1 Vec4, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ColorButton__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return ColorButton__SWIG_1(a0, a1, a[0].(int))
	}
	if argc == 2 {
		return ColorButton__SWIG_0(a0, a1, a[0].(int), a[1].(Vec2))
	}
	panic("No match for overloaded function call")
}

func SetColorEditOptions(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetColorEditOptions(C.swig_intgo(_swig_i_0))
}

func TreeNode__SWIG_0(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_TreeNode__SWIG_0(*(*C.swig_type_302)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func TreeNode__SWIG_1(arg1 string, arg2 string, args ...interface{}) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1

	_swig_i_1 := fmtString(arg2, args...)
	swig_r = (bool)(C._wrap_TreeNode__SWIG_1(*(*C.swig_type_303)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func TreeNode__SWIG_2(arg1 uintptr, arg2 string, args ...interface{}) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1

	_swig_i_1 := fmtString(arg2, args...)
	swig_r = (bool)(C._wrap_TreeNode__SWIG_2(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1)))
	return swig_r
}

func TreeNode(a0 interface{}, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return TreeNode__SWIG_0(a0.(string))
	}
	if argc >= 1 {
		if _, ok := a0.(uintptr); !ok {
			goto check_2
		}
		return TreeNode__SWIG_2(a0.(uintptr), a[0].(string), a[1:]...)
	}
check_2:
	if argc >= 1 {
		return TreeNode__SWIG_1(a0.(string), a[0].(string), a[1:]...)
	}
	panic("No match for overloaded function call")
}

func TreeNodeEx__SWIG_0(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_TreeNodeEx__SWIG_0(*(*C.swig_type_304)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func TreeNodeEx__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_TreeNodeEx__SWIG_1(*(*C.swig_type_305)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func TreeNodeEx__SWIG_2(arg1 string, arg2 int, arg3 string, args ...interface{}) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2

	_swig_i_2 := fmtString(arg3, args...)
	swig_r = (bool)(C._wrap_TreeNodeEx__SWIG_2(*(*C.swig_type_306)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func TreeNodeEx__SWIG_3(arg1 uintptr, arg2 int, arg3 string, args ...interface{}) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2

	_swig_i_2 := fmtString(arg3, args...)
	swig_r = (bool)(C._wrap_TreeNodeEx__SWIG_3(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2)))
	return swig_r
}

func TreeNodeEx(a0 interface{}, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return TreeNodeEx__SWIG_1(a0.(string))
	}
	if argc == 1 {
		return TreeNodeEx__SWIG_0(a0.(string), a[0].(int))
	}
	if argc >= 2 {
		if _, ok := a0.(uintptr); !ok {
			goto check_3
		}
		return TreeNodeEx__SWIG_3(a0.(uintptr), a[0].(int), a[1].(string), a[2:]...,
		)
	}
check_3:
	if argc >= 2 {
		return TreeNodeEx__SWIG_2(a0.(string), a[0].(int), a[1].(string), a[2:]...,
		)
	}
	panic("No match for overloaded function call")
}

func TreePush__SWIG_0(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_TreePush__SWIG_0(*(*C.swig_type_307)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func TreePush__SWIG_1(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_TreePush__SWIG_1(C.uintptr_t(_swig_i_0))
}

func TreePush__SWIG_2() {
	C._wrap_TreePush__SWIG_2()
}

func TreePush(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		TreePush__SWIG_2()
		return
	}
	if argc == 1 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_2
		}
		TreePush__SWIG_1(a[0].(uintptr))
		return
	}
check_2:
	if argc == 1 {
		TreePush__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func TreePop() {
	C._wrap_TreePop()
}

func TreeAdvanceToLabelPos() {
	C._wrap_TreeAdvanceToLabelPos()
}

func GetTreeNodeToLabelSpacing() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetTreeNodeToLabelSpacing())
	return swig_r
}

func SetNextTreeNodeOpen__SWIG_0(arg1 bool, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetNextTreeNodeOpen__SWIG_0(C._Bool(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func SetNextTreeNodeOpen__SWIG_1(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_SetNextTreeNodeOpen__SWIG_1(C._Bool(_swig_i_0))
}

func SetNextTreeNodeOpen(a0 bool, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetNextTreeNodeOpen__SWIG_1(a0)
		return
	}
	if argc == 1 {
		SetNextTreeNodeOpen__SWIG_0(a0, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func CollapsingHeader__SWIG_0(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_CollapsingHeader__SWIG_0(*(*C.swig_type_308)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func CollapsingHeader__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_CollapsingHeader__SWIG_1(*(*C.swig_type_309)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func CollapsingHeader__SWIG_2(arg1 string, arg2 *bool, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_CollapsingHeader__SWIG_2(*(*C.swig_type_310)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func CollapsingHeader__SWIG_3(arg1 string, arg2 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_CollapsingHeader__SWIG_3(*(*C.swig_type_311)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func CollapsingHeader(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return CollapsingHeader__SWIG_1(a0)
	}
	if argc == 1 {
		if _, ok := a[0].(*bool); !ok {
			goto check_2
		}
		return CollapsingHeader__SWIG_3(a0, a[0].(*bool))
	}
check_2:
	if argc == 1 {
		return CollapsingHeader__SWIG_0(a0, a[0].(int))
	}
	if argc == 2 {
		return CollapsingHeader__SWIG_2(a0, a[0].(*bool), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func Selectable__SWIG_0(arg1 string, arg2 bool, arg3 int, arg4 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_Selectable__SWIG_0(*(*C.swig_type_312)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Selectable__SWIG_1(arg1 string, arg2 bool, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Selectable__SWIG_1(*(*C.swig_type_313)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Selectable__SWIG_2(arg1 string, arg2 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Selectable__SWIG_2(*(*C.swig_type_314)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Selectable__SWIG_3(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Selectable__SWIG_3(*(*C.swig_type_315)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Selectable__SWIG_4(arg1 string, arg2 *bool, arg3 int, arg4 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (bool)(C._wrap_Selectable__SWIG_4(*(*C.swig_type_316)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Selectable__SWIG_5(arg1 string, arg2 *bool, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Selectable__SWIG_5(*(*C.swig_type_317)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Selectable__SWIG_6(arg1 string, arg2 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Selectable__SWIG_6(*(*C.swig_type_318)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Selectable(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return Selectable__SWIG_3(a0)
	}
	if argc == 1 {
		if _, ok := a[0].(*bool); !ok {
			goto check_2
		}
		return Selectable__SWIG_6(a0, a[0].(*bool))
	}
check_2:
	if argc == 1 {
		return Selectable__SWIG_2(a0, a[0].(bool))
	}
	if argc == 2 {
		if _, ok := a[0].(*bool); !ok {
			goto check_4
		}
		return Selectable__SWIG_5(a0, a[0].(*bool), a[1].(int))
	}
check_4:
	if argc == 2 {
		return Selectable__SWIG_1(a0, a[0].(bool), a[1].(int))
	}
	if argc == 3 {
		if _, ok := a[0].(*bool); !ok {
			goto check_6
		}
		return Selectable__SWIG_4(a0, a[0].(*bool), a[1].(int), a[2].(Vec2))
	}
check_6:
	if argc == 3 {
		return Selectable__SWIG_0(a0, a[0].(bool), a[1].(int), a[2].(Vec2))
	}
	panic("No match for overloaded function call")
}

func ListBox__SWIG_0(arg1 string, arg2 *int, arg3 *string, arg4 int, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_ListBox__SWIG_0(*(*C.swig_type_319)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBox__SWIG_1(arg1 string, arg2 *int, arg3 *string, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_ListBox__SWIG_1(*(*C.swig_type_320)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBox__SWIG_2(arg1 string, arg2 *int, arg3 _swig_fnptr, arg4 uintptr, arg5 int, arg6 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (bool)(C._wrap_ListBox__SWIG_2(*(*C.swig_type_321)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_type_322(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBox__SWIG_3(arg1 string, arg2 *int, arg3 _swig_fnptr, arg4 uintptr, arg5 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_ListBox__SWIG_3(*(*C.swig_type_323)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_type_324(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBox(a0 string, a1 *int, a2 interface{}, a3 interface{}, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ListBox__SWIG_1(a0, a1, a2.(*string), a3.(int))
	}
	if argc == 1 {
		if _, ok := a2.(*string); !ok {
			goto check_2
		}
		if _, ok := a3.(int); !ok {
			goto check_2
		}
		return ListBox__SWIG_0(a0, a1, a2.(*string), a3.(int), a[0].(int))
	}
check_2:
	if argc == 1 {
		return ListBox__SWIG_3(a0, a1, a2.(_swig_fnptr), a3.(uintptr), a[0].(int))
	}
	if argc == 2 {
		return ListBox__SWIG_2(a0, a1, a2.(_swig_fnptr), a3.(uintptr), a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func ListBoxHeader__SWIG_0(arg1 string, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_ListBoxHeader__SWIG_0(*(*C.swig_type_325)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBoxHeader__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ListBoxHeader__SWIG_1(*(*C.swig_type_326)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBoxHeader__SWIG_2(arg1 string, arg2 int, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ListBoxHeader__SWIG_2(*(*C.swig_type_327)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBoxHeader__SWIG_3(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ListBoxHeader__SWIG_3(*(*C.swig_type_328)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func ListBoxHeader(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return ListBoxHeader__SWIG_1(a0)
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrVec2); !ok {
			goto check_2
		}
		return ListBoxHeader__SWIG_0(a0, a[0].(Vec2))
	}
check_2:
	if argc == 1 {
		return ListBoxHeader__SWIG_3(a0, a[0].(int))
	}
	if argc == 2 {
		return ListBoxHeader__SWIG_2(a0, a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func ListBoxFooter() {
	C._wrap_ListBoxFooter()
}

func PlotLines__SWIG_0(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32, arg7 float32, arg8 Vec2, arg9 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8.Swigcptr()
	_swig_i_8 := arg9
	C._wrap_PlotLines__SWIG_0(*(*C.swig_type_329)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_330)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5), C.float(_swig_i_6), C.uintptr_t(_swig_i_7), C.swig_intgo(_swig_i_8))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotLines__SWIG_1(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32, arg7 float32, arg8 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8.Swigcptr()
	C._wrap_PlotLines__SWIG_1(*(*C.swig_type_331)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_332)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5), C.float(_swig_i_6), C.uintptr_t(_swig_i_7))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotLines__SWIG_2(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32, arg7 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_PlotLines__SWIG_2(*(*C.swig_type_333)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_334)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5), C.float(_swig_i_6))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotLines__SWIG_3(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_PlotLines__SWIG_3(*(*C.swig_type_335)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_336)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotLines__SWIG_4(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_PlotLines__SWIG_4(*(*C.swig_type_337)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_338)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotLines__SWIG_5(arg1 string, arg2 *float32, arg3 int, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PlotLines__SWIG_5(*(*C.swig_type_339)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotLines__SWIG_6(arg1 string, arg2 *float32, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_PlotLines__SWIG_6(*(*C.swig_type_340)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotLines__SWIG_7(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string, arg7 float32, arg8 float32, arg9 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9.Swigcptr()
	C._wrap_PlotLines__SWIG_7(*(*C.swig_type_341)(unsafe.Pointer(&_swig_i_0)), C.swig_type_342(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_343)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6), C.float(_swig_i_7), C.uintptr_t(_swig_i_8))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotLines__SWIG_8(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string, arg7 float32, arg8 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	C._wrap_PlotLines__SWIG_8(*(*C.swig_type_344)(unsafe.Pointer(&_swig_i_0)), C.swig_type_345(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_346)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6), C.float(_swig_i_7))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotLines__SWIG_9(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string, arg7 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_PlotLines__SWIG_9(*(*C.swig_type_347)(unsafe.Pointer(&_swig_i_0)), C.swig_type_348(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_349)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotLines__SWIG_10(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_PlotLines__SWIG_10(*(*C.swig_type_350)(unsafe.Pointer(&_swig_i_0)), C.swig_type_351(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_352)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotLines__SWIG_11(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_PlotLines__SWIG_11(*(*C.swig_type_353)(unsafe.Pointer(&_swig_i_0)), C.swig_type_354(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotLines__SWIG_12(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PlotLines__SWIG_12(*(*C.swig_type_355)(unsafe.Pointer(&_swig_i_0)), C.swig_type_356(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotLines(a0 string, a1 interface{}, a2 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		PlotLines__SWIG_6(a0, a1.(*float32), a2.(int))
		return
	}
	if argc == 1 {
		if _, ok := a1.(*float32); !ok {
			goto check_2
		}
		if _, ok := a2.(int); !ok {
			goto check_2
		}
		PlotLines__SWIG_5(a0, a1.(*float32), a2.(int), a[0].(int))
		return
	}
check_2:
	if argc == 1 {
		PlotLines__SWIG_12(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int))
		return
	}
	if argc == 2 {
		if _, ok := a1.(_swig_fnptr); !ok {
			goto check_4
		}
		if _, ok := a2.(uintptr); !ok {
			goto check_4
		}
		if _, ok := a[1].(int); !ok {
			goto check_4
		}
		PlotLines__SWIG_11(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int))
		return
	}
check_4:
	if argc == 2 {
		PlotLines__SWIG_4(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string))
		return
	}
	if argc == 3 {
		if _, ok := a1.(*float32); !ok {
			goto check_6
		}
		if _, ok := a2.(int); !ok {
			goto check_6
		}
		if _, ok := a[1].(string); !ok {
			goto check_6
		}
		if _, ok := a[2].(float32); !ok {
			goto check_6
		}
		PlotLines__SWIG_3(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32))
		return
	}
check_6:
	if argc == 3 {
		PlotLines__SWIG_10(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string))
		return
	}
	if argc == 4 {
		if _, ok := a1.(_swig_fnptr); !ok {
			goto check_8
		}
		if _, ok := a2.(uintptr); !ok {
			goto check_8
		}
		if _, ok := a[1].(int); !ok {
			goto check_8
		}
		if _, ok := a[2].(string); !ok {
			goto check_8
		}
		PlotLines__SWIG_9(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string), a[3].(float32))
		return
	}
check_8:
	if argc == 4 {
		PlotLines__SWIG_2(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32), a[3].(float32))
		return
	}
	if argc == 5 {
		if _, ok := a1.(*float32); !ok {
			goto check_10
		}
		if _, ok := a2.(int); !ok {
			goto check_10
		}
		if _, ok := a[1].(string); !ok {
			goto check_10
		}
		if _, ok := a[2].(float32); !ok {
			goto check_10
		}
		if _, ok := a[4].(SwigcptrVec2); !ok {
			goto check_10
		}
		PlotLines__SWIG_1(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32), a[3].(float32), a[4].(Vec2))
		return
	}
check_10:
	if argc == 5 {
		PlotLines__SWIG_8(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string), a[3].(float32), a[4].(float32))
		return
	}
	if argc == 6 {
		if _, ok := a1.(_swig_fnptr); !ok {
			goto check_12
		}
		if _, ok := a2.(uintptr); !ok {
			goto check_12
		}
		if _, ok := a[1].(int); !ok {
			goto check_12
		}
		if _, ok := a[2].(string); !ok {
			goto check_12
		}
		if _, ok := a[4].(float32); !ok {
			goto check_12
		}
		if _, ok := a[5].(SwigcptrVec2); !ok {
			goto check_12
		}
		PlotLines__SWIG_7(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string), a[3].(float32), a[4].(float32), a[5].(Vec2))
		return
	}
check_12:
	if argc == 6 {
		PlotLines__SWIG_0(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32), a[3].(float32), a[4].(Vec2), a[5].(int))
		return
	}
	panic("No match for overloaded function call")
}

func PlotHistogram__SWIG_0(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32, arg7 float32, arg8 Vec2, arg9 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8.Swigcptr()
	_swig_i_8 := arg9
	C._wrap_PlotHistogram__SWIG_0(*(*C.swig_type_357)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_358)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5), C.float(_swig_i_6), C.uintptr_t(_swig_i_7), C.swig_intgo(_swig_i_8))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotHistogram__SWIG_1(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32, arg7 float32, arg8 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8.Swigcptr()
	C._wrap_PlotHistogram__SWIG_1(*(*C.swig_type_359)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_360)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5), C.float(_swig_i_6), C.uintptr_t(_swig_i_7))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotHistogram__SWIG_2(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32, arg7 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_PlotHistogram__SWIG_2(*(*C.swig_type_361)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_362)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5), C.float(_swig_i_6))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotHistogram__SWIG_3(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string, arg6 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_PlotHistogram__SWIG_3(*(*C.swig_type_363)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_364)(unsafe.Pointer(&_swig_i_4)), C.float(_swig_i_5))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotHistogram__SWIG_4(arg1 string, arg2 *float32, arg3 int, arg4 int, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_PlotHistogram__SWIG_4(*(*C.swig_type_365)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_366)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func PlotHistogram__SWIG_5(arg1 string, arg2 *float32, arg3 int, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PlotHistogram__SWIG_5(*(*C.swig_type_367)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotHistogram__SWIG_6(arg1 string, arg2 *float32, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_PlotHistogram__SWIG_6(*(*C.swig_type_368)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotHistogram__SWIG_7(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string, arg7 float32, arg8 float32, arg9 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9.Swigcptr()
	C._wrap_PlotHistogram__SWIG_7(*(*C.swig_type_369)(unsafe.Pointer(&_swig_i_0)), C.swig_type_370(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_371)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6), C.float(_swig_i_7), C.uintptr_t(_swig_i_8))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotHistogram__SWIG_8(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string, arg7 float32, arg8 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	C._wrap_PlotHistogram__SWIG_8(*(*C.swig_type_372)(unsafe.Pointer(&_swig_i_0)), C.swig_type_373(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_374)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6), C.float(_swig_i_7))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotHistogram__SWIG_9(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string, arg7 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_PlotHistogram__SWIG_9(*(*C.swig_type_375)(unsafe.Pointer(&_swig_i_0)), C.swig_type_376(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_377)(unsafe.Pointer(&_swig_i_5)), C.float(_swig_i_6))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotHistogram__SWIG_10(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_PlotHistogram__SWIG_10(*(*C.swig_type_378)(unsafe.Pointer(&_swig_i_0)), C.swig_type_379(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_380)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func PlotHistogram__SWIG_11(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_PlotHistogram__SWIG_11(*(*C.swig_type_381)(unsafe.Pointer(&_swig_i_0)), C.swig_type_382(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotHistogram__SWIG_12(arg1 string, arg2 _swig_fnptr, arg3 uintptr, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_PlotHistogram__SWIG_12(*(*C.swig_type_383)(unsafe.Pointer(&_swig_i_0)), C.swig_type_384(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func PlotHistogram(a0 string, a1 interface{}, a2 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		PlotHistogram__SWIG_6(a0, a1.(*float32), a2.(int))
		return
	}
	if argc == 1 {
		if _, ok := a1.(*float32); !ok {
			goto check_2
		}
		if _, ok := a2.(int); !ok {
			goto check_2
		}
		PlotHistogram__SWIG_5(a0, a1.(*float32), a2.(int), a[0].(int))
		return
	}
check_2:
	if argc == 1 {
		PlotHistogram__SWIG_12(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int))
		return
	}
	if argc == 2 {
		if _, ok := a1.(_swig_fnptr); !ok {
			goto check_4
		}
		if _, ok := a2.(uintptr); !ok {
			goto check_4
		}
		if _, ok := a[1].(int); !ok {
			goto check_4
		}
		PlotHistogram__SWIG_11(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int))
		return
	}
check_4:
	if argc == 2 {
		PlotHistogram__SWIG_4(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string))
		return
	}
	if argc == 3 {
		if _, ok := a1.(*float32); !ok {
			goto check_6
		}
		if _, ok := a2.(int); !ok {
			goto check_6
		}
		if _, ok := a[1].(string); !ok {
			goto check_6
		}
		if _, ok := a[2].(float32); !ok {
			goto check_6
		}
		PlotHistogram__SWIG_3(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32))
		return
	}
check_6:
	if argc == 3 {
		PlotHistogram__SWIG_10(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string))
		return
	}
	if argc == 4 {
		if _, ok := a1.(_swig_fnptr); !ok {
			goto check_8
		}
		if _, ok := a2.(uintptr); !ok {
			goto check_8
		}
		if _, ok := a[1].(int); !ok {
			goto check_8
		}
		if _, ok := a[2].(string); !ok {
			goto check_8
		}
		PlotHistogram__SWIG_9(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string), a[3].(float32))
		return
	}
check_8:
	if argc == 4 {
		PlotHistogram__SWIG_2(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32), a[3].(float32))
		return
	}
	if argc == 5 {
		if _, ok := a1.(*float32); !ok {
			goto check_10
		}
		if _, ok := a2.(int); !ok {
			goto check_10
		}
		if _, ok := a[1].(string); !ok {
			goto check_10
		}
		if _, ok := a[2].(float32); !ok {
			goto check_10
		}
		if _, ok := a[4].(SwigcptrVec2); !ok {
			goto check_10
		}
		PlotHistogram__SWIG_1(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32), a[3].(float32), a[4].(Vec2))
		return
	}
check_10:
	if argc == 5 {
		PlotHistogram__SWIG_8(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string), a[3].(float32), a[4].(float32))
		return
	}
	if argc == 6 {
		if _, ok := a1.(_swig_fnptr); !ok {
			goto check_12
		}
		if _, ok := a2.(uintptr); !ok {
			goto check_12
		}
		if _, ok := a[1].(int); !ok {
			goto check_12
		}
		if _, ok := a[2].(string); !ok {
			goto check_12
		}
		if _, ok := a[4].(float32); !ok {
			goto check_12
		}
		if _, ok := a[5].(SwigcptrVec2); !ok {
			goto check_12
		}
		PlotHistogram__SWIG_7(a0, a1.(_swig_fnptr), a2.(uintptr), a[0].(int), a[1].(int), a[2].(string), a[3].(float32), a[4].(float32), a[5].(Vec2))
		return
	}
check_12:
	if argc == 6 {
		PlotHistogram__SWIG_0(a0, a1.(*float32), a2.(int), a[0].(int), a[1].(string), a[2].(float32), a[3].(float32), a[4].(Vec2), a[5].(int))
		return
	}
	panic("No match for overloaded function call")
}

func Value__SWIG_0(arg1 string, arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Value__SWIG_0(*(*C.swig_type_385)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func Value__SWIG_1(arg1 string, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Value__SWIG_1(*(*C.swig_type_386)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func ValueUnsigned(arg1 string, arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ValueUnsigned(*(*C.swig_type_387)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func Value__SWIG_2(arg1 string, arg2 float32, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Value__SWIG_2(*(*C.swig_type_388)(unsafe.Pointer(&_swig_i_0)), C.float(_swig_i_1), *(*C.swig_type_389)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func Value__SWIG_3(arg1 string, arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Value__SWIG_3(*(*C.swig_type_390)(unsafe.Pointer(&_swig_i_0)), C.float(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func Value(a0 string, a1 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		if _, ok := a1.(bool); !ok {
			goto check_1
		}
		Value__SWIG_0(a0, a1.(bool))
		return
	}
check_1:
	if argc == 0 {
		if _, ok := a1.(int); !ok {
			goto check_2
		}
		Value__SWIG_1(a0, a1.(int))
		return
	}
check_2:
	if argc == 0 {
		Value__SWIG_3(a0, a1.(float32))
		return
	}
	if argc == 1 {
		Value__SWIG_2(a0, a1.(float32), a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func BeginMainMenuBar() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BeginMainMenuBar())
	return swig_r
}

func EndMainMenuBar() {
	C._wrap_EndMainMenuBar()
}

func BeginMenuBar() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BeginMenuBar())
	return swig_r
}

func EndMenuBar() {
	C._wrap_EndMenuBar()
}

func BeginMenu__SWIG_0(arg1 string, arg2 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BeginMenu__SWIG_0(*(*C.swig_type_391)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginMenu__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginMenu__SWIG_1(*(*C.swig_type_392)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginMenu(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginMenu__SWIG_1(a0)
	}
	if argc == 1 {
		return BeginMenu__SWIG_0(a0, a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func EndMenu() {
	C._wrap_EndMenu()
}

func MenuItem__SWIG_0(arg1 string, arg2 string, arg3 bool, arg4 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_MenuItem__SWIG_0(*(*C.swig_type_393)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_394)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2), C._Bool(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func MenuItem__SWIG_1(arg1 string, arg2 string, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_MenuItem__SWIG_1(*(*C.swig_type_395)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_396)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func MenuItem__SWIG_2(arg1 string, arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_MenuItem__SWIG_2(*(*C.swig_type_397)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_398)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func MenuItem__SWIG_3(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MenuItem__SWIG_3(*(*C.swig_type_399)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func MenuItem__SWIG_4(arg1 string, arg2 string, arg3 *bool, arg4 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_MenuItem__SWIG_4(*(*C.swig_type_400)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_401)(unsafe.Pointer(&_swig_i_1)), C.swig_voidp(_swig_i_2), C._Bool(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func MenuItem__SWIG_5(arg1 string, arg2 string, arg3 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_MenuItem__SWIG_5(*(*C.swig_type_402)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_403)(unsafe.Pointer(&_swig_i_1)), C.swig_voidp(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func MenuItem(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return MenuItem__SWIG_3(a0)
	}
	if argc == 1 {
		return MenuItem__SWIG_2(a0, a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[1].(*bool); !ok {
			goto check_3
		}
		return MenuItem__SWIG_5(a0, a[0].(string), a[1].(*bool))
	}
check_3:
	if argc == 2 {
		return MenuItem__SWIG_1(a0, a[0].(string), a[1].(bool))
	}
	if argc == 3 {
		if _, ok := a[1].(*bool); !ok {
			goto check_5
		}
		return MenuItem__SWIG_4(a0, a[0].(string), a[1].(*bool), a[2].(bool))
	}
check_5:
	if argc == 3 {
		return MenuItem__SWIG_0(a0, a[0].(string), a[1].(bool), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func BeginTooltip() {
	C._wrap_BeginTooltip()
}

func EndTooltip() {
	C._wrap_EndTooltip()
}

func SetTooltip(arg1 string, args ...interface{}) {

	_swig_i_0 := fmtString(arg1, args...)
	C._wrap_SetTooltip(C.swig_voidp(_swig_i_0))
}

func OpenPopup(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_OpenPopup(*(*C.swig_type_404)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func BeginPopup__SWIG_0(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BeginPopup__SWIG_0(*(*C.swig_type_405)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopup__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginPopup__SWIG_1(*(*C.swig_type_406)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopup(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginPopup__SWIG_1(a0)
	}
	if argc == 1 {
		return BeginPopup__SWIG_0(a0, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func BeginPopupContextItem__SWIG_0(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BeginPopupContextItem__SWIG_0(*(*C.swig_type_407)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupContextItem__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginPopupContextItem__SWIG_1(*(*C.swig_type_408)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupContextItem__SWIG_2() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BeginPopupContextItem__SWIG_2())
	return swig_r
}

func BeginPopupContextItem(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginPopupContextItem__SWIG_2()
	}
	if argc == 1 {
		return BeginPopupContextItem__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return BeginPopupContextItem__SWIG_0(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func BeginPopupContextWindow__SWIG_0(arg1 string, arg2 int, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_BeginPopupContextWindow__SWIG_0(*(*C.swig_type_409)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupContextWindow__SWIG_1(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BeginPopupContextWindow__SWIG_1(*(*C.swig_type_410)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupContextWindow__SWIG_2(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginPopupContextWindow__SWIG_2(*(*C.swig_type_411)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupContextWindow__SWIG_3() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BeginPopupContextWindow__SWIG_3())
	return swig_r
}

func BeginPopupContextWindow(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginPopupContextWindow__SWIG_3()
	}
	if argc == 1 {
		return BeginPopupContextWindow__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return BeginPopupContextWindow__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return BeginPopupContextWindow__SWIG_0(a[0].(string), a[1].(int), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func BeginPopupContextVoid__SWIG_0(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BeginPopupContextVoid__SWIG_0(*(*C.swig_type_412)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupContextVoid__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginPopupContextVoid__SWIG_1(*(*C.swig_type_413)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupContextVoid__SWIG_2() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BeginPopupContextVoid__SWIG_2())
	return swig_r
}

func BeginPopupContextVoid(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginPopupContextVoid__SWIG_2()
	}
	if argc == 1 {
		return BeginPopupContextVoid__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return BeginPopupContextVoid__SWIG_0(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func BeginPopupModal__SWIG_0(arg1 string, arg2 *bool, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_BeginPopupModal__SWIG_0(*(*C.swig_type_414)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupModal__SWIG_1(arg1 string, arg2 *bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BeginPopupModal__SWIG_1(*(*C.swig_type_415)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupModal__SWIG_2(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginPopupModal__SWIG_2(*(*C.swig_type_416)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BeginPopupModal(a0 string, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginPopupModal__SWIG_2(a0)
	}
	if argc == 1 {
		return BeginPopupModal__SWIG_1(a0, a[0].(*bool))
	}
	if argc == 2 {
		return BeginPopupModal__SWIG_0(a0, a[0].(*bool), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func EndPopup() {
	C._wrap_EndPopup()
}

func OpenPopupOnItemClick__SWIG_0(arg1 string, arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_OpenPopupOnItemClick__SWIG_0(*(*C.swig_type_417)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func OpenPopupOnItemClick__SWIG_1(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_OpenPopupOnItemClick__SWIG_1(*(*C.swig_type_418)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func OpenPopupOnItemClick__SWIG_2() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_OpenPopupOnItemClick__SWIG_2())
	return swig_r
}

func OpenPopupOnItemClick(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return OpenPopupOnItemClick__SWIG_2()
	}
	if argc == 1 {
		return OpenPopupOnItemClick__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return OpenPopupOnItemClick__SWIG_0(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func IsPopupOpen(arg1 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsPopupOpen(*(*C.swig_type_419)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func CloseCurrentPopup() {
	C._wrap_CloseCurrentPopup()
}

func Columns__SWIG_0(arg1 int, arg2 string, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Columns__SWIG_0(C.swig_intgo(_swig_i_0), *(*C.swig_type_420)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func Columns__SWIG_1(arg1 int, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Columns__SWIG_1(C.swig_intgo(_swig_i_0), *(*C.swig_type_421)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func Columns__SWIG_2(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_Columns__SWIG_2(C.swig_intgo(_swig_i_0))
}

func Columns__SWIG_3() {
	C._wrap_Columns__SWIG_3()
}

func Columns(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		Columns__SWIG_3()
		return
	}
	if argc == 1 {
		Columns__SWIG_2(a[0].(int))
		return
	}
	if argc == 2 {
		Columns__SWIG_1(a[0].(int), a[1].(string))
		return
	}
	if argc == 3 {
		Columns__SWIG_0(a[0].(int), a[1].(string), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func NextColumn() {
	C._wrap_NextColumn()
}

func GetColumnIndex() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetColumnIndex())
	return swig_r
}

func GetColumnWidth__SWIG_0(arg1 int) (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_GetColumnWidth__SWIG_0(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func GetColumnWidth__SWIG_1() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetColumnWidth__SWIG_1())
	return swig_r
}

func GetColumnWidth(a ...interface{}) float32 {
	argc := len(a)
	if argc == 0 {
		return GetColumnWidth__SWIG_1()
	}
	if argc == 1 {
		return GetColumnWidth__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func SetColumnWidth(arg1 int, arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetColumnWidth(C.swig_intgo(_swig_i_0), C.float(_swig_i_1))
}

func GetColumnOffset__SWIG_0(arg1 int) (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_GetColumnOffset__SWIG_0(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func GetColumnOffset__SWIG_1() (_swig_ret float32) {
	var swig_r float32
	swig_r = (float32)(C._wrap_GetColumnOffset__SWIG_1())
	return swig_r
}

func GetColumnOffset(a ...interface{}) float32 {
	argc := len(a)
	if argc == 0 {
		return GetColumnOffset__SWIG_1()
	}
	if argc == 1 {
		return GetColumnOffset__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func SetColumnOffset(arg1 int, arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetColumnOffset(C.swig_intgo(_swig_i_0), C.float(_swig_i_1))
}

func GetColumnsCount() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetColumnsCount())
	return swig_r
}

func LogToTTY__SWIG_0(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_LogToTTY__SWIG_0(C.swig_intgo(_swig_i_0))
}

func LogToTTY__SWIG_1() {
	C._wrap_LogToTTY__SWIG_1()
}

func LogToTTY(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		LogToTTY__SWIG_1()
		return
	}
	if argc == 1 {
		LogToTTY__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func LogToFile__SWIG_0(arg1 int, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LogToFile__SWIG_0(C.swig_intgo(_swig_i_0), *(*C.swig_type_422)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func LogToFile__SWIG_1(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_LogToFile__SWIG_1(C.swig_intgo(_swig_i_0))
}

func LogToFile__SWIG_2() {
	C._wrap_LogToFile__SWIG_2()
}

func LogToFile(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		LogToFile__SWIG_2()
		return
	}
	if argc == 1 {
		LogToFile__SWIG_1(a[0].(int))
		return
	}
	if argc == 2 {
		LogToFile__SWIG_0(a[0].(int), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func LogToClipboard__SWIG_0(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_LogToClipboard__SWIG_0(C.swig_intgo(_swig_i_0))
}

func LogToClipboard__SWIG_1() {
	C._wrap_LogToClipboard__SWIG_1()
}

func LogToClipboard(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		LogToClipboard__SWIG_1()
		return
	}
	if argc == 1 {
		LogToClipboard__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func LogFinish() {
	C._wrap_LogFinish()
}

func LogButtons() {
	C._wrap_LogButtons()
}

func LogText(arg1 string, args ...interface{}) {

	_swig_i_0 := fmtString(arg1, args...)
	C._wrap_LogText(C.swig_voidp(_swig_i_0))
}

func BeginDragDropSource__SWIG_0(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BeginDragDropSource__SWIG_0(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func BeginDragDropSource__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BeginDragDropSource__SWIG_1())
	return swig_r
}

func BeginDragDropSource(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginDragDropSource__SWIG_1()
	}
	if argc == 1 {
		return BeginDragDropSource__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func SetDragDropPayload__SWIG_0(arg1 string, arg2 uintptr, arg3 int64, arg4 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SetDragDropPayload__SWIG_0(*(*C.swig_type_423)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_type_424(_swig_i_2), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SetDragDropPayload__SWIG_1(arg1 string, arg2 uintptr, arg3 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_SetDragDropPayload__SWIG_1(*(*C.swig_type_425)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.swig_type_426(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SetDragDropPayload(a0 string, a1 uintptr, a2 int64, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return SetDragDropPayload__SWIG_1(a0, a1, a2)
	}
	if argc == 1 {
		return SetDragDropPayload__SWIG_0(a0, a1, a2, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func EndDragDropSource() {
	C._wrap_EndDragDropSource()
}

func BeginDragDropTarget() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_BeginDragDropTarget())
	return swig_r
}

func AcceptDragDropPayload__SWIG_0(arg1 string, arg2 int) (_swig_ret Payload) {
	var swig_r Payload
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Payload)(SwigcptrPayload(C._wrap_AcceptDragDropPayload__SWIG_0(*(*C.swig_type_427)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func AcceptDragDropPayload__SWIG_1(arg1 string) (_swig_ret Payload) {
	var swig_r Payload
	_swig_i_0 := arg1
	swig_r = (Payload)(SwigcptrPayload(C._wrap_AcceptDragDropPayload__SWIG_1(*(*C.swig_type_428)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func AcceptDragDropPayload(a0 string, a ...interface{}) Payload {
	argc := len(a)
	if argc == 0 {
		return AcceptDragDropPayload__SWIG_1(a0)
	}
	if argc == 1 {
		return AcceptDragDropPayload__SWIG_0(a0, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func EndDragDropTarget() {
	C._wrap_EndDragDropTarget()
}

func PushClipRect(arg1 Vec2, arg2 Vec2, arg3 bool) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_PushClipRect(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2))
}

func PopClipRect() {
	C._wrap_PopClipRect()
}

func SetItemDefaultFocus() {
	C._wrap_SetItemDefaultFocus()
}

func SetKeyboardFocusHere__SWIG_0(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetKeyboardFocusHere__SWIG_0(C.swig_intgo(_swig_i_0))
}

func SetKeyboardFocusHere__SWIG_1() {
	C._wrap_SetKeyboardFocusHere__SWIG_1()
}

func SetKeyboardFocusHere(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetKeyboardFocusHere__SWIG_1()
		return
	}
	if argc == 1 {
		SetKeyboardFocusHere__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func IsItemHovered__SWIG_0(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsItemHovered__SWIG_0(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsItemHovered__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemHovered__SWIG_1())
	return swig_r
}

func IsItemHovered(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsItemHovered__SWIG_1()
	}
	if argc == 1 {
		return IsItemHovered__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func IsItemActive() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemActive())
	return swig_r
}

func IsItemFocused() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemFocused())
	return swig_r
}

func IsItemClicked__SWIG_0(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsItemClicked__SWIG_0(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsItemClicked__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemClicked__SWIG_1())
	return swig_r
}

func IsItemClicked(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsItemClicked__SWIG_1()
	}
	if argc == 1 {
		return IsItemClicked__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func IsItemVisible() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemVisible())
	return swig_r
}

func IsItemEdited() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemEdited())
	return swig_r
}

func IsItemDeactivated() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemDeactivated())
	return swig_r
}

func IsItemDeactivatedAfterEdit() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsItemDeactivatedAfterEdit())
	return swig_r
}

func IsAnyItemHovered() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsAnyItemHovered())
	return swig_r
}

func IsAnyItemActive() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsAnyItemActive())
	return swig_r
}

func IsAnyItemFocused() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsAnyItemFocused())
	return swig_r
}

func GetItemRectMin() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetItemRectMin()))
	return swig_r
}

func GetItemRectMax() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetItemRectMax()))
	return swig_r
}

func GetItemRectSize() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetItemRectSize()))
	return swig_r
}

func SetItemAllowOverlap() {
	C._wrap_SetItemAllowOverlap()
}

func IsRectVisible__SWIG_0(arg1 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_IsRectVisible__SWIG_0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func IsRectVisible__SWIG_1(arg1 Vec2, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_IsRectVisible__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func IsRectVisible(a0 Vec2, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsRectVisible__SWIG_0(a0)
	}
	if argc == 1 {
		return IsRectVisible__SWIG_1(a0, a[0].(Vec2))
	}
	panic("No match for overloaded function call")
}

func GetTime() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_GetTime())
	return swig_r
}

func GetFrameCount() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetFrameCount())
	return swig_r
}

func GetOverlayDrawList() (_swig_ret DrawList) {
	var swig_r DrawList
	swig_r = (DrawList)(SwigcptrDrawList(C._wrap_GetOverlayDrawList()))
	return swig_r
}

func GetDrawListSharedData() (_swig_ret ImDrawListSharedData) {
	var swig_r ImDrawListSharedData
	swig_r = (ImDrawListSharedData)(SwigcptrImDrawListSharedData(C._wrap_GetDrawListSharedData()))
	return swig_r
}

func GetStyleColorName(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_GetStyleColorName(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SetStateStorage(arg1 ImGuiStorage) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_SetStateStorage(C.uintptr_t(_swig_i_0))
}

func GetStateStorage() (_swig_ret ImGuiStorage) {
	var swig_r ImGuiStorage
	swig_r = (ImGuiStorage)(SwigcptrImGuiStorage(C._wrap_GetStateStorage()))
	return swig_r
}

func CalcTextSize__SWIG_0(arg1 string, arg2 string, arg3 bool, arg4 float32) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_CalcTextSize__SWIG_0(*(*C.swig_type_430)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_431)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2), C.float(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func CalcTextSize__SWIG_1(arg1 string, arg2 string, arg3 bool) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_CalcTextSize__SWIG_1(*(*C.swig_type_432)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_433)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func CalcTextSize__SWIG_2(arg1 string, arg2 string) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_CalcTextSize__SWIG_2(*(*C.swig_type_434)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_435)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func CalcTextSize__SWIG_3(arg1 string) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_CalcTextSize__SWIG_3(*(*C.swig_type_436)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func CalcTextSize(a0 string, a ...interface{}) Vec2 {
	argc := len(a)
	if argc == 0 {
		return CalcTextSize__SWIG_3(a0)
	}
	if argc == 1 {
		return CalcTextSize__SWIG_2(a0, a[0].(string))
	}
	if argc == 2 {
		return CalcTextSize__SWIG_1(a0, a[0].(string), a[1].(bool))
	}
	if argc == 3 {
		return CalcTextSize__SWIG_0(a0, a[0].(string), a[1].(bool), a[2].(float32))
	}
	panic("No match for overloaded function call")
}

func CalcListClipping(arg1 int, arg2 float32, arg3 *int, arg4 *int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_CalcListClipping(C.swig_intgo(_swig_i_0), C.float(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3))
}

func BeginChildFrame__SWIG_0(arg1 uint, arg2 Vec2, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_BeginChildFrame__SWIG_0(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func BeginChildFrame__SWIG_1(arg1 uint, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_BeginChildFrame__SWIG_1(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func BeginChildFrame(a0 uint, a1 Vec2, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return BeginChildFrame__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return BeginChildFrame__SWIG_0(a0, a1, a[0].(int))
	}
	panic("No match for overloaded function call")
}

func EndChildFrame() {
	C._wrap_EndChildFrame()
}

func ColorConvertU32ToFloat4(arg1 uint) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_ColorConvertU32ToFloat4(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func ColorConvertFloat4ToU32(arg1 Vec4) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (uint)(C._wrap_ColorConvertFloat4ToU32(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func ColorConvertRGBtoHSV(arg1 float32, arg2 float32, arg3 float32, arg4 *float32, arg5 *float32, arg6 *float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_ColorConvertRGBtoHSV(C.float(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5))
}

func ColorConvertHSVtoRGB(arg1 float32, arg2 float32, arg3 float32, arg4 *float32, arg5 *float32, arg6 *float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_ColorConvertHSVtoRGB(C.float(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4), C.swig_voidp(_swig_i_5))
}

func GetKeyIndex(arg1 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_GetKeyIndex(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsKeyDown(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsKeyDown(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsKeyPressed__SWIG_0(arg1 int, arg2 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_IsKeyPressed__SWIG_0(C.swig_intgo(_swig_i_0), C._Bool(_swig_i_1)))
	return swig_r
}

func IsKeyPressed__SWIG_1(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsKeyPressed__SWIG_1(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsKeyPressed(a0 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsKeyPressed__SWIG_1(a0)
	}
	if argc == 1 {
		return IsKeyPressed__SWIG_0(a0, a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func IsKeyReleased(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsKeyReleased(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func GetKeyPressedAmount(arg1 int, arg2 float32, arg3 float32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_GetKeyPressedAmount(C.swig_intgo(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2)))
	return swig_r
}

func IsMouseDown(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsMouseDown(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsAnyMouseDown() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsAnyMouseDown())
	return swig_r
}

func IsMouseClicked__SWIG_0(arg1 int, arg2 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_IsMouseClicked__SWIG_0(C.swig_intgo(_swig_i_0), C._Bool(_swig_i_1)))
	return swig_r
}

func IsMouseClicked__SWIG_1(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsMouseClicked__SWIG_1(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsMouseClicked(a0 int, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsMouseClicked__SWIG_1(a0)
	}
	if argc == 1 {
		return IsMouseClicked__SWIG_0(a0, a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func IsMouseDoubleClicked(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsMouseDoubleClicked(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsMouseReleased(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsMouseReleased(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsMouseDragging__SWIG_0(arg1 int, arg2 float32) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_IsMouseDragging__SWIG_0(C.swig_intgo(_swig_i_0), C.float(_swig_i_1)))
	return swig_r
}

func IsMouseDragging__SWIG_1(arg1 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IsMouseDragging__SWIG_1(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func IsMouseDragging__SWIG_2() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsMouseDragging__SWIG_2())
	return swig_r
}

func IsMouseDragging(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsMouseDragging__SWIG_2()
	}
	if argc == 1 {
		return IsMouseDragging__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return IsMouseDragging__SWIG_0(a[0].(int), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func IsMouseHoveringRect__SWIG_0(arg1 Vec2, arg2 Vec2, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_IsMouseHoveringRect__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func IsMouseHoveringRect__SWIG_1(arg1 Vec2, arg2 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (bool)(C._wrap_IsMouseHoveringRect__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func IsMouseHoveringRect(a0 Vec2, a1 Vec2, a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsMouseHoveringRect__SWIG_1(a0, a1)
	}
	if argc == 1 {
		return IsMouseHoveringRect__SWIG_0(a0, a1, a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func IsMousePosValid__SWIG_0(arg1 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (bool)(C._wrap_IsMousePosValid__SWIG_0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func IsMousePosValid__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_IsMousePosValid__SWIG_1())
	return swig_r
}

func IsMousePosValid(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return IsMousePosValid__SWIG_1()
	}
	if argc == 1 {
		return IsMousePosValid__SWIG_0(a[0].(Vec2))
	}
	panic("No match for overloaded function call")
}

func GetMousePos() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetMousePos()))
	return swig_r
}

func GetMousePosOnOpeningCurrentPopup() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetMousePosOnOpeningCurrentPopup()))
	return swig_r
}

func GetMouseDragDelta__SWIG_0(arg1 int, arg2 float32) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetMouseDragDelta__SWIG_0(C.swig_intgo(_swig_i_0), C.float(_swig_i_1))))
	return swig_r
}

func GetMouseDragDelta__SWIG_1(arg1 int) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetMouseDragDelta__SWIG_1(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func GetMouseDragDelta__SWIG_2() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_GetMouseDragDelta__SWIG_2()))
	return swig_r
}

func GetMouseDragDelta(a ...interface{}) Vec2 {
	argc := len(a)
	if argc == 0 {
		return GetMouseDragDelta__SWIG_2()
	}
	if argc == 1 {
		return GetMouseDragDelta__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return GetMouseDragDelta__SWIG_0(a[0].(int), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func ResetMouseDragDelta__SWIG_0(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_ResetMouseDragDelta__SWIG_0(C.swig_intgo(_swig_i_0))
}

func ResetMouseDragDelta__SWIG_1() {
	C._wrap_ResetMouseDragDelta__SWIG_1()
}

func ResetMouseDragDelta(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		ResetMouseDragDelta__SWIG_1()
		return
	}
	if argc == 1 {
		ResetMouseDragDelta__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func GetMouseCursor() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetMouseCursor())
	return swig_r
}

func SetMouseCursor(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_SetMouseCursor(C.swig_intgo(_swig_i_0))
}

func CaptureKeyboardFromApp__SWIG_0(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_CaptureKeyboardFromApp__SWIG_0(C._Bool(_swig_i_0))
}

func CaptureKeyboardFromApp__SWIG_1() {
	C._wrap_CaptureKeyboardFromApp__SWIG_1()
}

func CaptureKeyboardFromApp(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		CaptureKeyboardFromApp__SWIG_1()
		return
	}
	if argc == 1 {
		CaptureKeyboardFromApp__SWIG_0(a[0].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func CaptureMouseFromApp__SWIG_0(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_CaptureMouseFromApp__SWIG_0(C._Bool(_swig_i_0))
}

func CaptureMouseFromApp__SWIG_1() {
	C._wrap_CaptureMouseFromApp__SWIG_1()
}

func CaptureMouseFromApp(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		CaptureMouseFromApp__SWIG_1()
		return
	}
	if argc == 1 {
		CaptureMouseFromApp__SWIG_0(a[0].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func GetClipboardText() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_GetClipboardText()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SetClipboardText(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SetClipboardText(*(*C.swig_type_438)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func LoadIniSettingsFromDisk(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_LoadIniSettingsFromDisk(*(*C.swig_type_439)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func LoadIniSettingsFromMemory__SWIG_0(arg1 string, arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_LoadIniSettingsFromMemory__SWIG_0(*(*C.swig_type_440)(unsafe.Pointer(&_swig_i_0)), C.swig_type_441(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func LoadIniSettingsFromMemory__SWIG_1(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_LoadIniSettingsFromMemory__SWIG_1(*(*C.swig_type_442)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func LoadIniSettingsFromMemory(a0 string, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		LoadIniSettingsFromMemory__SWIG_1(a0)
		return
	}
	if argc == 1 {
		LoadIniSettingsFromMemory__SWIG_0(a0, a[0].(int64))
		return
	}
	panic("No match for overloaded function call")
}

func SaveIniSettingsToDisk(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SaveIniSettingsToDisk(*(*C.swig_type_443)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SaveIniSettingsToMemory__SWIG_0(arg1 *int64) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SaveIniSettingsToMemory__SWIG_0(C.swig_voidp(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SaveIniSettingsToMemory__SWIG_1() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SaveIniSettingsToMemory__SWIG_1()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SaveIniSettingsToMemory(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return SaveIniSettingsToMemory__SWIG_1()
	}
	if argc == 1 {
		return SaveIniSettingsToMemory__SWIG_0(a[0].(*int64))
	}
	panic("No match for overloaded function call")
}

func SetAllocatorFunctions__SWIG_0(arg1 _swig_fnptr, arg2 _swig_fnptr, arg3 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_SetAllocatorFunctions__SWIG_0(C.swig_type_446(_swig_i_0), C.swig_type_447(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func SetAllocatorFunctions__SWIG_1(arg1 _swig_fnptr, arg2 _swig_fnptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SetAllocatorFunctions__SWIG_1(C.swig_type_448(_swig_i_0), C.swig_type_449(_swig_i_1))
}

func SetAllocatorFunctions(a0 _swig_fnptr, a1 _swig_fnptr, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SetAllocatorFunctions__SWIG_1(a0, a1)
		return
	}
	if argc == 1 {
		SetAllocatorFunctions__SWIG_0(a0, a1, a[0].(uintptr))
		return
	}
	panic("No match for overloaded function call")
}

func MemAlloc(arg1 int64) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_MemAlloc(C.swig_type_450(_swig_i_0)))
	return swig_r
}

func MemFree(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_MemFree(C.uintptr_t(_swig_i_0))
}

type ImGuiWindowFlags_ int

func _swig_getWindowFlags_None() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_None())
	return swig_r
}

var WindowFlags_None ImGuiWindowFlags_ = _swig_getWindowFlags_None()

func _swig_getWindowFlags_NoTitleBar() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoTitleBar())
	return swig_r
}

var WindowFlags_NoTitleBar ImGuiWindowFlags_ = _swig_getWindowFlags_NoTitleBar()

func _swig_getWindowFlags_NoResize() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoResize())
	return swig_r
}

var WindowFlags_NoResize ImGuiWindowFlags_ = _swig_getWindowFlags_NoResize()

func _swig_getWindowFlags_NoMove() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoMove())
	return swig_r
}

var WindowFlags_NoMove ImGuiWindowFlags_ = _swig_getWindowFlags_NoMove()

func _swig_getWindowFlags_NoScrollbar() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoScrollbar())
	return swig_r
}

var WindowFlags_NoScrollbar ImGuiWindowFlags_ = _swig_getWindowFlags_NoScrollbar()

func _swig_getWindowFlags_NoScrollWithMouse() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoScrollWithMouse())
	return swig_r
}

var WindowFlags_NoScrollWithMouse ImGuiWindowFlags_ = _swig_getWindowFlags_NoScrollWithMouse()

func _swig_getWindowFlags_NoCollapse() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoCollapse())
	return swig_r
}

var WindowFlags_NoCollapse ImGuiWindowFlags_ = _swig_getWindowFlags_NoCollapse()

func _swig_getWindowFlags_AlwaysAutoResize() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_AlwaysAutoResize())
	return swig_r
}

var WindowFlags_AlwaysAutoResize ImGuiWindowFlags_ = _swig_getWindowFlags_AlwaysAutoResize()

func _swig_getWindowFlags_NoSavedSettings() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoSavedSettings())
	return swig_r
}

var WindowFlags_NoSavedSettings ImGuiWindowFlags_ = _swig_getWindowFlags_NoSavedSettings()

func _swig_getWindowFlags_NoInputs() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoInputs())
	return swig_r
}

var WindowFlags_NoInputs ImGuiWindowFlags_ = _swig_getWindowFlags_NoInputs()

func _swig_getWindowFlags_MenuBar() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_MenuBar())
	return swig_r
}

var WindowFlags_MenuBar ImGuiWindowFlags_ = _swig_getWindowFlags_MenuBar()

func _swig_getWindowFlags_HorizontalScrollbar() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_HorizontalScrollbar())
	return swig_r
}

var WindowFlags_HorizontalScrollbar ImGuiWindowFlags_ = _swig_getWindowFlags_HorizontalScrollbar()

func _swig_getWindowFlags_NoFocusOnAppearing() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoFocusOnAppearing())
	return swig_r
}

var WindowFlags_NoFocusOnAppearing ImGuiWindowFlags_ = _swig_getWindowFlags_NoFocusOnAppearing()

func _swig_getWindowFlags_NoBringToFrontOnFocus() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoBringToFrontOnFocus())
	return swig_r
}

var WindowFlags_NoBringToFrontOnFocus ImGuiWindowFlags_ = _swig_getWindowFlags_NoBringToFrontOnFocus()

func _swig_getWindowFlags_AlwaysVerticalScrollbar() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_AlwaysVerticalScrollbar())
	return swig_r
}

var WindowFlags_AlwaysVerticalScrollbar ImGuiWindowFlags_ = _swig_getWindowFlags_AlwaysVerticalScrollbar()

func _swig_getWindowFlags_AlwaysHorizontalScrollbar() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_AlwaysHorizontalScrollbar())
	return swig_r
}

var WindowFlags_AlwaysHorizontalScrollbar ImGuiWindowFlags_ = _swig_getWindowFlags_AlwaysHorizontalScrollbar()

func _swig_getWindowFlags_AlwaysUseWindowPadding() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_AlwaysUseWindowPadding())
	return swig_r
}

var WindowFlags_AlwaysUseWindowPadding ImGuiWindowFlags_ = _swig_getWindowFlags_AlwaysUseWindowPadding()

func _swig_getWindowFlags_NoNavInputs() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoNavInputs())
	return swig_r
}

var WindowFlags_NoNavInputs ImGuiWindowFlags_ = _swig_getWindowFlags_NoNavInputs()

func _swig_getWindowFlags_NoNavFocus() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoNavFocus())
	return swig_r
}

var WindowFlags_NoNavFocus ImGuiWindowFlags_ = _swig_getWindowFlags_NoNavFocus()

func _swig_getWindowFlags_NoNav() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NoNav())
	return swig_r
}

var WindowFlags_NoNav ImGuiWindowFlags_ = _swig_getWindowFlags_NoNav()

func _swig_getWindowFlags_NavFlattened() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_NavFlattened())
	return swig_r
}

var WindowFlags_NavFlattened ImGuiWindowFlags_ = _swig_getWindowFlags_NavFlattened()

func _swig_getWindowFlags_ChildWindow() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_ChildWindow())
	return swig_r
}

var WindowFlags_ChildWindow ImGuiWindowFlags_ = _swig_getWindowFlags_ChildWindow()

func _swig_getWindowFlags_Tooltip() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_Tooltip())
	return swig_r
}

var WindowFlags_Tooltip ImGuiWindowFlags_ = _swig_getWindowFlags_Tooltip()

func _swig_getWindowFlags_Popup() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_Popup())
	return swig_r
}

var WindowFlags_Popup ImGuiWindowFlags_ = _swig_getWindowFlags_Popup()

func _swig_getWindowFlags_Modal() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_Modal())
	return swig_r
}

var WindowFlags_Modal ImGuiWindowFlags_ = _swig_getWindowFlags_Modal()

func _swig_getWindowFlags_ChildMenu() (_swig_ret ImGuiWindowFlags_) {
	var swig_r ImGuiWindowFlags_
	swig_r = (ImGuiWindowFlags_)(C._wrap_WindowFlags_ChildMenu())
	return swig_r
}

var WindowFlags_ChildMenu ImGuiWindowFlags_ = _swig_getWindowFlags_ChildMenu()

type ImGuiInputTextFlags_ int

func _swig_getInputTextFlags_None() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_None())
	return swig_r
}

var InputTextFlags_None ImGuiInputTextFlags_ = _swig_getInputTextFlags_None()

func _swig_getInputTextFlags_CharsDecimal() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CharsDecimal())
	return swig_r
}

var InputTextFlags_CharsDecimal ImGuiInputTextFlags_ = _swig_getInputTextFlags_CharsDecimal()

func _swig_getInputTextFlags_CharsHexadecimal() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CharsHexadecimal())
	return swig_r
}

var InputTextFlags_CharsHexadecimal ImGuiInputTextFlags_ = _swig_getInputTextFlags_CharsHexadecimal()

func _swig_getInputTextFlags_CharsUppercase() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CharsUppercase())
	return swig_r
}

var InputTextFlags_CharsUppercase ImGuiInputTextFlags_ = _swig_getInputTextFlags_CharsUppercase()

func _swig_getInputTextFlags_CharsNoBlank() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CharsNoBlank())
	return swig_r
}

var InputTextFlags_CharsNoBlank ImGuiInputTextFlags_ = _swig_getInputTextFlags_CharsNoBlank()

func _swig_getInputTextFlags_AutoSelectAll() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_AutoSelectAll())
	return swig_r
}

var InputTextFlags_AutoSelectAll ImGuiInputTextFlags_ = _swig_getInputTextFlags_AutoSelectAll()

func _swig_getInputTextFlags_EnterReturnsTrue() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_EnterReturnsTrue())
	return swig_r
}

var InputTextFlags_EnterReturnsTrue ImGuiInputTextFlags_ = _swig_getInputTextFlags_EnterReturnsTrue()

func _swig_getInputTextFlags_CallbackCompletion() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CallbackCompletion())
	return swig_r
}

var InputTextFlags_CallbackCompletion ImGuiInputTextFlags_ = _swig_getInputTextFlags_CallbackCompletion()

func _swig_getInputTextFlags_CallbackHistory() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CallbackHistory())
	return swig_r
}

var InputTextFlags_CallbackHistory ImGuiInputTextFlags_ = _swig_getInputTextFlags_CallbackHistory()

func _swig_getInputTextFlags_CallbackAlways() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CallbackAlways())
	return swig_r
}

var InputTextFlags_CallbackAlways ImGuiInputTextFlags_ = _swig_getInputTextFlags_CallbackAlways()

func _swig_getInputTextFlags_CallbackCharFilter() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CallbackCharFilter())
	return swig_r
}

var InputTextFlags_CallbackCharFilter ImGuiInputTextFlags_ = _swig_getInputTextFlags_CallbackCharFilter()

func _swig_getInputTextFlags_AllowTabInput() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_AllowTabInput())
	return swig_r
}

var InputTextFlags_AllowTabInput ImGuiInputTextFlags_ = _swig_getInputTextFlags_AllowTabInput()

func _swig_getInputTextFlags_CtrlEnterForNewLine() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CtrlEnterForNewLine())
	return swig_r
}

var InputTextFlags_CtrlEnterForNewLine ImGuiInputTextFlags_ = _swig_getInputTextFlags_CtrlEnterForNewLine()

func _swig_getInputTextFlags_NoHorizontalScroll() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_NoHorizontalScroll())
	return swig_r
}

var InputTextFlags_NoHorizontalScroll ImGuiInputTextFlags_ = _swig_getInputTextFlags_NoHorizontalScroll()

func _swig_getInputTextFlags_AlwaysInsertMode() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_AlwaysInsertMode())
	return swig_r
}

var InputTextFlags_AlwaysInsertMode ImGuiInputTextFlags_ = _swig_getInputTextFlags_AlwaysInsertMode()

func _swig_getInputTextFlags_ReadOnly() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_ReadOnly())
	return swig_r
}

var InputTextFlags_ReadOnly ImGuiInputTextFlags_ = _swig_getInputTextFlags_ReadOnly()

func _swig_getInputTextFlags_Password() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_Password())
	return swig_r
}

var InputTextFlags_Password ImGuiInputTextFlags_ = _swig_getInputTextFlags_Password()

func _swig_getInputTextFlags_NoUndoRedo() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_NoUndoRedo())
	return swig_r
}

var InputTextFlags_NoUndoRedo ImGuiInputTextFlags_ = _swig_getInputTextFlags_NoUndoRedo()

func _swig_getInputTextFlags_CharsScientific() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CharsScientific())
	return swig_r
}

var InputTextFlags_CharsScientific ImGuiInputTextFlags_ = _swig_getInputTextFlags_CharsScientific()

func _swig_getInputTextFlags_CallbackResize() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_CallbackResize())
	return swig_r
}

var InputTextFlags_CallbackResize ImGuiInputTextFlags_ = _swig_getInputTextFlags_CallbackResize()

func _swig_getInputTextFlags_Multiline() (_swig_ret ImGuiInputTextFlags_) {
	var swig_r ImGuiInputTextFlags_
	swig_r = (ImGuiInputTextFlags_)(C._wrap_InputTextFlags_Multiline())
	return swig_r
}

var InputTextFlags_Multiline ImGuiInputTextFlags_ = _swig_getInputTextFlags_Multiline()

type ImGuiTreeNodeFlags_ int

func _swig_getTreeNodeFlags_None() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_None())
	return swig_r
}

var TreeNodeFlags_None ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_None()

func _swig_getTreeNodeFlags_Selected() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_Selected())
	return swig_r
}

var TreeNodeFlags_Selected ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_Selected()

func _swig_getTreeNodeFlags_Framed() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_Framed())
	return swig_r
}

var TreeNodeFlags_Framed ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_Framed()

func _swig_getTreeNodeFlags_AllowItemOverlap() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_AllowItemOverlap())
	return swig_r
}

var TreeNodeFlags_AllowItemOverlap ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_AllowItemOverlap()

func _swig_getTreeNodeFlags_NoTreePushOnOpen() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_NoTreePushOnOpen())
	return swig_r
}

var TreeNodeFlags_NoTreePushOnOpen ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_NoTreePushOnOpen()

func _swig_getTreeNodeFlags_NoAutoOpenOnLog() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_NoAutoOpenOnLog())
	return swig_r
}

var TreeNodeFlags_NoAutoOpenOnLog ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_NoAutoOpenOnLog()

func _swig_getTreeNodeFlags_DefaultOpen() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_DefaultOpen())
	return swig_r
}

var TreeNodeFlags_DefaultOpen ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_DefaultOpen()

func _swig_getTreeNodeFlags_OpenOnDoubleClick() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_OpenOnDoubleClick())
	return swig_r
}

var TreeNodeFlags_OpenOnDoubleClick ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_OpenOnDoubleClick()

func _swig_getTreeNodeFlags_OpenOnArrow() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_OpenOnArrow())
	return swig_r
}

var TreeNodeFlags_OpenOnArrow ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_OpenOnArrow()

func _swig_getTreeNodeFlags_Leaf() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_Leaf())
	return swig_r
}

var TreeNodeFlags_Leaf ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_Leaf()

func _swig_getTreeNodeFlags_Bullet() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_Bullet())
	return swig_r
}

var TreeNodeFlags_Bullet ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_Bullet()

func _swig_getTreeNodeFlags_FramePadding() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_FramePadding())
	return swig_r
}

var TreeNodeFlags_FramePadding ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_FramePadding()

func _swig_getTreeNodeFlags_NavLeftJumpsBackHere() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_NavLeftJumpsBackHere())
	return swig_r
}

var TreeNodeFlags_NavLeftJumpsBackHere ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_NavLeftJumpsBackHere()

func _swig_getTreeNodeFlags_CollapsingHeader() (_swig_ret ImGuiTreeNodeFlags_) {
	var swig_r ImGuiTreeNodeFlags_
	swig_r = (ImGuiTreeNodeFlags_)(C._wrap_TreeNodeFlags_CollapsingHeader())
	return swig_r
}

var TreeNodeFlags_CollapsingHeader ImGuiTreeNodeFlags_ = _swig_getTreeNodeFlags_CollapsingHeader()

type ImGuiSelectableFlags_ int

func _swig_getSelectableFlags_None() (_swig_ret ImGuiSelectableFlags_) {
	var swig_r ImGuiSelectableFlags_
	swig_r = (ImGuiSelectableFlags_)(C._wrap_SelectableFlags_None())
	return swig_r
}

var SelectableFlags_None ImGuiSelectableFlags_ = _swig_getSelectableFlags_None()

func _swig_getSelectableFlags_DontClosePopups() (_swig_ret ImGuiSelectableFlags_) {
	var swig_r ImGuiSelectableFlags_
	swig_r = (ImGuiSelectableFlags_)(C._wrap_SelectableFlags_DontClosePopups())
	return swig_r
}

var SelectableFlags_DontClosePopups ImGuiSelectableFlags_ = _swig_getSelectableFlags_DontClosePopups()

func _swig_getSelectableFlags_SpanAllColumns() (_swig_ret ImGuiSelectableFlags_) {
	var swig_r ImGuiSelectableFlags_
	swig_r = (ImGuiSelectableFlags_)(C._wrap_SelectableFlags_SpanAllColumns())
	return swig_r
}

var SelectableFlags_SpanAllColumns ImGuiSelectableFlags_ = _swig_getSelectableFlags_SpanAllColumns()

func _swig_getSelectableFlags_AllowDoubleClick() (_swig_ret ImGuiSelectableFlags_) {
	var swig_r ImGuiSelectableFlags_
	swig_r = (ImGuiSelectableFlags_)(C._wrap_SelectableFlags_AllowDoubleClick())
	return swig_r
}

var SelectableFlags_AllowDoubleClick ImGuiSelectableFlags_ = _swig_getSelectableFlags_AllowDoubleClick()

func _swig_getSelectableFlags_Disabled() (_swig_ret ImGuiSelectableFlags_) {
	var swig_r ImGuiSelectableFlags_
	swig_r = (ImGuiSelectableFlags_)(C._wrap_SelectableFlags_Disabled())
	return swig_r
}

var SelectableFlags_Disabled ImGuiSelectableFlags_ = _swig_getSelectableFlags_Disabled()

type ImGuiComboFlags_ int

func _swig_getComboFlags_None() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_None())
	return swig_r
}

var ComboFlags_None ImGuiComboFlags_ = _swig_getComboFlags_None()

func _swig_getComboFlags_PopupAlignLeft() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_PopupAlignLeft())
	return swig_r
}

var ComboFlags_PopupAlignLeft ImGuiComboFlags_ = _swig_getComboFlags_PopupAlignLeft()

func _swig_getComboFlags_HeightSmall() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_HeightSmall())
	return swig_r
}

var ComboFlags_HeightSmall ImGuiComboFlags_ = _swig_getComboFlags_HeightSmall()

func _swig_getComboFlags_HeightRegular() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_HeightRegular())
	return swig_r
}

var ComboFlags_HeightRegular ImGuiComboFlags_ = _swig_getComboFlags_HeightRegular()

func _swig_getComboFlags_HeightLarge() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_HeightLarge())
	return swig_r
}

var ComboFlags_HeightLarge ImGuiComboFlags_ = _swig_getComboFlags_HeightLarge()

func _swig_getComboFlags_HeightLargest() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_HeightLargest())
	return swig_r
}

var ComboFlags_HeightLargest ImGuiComboFlags_ = _swig_getComboFlags_HeightLargest()

func _swig_getComboFlags_NoArrowButton() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_NoArrowButton())
	return swig_r
}

var ComboFlags_NoArrowButton ImGuiComboFlags_ = _swig_getComboFlags_NoArrowButton()

func _swig_getComboFlags_NoPreview() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_NoPreview())
	return swig_r
}

var ComboFlags_NoPreview ImGuiComboFlags_ = _swig_getComboFlags_NoPreview()

func _swig_getComboFlags_HeightMask_() (_swig_ret ImGuiComboFlags_) {
	var swig_r ImGuiComboFlags_
	swig_r = (ImGuiComboFlags_)(C._wrap_ComboFlags_HeightMask_())
	return swig_r
}

var ComboFlags_HeightMask_ ImGuiComboFlags_ = _swig_getComboFlags_HeightMask_()

type ImGuiFocusedFlags_ int

func _swig_getFocusedFlags_None() (_swig_ret ImGuiFocusedFlags_) {
	var swig_r ImGuiFocusedFlags_
	swig_r = (ImGuiFocusedFlags_)(C._wrap_FocusedFlags_None())
	return swig_r
}

var FocusedFlags_None ImGuiFocusedFlags_ = _swig_getFocusedFlags_None()

func _swig_getFocusedFlags_ChildWindows() (_swig_ret ImGuiFocusedFlags_) {
	var swig_r ImGuiFocusedFlags_
	swig_r = (ImGuiFocusedFlags_)(C._wrap_FocusedFlags_ChildWindows())
	return swig_r
}

var FocusedFlags_ChildWindows ImGuiFocusedFlags_ = _swig_getFocusedFlags_ChildWindows()

func _swig_getFocusedFlags_RootWindow() (_swig_ret ImGuiFocusedFlags_) {
	var swig_r ImGuiFocusedFlags_
	swig_r = (ImGuiFocusedFlags_)(C._wrap_FocusedFlags_RootWindow())
	return swig_r
}

var FocusedFlags_RootWindow ImGuiFocusedFlags_ = _swig_getFocusedFlags_RootWindow()

func _swig_getFocusedFlags_AnyWindow() (_swig_ret ImGuiFocusedFlags_) {
	var swig_r ImGuiFocusedFlags_
	swig_r = (ImGuiFocusedFlags_)(C._wrap_FocusedFlags_AnyWindow())
	return swig_r
}

var FocusedFlags_AnyWindow ImGuiFocusedFlags_ = _swig_getFocusedFlags_AnyWindow()

func _swig_getFocusedFlags_RootAndChildWindows() (_swig_ret ImGuiFocusedFlags_) {
	var swig_r ImGuiFocusedFlags_
	swig_r = (ImGuiFocusedFlags_)(C._wrap_FocusedFlags_RootAndChildWindows())
	return swig_r
}

var FocusedFlags_RootAndChildWindows ImGuiFocusedFlags_ = _swig_getFocusedFlags_RootAndChildWindows()

type ImGuiHoveredFlags_ int

func _swig_getHoveredFlags_None() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_None())
	return swig_r
}

var HoveredFlags_None ImGuiHoveredFlags_ = _swig_getHoveredFlags_None()

func _swig_getHoveredFlags_ChildWindows() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_ChildWindows())
	return swig_r
}

var HoveredFlags_ChildWindows ImGuiHoveredFlags_ = _swig_getHoveredFlags_ChildWindows()

func _swig_getHoveredFlags_RootWindow() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_RootWindow())
	return swig_r
}

var HoveredFlags_RootWindow ImGuiHoveredFlags_ = _swig_getHoveredFlags_RootWindow()

func _swig_getHoveredFlags_AnyWindow() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_AnyWindow())
	return swig_r
}

var HoveredFlags_AnyWindow ImGuiHoveredFlags_ = _swig_getHoveredFlags_AnyWindow()

func _swig_getHoveredFlags_AllowWhenBlockedByPopup() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_AllowWhenBlockedByPopup())
	return swig_r
}

var HoveredFlags_AllowWhenBlockedByPopup ImGuiHoveredFlags_ = _swig_getHoveredFlags_AllowWhenBlockedByPopup()

func _swig_getHoveredFlags_AllowWhenBlockedByActiveItem() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_AllowWhenBlockedByActiveItem())
	return swig_r
}

var HoveredFlags_AllowWhenBlockedByActiveItem ImGuiHoveredFlags_ = _swig_getHoveredFlags_AllowWhenBlockedByActiveItem()

func _swig_getHoveredFlags_AllowWhenOverlapped() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_AllowWhenOverlapped())
	return swig_r
}

var HoveredFlags_AllowWhenOverlapped ImGuiHoveredFlags_ = _swig_getHoveredFlags_AllowWhenOverlapped()

func _swig_getHoveredFlags_AllowWhenDisabled() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_AllowWhenDisabled())
	return swig_r
}

var HoveredFlags_AllowWhenDisabled ImGuiHoveredFlags_ = _swig_getHoveredFlags_AllowWhenDisabled()

func _swig_getHoveredFlags_RectOnly() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_RectOnly())
	return swig_r
}

var HoveredFlags_RectOnly ImGuiHoveredFlags_ = _swig_getHoveredFlags_RectOnly()

func _swig_getHoveredFlags_RootAndChildWindows() (_swig_ret ImGuiHoveredFlags_) {
	var swig_r ImGuiHoveredFlags_
	swig_r = (ImGuiHoveredFlags_)(C._wrap_HoveredFlags_RootAndChildWindows())
	return swig_r
}

var HoveredFlags_RootAndChildWindows ImGuiHoveredFlags_ = _swig_getHoveredFlags_RootAndChildWindows()

type ImGuiDragDropFlags_ int

func _swig_getDragDropFlags_None() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_None())
	return swig_r
}

var DragDropFlags_None ImGuiDragDropFlags_ = _swig_getDragDropFlags_None()

func _swig_getDragDropFlags_SourceNoPreviewTooltip() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_SourceNoPreviewTooltip())
	return swig_r
}

var DragDropFlags_SourceNoPreviewTooltip ImGuiDragDropFlags_ = _swig_getDragDropFlags_SourceNoPreviewTooltip()

func _swig_getDragDropFlags_SourceNoDisableHover() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_SourceNoDisableHover())
	return swig_r
}

var DragDropFlags_SourceNoDisableHover ImGuiDragDropFlags_ = _swig_getDragDropFlags_SourceNoDisableHover()

func _swig_getDragDropFlags_SourceNoHoldToOpenOthers() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_SourceNoHoldToOpenOthers())
	return swig_r
}

var DragDropFlags_SourceNoHoldToOpenOthers ImGuiDragDropFlags_ = _swig_getDragDropFlags_SourceNoHoldToOpenOthers()

func _swig_getDragDropFlags_SourceAllowNullID() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_SourceAllowNullID())
	return swig_r
}

var DragDropFlags_SourceAllowNullID ImGuiDragDropFlags_ = _swig_getDragDropFlags_SourceAllowNullID()

func _swig_getDragDropFlags_SourceExtern() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_SourceExtern())
	return swig_r
}

var DragDropFlags_SourceExtern ImGuiDragDropFlags_ = _swig_getDragDropFlags_SourceExtern()

func _swig_getDragDropFlags_SourceAutoExpirePayload() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_SourceAutoExpirePayload())
	return swig_r
}

var DragDropFlags_SourceAutoExpirePayload ImGuiDragDropFlags_ = _swig_getDragDropFlags_SourceAutoExpirePayload()

func _swig_getDragDropFlags_AcceptBeforeDelivery() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_AcceptBeforeDelivery())
	return swig_r
}

var DragDropFlags_AcceptBeforeDelivery ImGuiDragDropFlags_ = _swig_getDragDropFlags_AcceptBeforeDelivery()

func _swig_getDragDropFlags_AcceptNoDrawDefaultRect() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_AcceptNoDrawDefaultRect())
	return swig_r
}

var DragDropFlags_AcceptNoDrawDefaultRect ImGuiDragDropFlags_ = _swig_getDragDropFlags_AcceptNoDrawDefaultRect()

func _swig_getDragDropFlags_AcceptNoPreviewTooltip() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_AcceptNoPreviewTooltip())
	return swig_r
}

var DragDropFlags_AcceptNoPreviewTooltip ImGuiDragDropFlags_ = _swig_getDragDropFlags_AcceptNoPreviewTooltip()

func _swig_getDragDropFlags_AcceptPeekOnly() (_swig_ret ImGuiDragDropFlags_) {
	var swig_r ImGuiDragDropFlags_
	swig_r = (ImGuiDragDropFlags_)(C._wrap_DragDropFlags_AcceptPeekOnly())
	return swig_r
}

var DragDropFlags_AcceptPeekOnly ImGuiDragDropFlags_ = _swig_getDragDropFlags_AcceptPeekOnly()

const IMGUI_PAYLOAD_TYPE_COLOR_3F string = "_COL3F"
const IMGUI_PAYLOAD_TYPE_COLOR_4F string = "_COL4F"

type ImGuiDataType_ int

func _swig_getDataType_S32() (_swig_ret ImGuiDataType_) {
	var swig_r ImGuiDataType_
	swig_r = (ImGuiDataType_)(C._wrap_DataType_S32())
	return swig_r
}

var DataType_S32 ImGuiDataType_ = _swig_getDataType_S32()

func _swig_getDataType_U32() (_swig_ret ImGuiDataType_) {
	var swig_r ImGuiDataType_
	swig_r = (ImGuiDataType_)(C._wrap_DataType_U32())
	return swig_r
}

var DataType_U32 ImGuiDataType_ = _swig_getDataType_U32()

func _swig_getDataType_S64() (_swig_ret ImGuiDataType_) {
	var swig_r ImGuiDataType_
	swig_r = (ImGuiDataType_)(C._wrap_DataType_S64())
	return swig_r
}

var DataType_S64 ImGuiDataType_ = _swig_getDataType_S64()

func _swig_getDataType_U64() (_swig_ret ImGuiDataType_) {
	var swig_r ImGuiDataType_
	swig_r = (ImGuiDataType_)(C._wrap_DataType_U64())
	return swig_r
}

var DataType_U64 ImGuiDataType_ = _swig_getDataType_U64()

func _swig_getDataType_Float() (_swig_ret ImGuiDataType_) {
	var swig_r ImGuiDataType_
	swig_r = (ImGuiDataType_)(C._wrap_DataType_Float())
	return swig_r
}

var DataType_Float ImGuiDataType_ = _swig_getDataType_Float()

func _swig_getDataType_Double() (_swig_ret ImGuiDataType_) {
	var swig_r ImGuiDataType_
	swig_r = (ImGuiDataType_)(C._wrap_DataType_Double())
	return swig_r
}

var DataType_Double ImGuiDataType_ = _swig_getDataType_Double()

func _swig_getDataType_COUNT() (_swig_ret ImGuiDataType_) {
	var swig_r ImGuiDataType_
	swig_r = (ImGuiDataType_)(C._wrap_DataType_COUNT())
	return swig_r
}

var DataType_COUNT ImGuiDataType_ = _swig_getDataType_COUNT()

type ImGuiDir_ int

func _swig_getDir_None() (_swig_ret ImGuiDir_) {
	var swig_r ImGuiDir_
	swig_r = (ImGuiDir_)(C._wrap_Dir_None())
	return swig_r
}

var Dir_None ImGuiDir_ = _swig_getDir_None()

func _swig_getDir_Left() (_swig_ret ImGuiDir_) {
	var swig_r ImGuiDir_
	swig_r = (ImGuiDir_)(C._wrap_Dir_Left())
	return swig_r
}

var Dir_Left ImGuiDir_ = _swig_getDir_Left()

func _swig_getDir_Right() (_swig_ret ImGuiDir_) {
	var swig_r ImGuiDir_
	swig_r = (ImGuiDir_)(C._wrap_Dir_Right())
	return swig_r
}

var Dir_Right ImGuiDir_ = _swig_getDir_Right()

func _swig_getDir_Up() (_swig_ret ImGuiDir_) {
	var swig_r ImGuiDir_
	swig_r = (ImGuiDir_)(C._wrap_Dir_Up())
	return swig_r
}

var Dir_Up ImGuiDir_ = _swig_getDir_Up()

func _swig_getDir_Down() (_swig_ret ImGuiDir_) {
	var swig_r ImGuiDir_
	swig_r = (ImGuiDir_)(C._wrap_Dir_Down())
	return swig_r
}

var Dir_Down ImGuiDir_ = _swig_getDir_Down()

func _swig_getDir_COUNT() (_swig_ret ImGuiDir_) {
	var swig_r ImGuiDir_
	swig_r = (ImGuiDir_)(C._wrap_Dir_COUNT())
	return swig_r
}

var Dir_COUNT ImGuiDir_ = _swig_getDir_COUNT()

type ImGuiKey_ int

func _swig_getKey_Tab() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Tab())
	return swig_r
}

var Key_Tab ImGuiKey_ = _swig_getKey_Tab()

func _swig_getKey_LeftArrow() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_LeftArrow())
	return swig_r
}

var Key_LeftArrow ImGuiKey_ = _swig_getKey_LeftArrow()

func _swig_getKey_RightArrow() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_RightArrow())
	return swig_r
}

var Key_RightArrow ImGuiKey_ = _swig_getKey_RightArrow()

func _swig_getKey_UpArrow() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_UpArrow())
	return swig_r
}

var Key_UpArrow ImGuiKey_ = _swig_getKey_UpArrow()

func _swig_getKey_DownArrow() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_DownArrow())
	return swig_r
}

var Key_DownArrow ImGuiKey_ = _swig_getKey_DownArrow()

func _swig_getKey_PageUp() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_PageUp())
	return swig_r
}

var Key_PageUp ImGuiKey_ = _swig_getKey_PageUp()

func _swig_getKey_PageDown() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_PageDown())
	return swig_r
}

var Key_PageDown ImGuiKey_ = _swig_getKey_PageDown()

func _swig_getKey_Home() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Home())
	return swig_r
}

var Key_Home ImGuiKey_ = _swig_getKey_Home()

func _swig_getKey_End() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_End())
	return swig_r
}

var Key_End ImGuiKey_ = _swig_getKey_End()

func _swig_getKey_Insert() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Insert())
	return swig_r
}

var Key_Insert ImGuiKey_ = _swig_getKey_Insert()

func _swig_getKey_Delete() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Delete())
	return swig_r
}

var Key_Delete ImGuiKey_ = _swig_getKey_Delete()

func _swig_getKey_Backspace() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Backspace())
	return swig_r
}

var Key_Backspace ImGuiKey_ = _swig_getKey_Backspace()

func _swig_getKey_Space() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Space())
	return swig_r
}

var Key_Space ImGuiKey_ = _swig_getKey_Space()

func _swig_getKey_Enter() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Enter())
	return swig_r
}

var Key_Enter ImGuiKey_ = _swig_getKey_Enter()

func _swig_getKey_Escape() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Escape())
	return swig_r
}

var Key_Escape ImGuiKey_ = _swig_getKey_Escape()

func _swig_getKey_A() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_A())
	return swig_r
}

var Key_A ImGuiKey_ = _swig_getKey_A()

func _swig_getKey_C() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_C())
	return swig_r
}

var Key_C ImGuiKey_ = _swig_getKey_C()

func _swig_getKey_V() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_V())
	return swig_r
}

var Key_V ImGuiKey_ = _swig_getKey_V()

func _swig_getKey_X() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_X())
	return swig_r
}

var Key_X ImGuiKey_ = _swig_getKey_X()

func _swig_getKey_Y() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Y())
	return swig_r
}

var Key_Y ImGuiKey_ = _swig_getKey_Y()

func _swig_getKey_Z() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_Z())
	return swig_r
}

var Key_Z ImGuiKey_ = _swig_getKey_Z()

func _swig_getKey_COUNT() (_swig_ret ImGuiKey_) {
	var swig_r ImGuiKey_
	swig_r = (ImGuiKey_)(C._wrap_Key_COUNT())
	return swig_r
}

var Key_COUNT ImGuiKey_ = _swig_getKey_COUNT()

type ImGuiNavInput_ int

func _swig_getNavInput_Activate() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_Activate())
	return swig_r
}

var NavInput_Activate ImGuiNavInput_ = _swig_getNavInput_Activate()

func _swig_getNavInput_Cancel() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_Cancel())
	return swig_r
}

var NavInput_Cancel ImGuiNavInput_ = _swig_getNavInput_Cancel()

func _swig_getNavInput_Input() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_Input())
	return swig_r
}

var NavInput_Input ImGuiNavInput_ = _swig_getNavInput_Input()

func _swig_getNavInput_Menu() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_Menu())
	return swig_r
}

var NavInput_Menu ImGuiNavInput_ = _swig_getNavInput_Menu()

func _swig_getNavInput_DpadLeft() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_DpadLeft())
	return swig_r
}

var NavInput_DpadLeft ImGuiNavInput_ = _swig_getNavInput_DpadLeft()

func _swig_getNavInput_DpadRight() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_DpadRight())
	return swig_r
}

var NavInput_DpadRight ImGuiNavInput_ = _swig_getNavInput_DpadRight()

func _swig_getNavInput_DpadUp() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_DpadUp())
	return swig_r
}

var NavInput_DpadUp ImGuiNavInput_ = _swig_getNavInput_DpadUp()

func _swig_getNavInput_DpadDown() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_DpadDown())
	return swig_r
}

var NavInput_DpadDown ImGuiNavInput_ = _swig_getNavInput_DpadDown()

func _swig_getNavInput_LStickLeft() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_LStickLeft())
	return swig_r
}

var NavInput_LStickLeft ImGuiNavInput_ = _swig_getNavInput_LStickLeft()

func _swig_getNavInput_LStickRight() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_LStickRight())
	return swig_r
}

var NavInput_LStickRight ImGuiNavInput_ = _swig_getNavInput_LStickRight()

func _swig_getNavInput_LStickUp() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_LStickUp())
	return swig_r
}

var NavInput_LStickUp ImGuiNavInput_ = _swig_getNavInput_LStickUp()

func _swig_getNavInput_LStickDown() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_LStickDown())
	return swig_r
}

var NavInput_LStickDown ImGuiNavInput_ = _swig_getNavInput_LStickDown()

func _swig_getNavInput_FocusPrev() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_FocusPrev())
	return swig_r
}

var NavInput_FocusPrev ImGuiNavInput_ = _swig_getNavInput_FocusPrev()

func _swig_getNavInput_FocusNext() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_FocusNext())
	return swig_r
}

var NavInput_FocusNext ImGuiNavInput_ = _swig_getNavInput_FocusNext()

func _swig_getNavInput_TweakSlow() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_TweakSlow())
	return swig_r
}

var NavInput_TweakSlow ImGuiNavInput_ = _swig_getNavInput_TweakSlow()

func _swig_getNavInput_TweakFast() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_TweakFast())
	return swig_r
}

var NavInput_TweakFast ImGuiNavInput_ = _swig_getNavInput_TweakFast()

func _swig_getNavInput_KeyMenu_() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_KeyMenu_())
	return swig_r
}

var NavInput_KeyMenu_ ImGuiNavInput_ = _swig_getNavInput_KeyMenu_()

func _swig_getNavInput_KeyLeft_() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_KeyLeft_())
	return swig_r
}

var NavInput_KeyLeft_ ImGuiNavInput_ = _swig_getNavInput_KeyLeft_()

func _swig_getNavInput_KeyRight_() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_KeyRight_())
	return swig_r
}

var NavInput_KeyRight_ ImGuiNavInput_ = _swig_getNavInput_KeyRight_()

func _swig_getNavInput_KeyUp_() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_KeyUp_())
	return swig_r
}

var NavInput_KeyUp_ ImGuiNavInput_ = _swig_getNavInput_KeyUp_()

func _swig_getNavInput_KeyDown_() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_KeyDown_())
	return swig_r
}

var NavInput_KeyDown_ ImGuiNavInput_ = _swig_getNavInput_KeyDown_()

func _swig_getNavInput_COUNT() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_COUNT())
	return swig_r
}

var NavInput_COUNT ImGuiNavInput_ = _swig_getNavInput_COUNT()

func _swig_getNavInput_InternalStart_() (_swig_ret ImGuiNavInput_) {
	var swig_r ImGuiNavInput_
	swig_r = (ImGuiNavInput_)(C._wrap_NavInput_InternalStart_())
	return swig_r
}

var NavInput_InternalStart_ ImGuiNavInput_ = _swig_getNavInput_InternalStart_()

type ImGuiConfigFlags_ int

func _swig_getConfigFlags_NavEnableKeyboard() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_NavEnableKeyboard())
	return swig_r
}

var ConfigFlags_NavEnableKeyboard ImGuiConfigFlags_ = _swig_getConfigFlags_NavEnableKeyboard()

func _swig_getConfigFlags_NavEnableGamepad() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_NavEnableGamepad())
	return swig_r
}

var ConfigFlags_NavEnableGamepad ImGuiConfigFlags_ = _swig_getConfigFlags_NavEnableGamepad()

func _swig_getConfigFlags_NavEnableSetMousePos() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_NavEnableSetMousePos())
	return swig_r
}

var ConfigFlags_NavEnableSetMousePos ImGuiConfigFlags_ = _swig_getConfigFlags_NavEnableSetMousePos()

func _swig_getConfigFlags_NavNoCaptureKeyboard() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_NavNoCaptureKeyboard())
	return swig_r
}

var ConfigFlags_NavNoCaptureKeyboard ImGuiConfigFlags_ = _swig_getConfigFlags_NavNoCaptureKeyboard()

func _swig_getConfigFlags_NoMouse() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_NoMouse())
	return swig_r
}

var ConfigFlags_NoMouse ImGuiConfigFlags_ = _swig_getConfigFlags_NoMouse()

func _swig_getConfigFlags_NoMouseCursorChange() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_NoMouseCursorChange())
	return swig_r
}

var ConfigFlags_NoMouseCursorChange ImGuiConfigFlags_ = _swig_getConfigFlags_NoMouseCursorChange()

func _swig_getConfigFlags_IsSRGB() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_IsSRGB())
	return swig_r
}

var ConfigFlags_IsSRGB ImGuiConfigFlags_ = _swig_getConfigFlags_IsSRGB()

func _swig_getConfigFlags_IsTouchScreen() (_swig_ret ImGuiConfigFlags_) {
	var swig_r ImGuiConfigFlags_
	swig_r = (ImGuiConfigFlags_)(C._wrap_ConfigFlags_IsTouchScreen())
	return swig_r
}

var ConfigFlags_IsTouchScreen ImGuiConfigFlags_ = _swig_getConfigFlags_IsTouchScreen()

type ImGuiBackendFlags_ int

func _swig_getBackendFlags_HasGamepad() (_swig_ret ImGuiBackendFlags_) {
	var swig_r ImGuiBackendFlags_
	swig_r = (ImGuiBackendFlags_)(C._wrap_BackendFlags_HasGamepad())
	return swig_r
}

var BackendFlags_HasGamepad ImGuiBackendFlags_ = _swig_getBackendFlags_HasGamepad()

func _swig_getBackendFlags_HasMouseCursors() (_swig_ret ImGuiBackendFlags_) {
	var swig_r ImGuiBackendFlags_
	swig_r = (ImGuiBackendFlags_)(C._wrap_BackendFlags_HasMouseCursors())
	return swig_r
}

var BackendFlags_HasMouseCursors ImGuiBackendFlags_ = _swig_getBackendFlags_HasMouseCursors()

func _swig_getBackendFlags_HasSetMousePos() (_swig_ret ImGuiBackendFlags_) {
	var swig_r ImGuiBackendFlags_
	swig_r = (ImGuiBackendFlags_)(C._wrap_BackendFlags_HasSetMousePos())
	return swig_r
}

var BackendFlags_HasSetMousePos ImGuiBackendFlags_ = _swig_getBackendFlags_HasSetMousePos()

type ImGuiCol_ int

func _swig_getCol_Text() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_Text())
	return swig_r
}

var Col_Text ImGuiCol_ = _swig_getCol_Text()

func _swig_getCol_TextDisabled() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_TextDisabled())
	return swig_r
}

var Col_TextDisabled ImGuiCol_ = _swig_getCol_TextDisabled()

func _swig_getCol_WindowBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_WindowBg())
	return swig_r
}

var Col_WindowBg ImGuiCol_ = _swig_getCol_WindowBg()

func _swig_getCol_ChildBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ChildBg())
	return swig_r
}

var Col_ChildBg ImGuiCol_ = _swig_getCol_ChildBg()

func _swig_getCol_PopupBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_PopupBg())
	return swig_r
}

var Col_PopupBg ImGuiCol_ = _swig_getCol_PopupBg()

func _swig_getCol_Border() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_Border())
	return swig_r
}

var Col_Border ImGuiCol_ = _swig_getCol_Border()

func _swig_getCol_BorderShadow() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_BorderShadow())
	return swig_r
}

var Col_BorderShadow ImGuiCol_ = _swig_getCol_BorderShadow()

func _swig_getCol_FrameBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_FrameBg())
	return swig_r
}

var Col_FrameBg ImGuiCol_ = _swig_getCol_FrameBg()

func _swig_getCol_FrameBgHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_FrameBgHovered())
	return swig_r
}

var Col_FrameBgHovered ImGuiCol_ = _swig_getCol_FrameBgHovered()

func _swig_getCol_FrameBgActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_FrameBgActive())
	return swig_r
}

var Col_FrameBgActive ImGuiCol_ = _swig_getCol_FrameBgActive()

func _swig_getCol_TitleBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_TitleBg())
	return swig_r
}

var Col_TitleBg ImGuiCol_ = _swig_getCol_TitleBg()

func _swig_getCol_TitleBgActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_TitleBgActive())
	return swig_r
}

var Col_TitleBgActive ImGuiCol_ = _swig_getCol_TitleBgActive()

func _swig_getCol_TitleBgCollapsed() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_TitleBgCollapsed())
	return swig_r
}

var Col_TitleBgCollapsed ImGuiCol_ = _swig_getCol_TitleBgCollapsed()

func _swig_getCol_MenuBarBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_MenuBarBg())
	return swig_r
}

var Col_MenuBarBg ImGuiCol_ = _swig_getCol_MenuBarBg()

func _swig_getCol_ScrollbarBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ScrollbarBg())
	return swig_r
}

var Col_ScrollbarBg ImGuiCol_ = _swig_getCol_ScrollbarBg()

func _swig_getCol_ScrollbarGrab() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ScrollbarGrab())
	return swig_r
}

var Col_ScrollbarGrab ImGuiCol_ = _swig_getCol_ScrollbarGrab()

func _swig_getCol_ScrollbarGrabHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ScrollbarGrabHovered())
	return swig_r
}

var Col_ScrollbarGrabHovered ImGuiCol_ = _swig_getCol_ScrollbarGrabHovered()

func _swig_getCol_ScrollbarGrabActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ScrollbarGrabActive())
	return swig_r
}

var Col_ScrollbarGrabActive ImGuiCol_ = _swig_getCol_ScrollbarGrabActive()

func _swig_getCol_CheckMark() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_CheckMark())
	return swig_r
}

var Col_CheckMark ImGuiCol_ = _swig_getCol_CheckMark()

func _swig_getCol_SliderGrab() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_SliderGrab())
	return swig_r
}

var Col_SliderGrab ImGuiCol_ = _swig_getCol_SliderGrab()

func _swig_getCol_SliderGrabActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_SliderGrabActive())
	return swig_r
}

var Col_SliderGrabActive ImGuiCol_ = _swig_getCol_SliderGrabActive()

func _swig_getCol_Button() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_Button())
	return swig_r
}

var Col_Button ImGuiCol_ = _swig_getCol_Button()

func _swig_getCol_ButtonHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ButtonHovered())
	return swig_r
}

var Col_ButtonHovered ImGuiCol_ = _swig_getCol_ButtonHovered()

func _swig_getCol_ButtonActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ButtonActive())
	return swig_r
}

var Col_ButtonActive ImGuiCol_ = _swig_getCol_ButtonActive()

func _swig_getCol_Header() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_Header())
	return swig_r
}

var Col_Header ImGuiCol_ = _swig_getCol_Header()

func _swig_getCol_HeaderHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_HeaderHovered())
	return swig_r
}

var Col_HeaderHovered ImGuiCol_ = _swig_getCol_HeaderHovered()

func _swig_getCol_HeaderActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_HeaderActive())
	return swig_r
}

var Col_HeaderActive ImGuiCol_ = _swig_getCol_HeaderActive()

func _swig_getCol_Separator() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_Separator())
	return swig_r
}

var Col_Separator ImGuiCol_ = _swig_getCol_Separator()

func _swig_getCol_SeparatorHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_SeparatorHovered())
	return swig_r
}

var Col_SeparatorHovered ImGuiCol_ = _swig_getCol_SeparatorHovered()

func _swig_getCol_SeparatorActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_SeparatorActive())
	return swig_r
}

var Col_SeparatorActive ImGuiCol_ = _swig_getCol_SeparatorActive()

func _swig_getCol_ResizeGrip() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ResizeGrip())
	return swig_r
}

var Col_ResizeGrip ImGuiCol_ = _swig_getCol_ResizeGrip()

func _swig_getCol_ResizeGripHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ResizeGripHovered())
	return swig_r
}

var Col_ResizeGripHovered ImGuiCol_ = _swig_getCol_ResizeGripHovered()

func _swig_getCol_ResizeGripActive() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ResizeGripActive())
	return swig_r
}

var Col_ResizeGripActive ImGuiCol_ = _swig_getCol_ResizeGripActive()

func _swig_getCol_PlotLines() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_PlotLines())
	return swig_r
}

var Col_PlotLines ImGuiCol_ = _swig_getCol_PlotLines()

func _swig_getCol_PlotLinesHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_PlotLinesHovered())
	return swig_r
}

var Col_PlotLinesHovered ImGuiCol_ = _swig_getCol_PlotLinesHovered()

func _swig_getCol_PlotHistogram() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_PlotHistogram())
	return swig_r
}

var Col_PlotHistogram ImGuiCol_ = _swig_getCol_PlotHistogram()

func _swig_getCol_PlotHistogramHovered() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_PlotHistogramHovered())
	return swig_r
}

var Col_PlotHistogramHovered ImGuiCol_ = _swig_getCol_PlotHistogramHovered()

func _swig_getCol_TextSelectedBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_TextSelectedBg())
	return swig_r
}

var Col_TextSelectedBg ImGuiCol_ = _swig_getCol_TextSelectedBg()

func _swig_getCol_DragDropTarget() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_DragDropTarget())
	return swig_r
}

var Col_DragDropTarget ImGuiCol_ = _swig_getCol_DragDropTarget()

func _swig_getCol_NavHighlight() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_NavHighlight())
	return swig_r
}

var Col_NavHighlight ImGuiCol_ = _swig_getCol_NavHighlight()

func _swig_getCol_NavWindowingHighlight() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_NavWindowingHighlight())
	return swig_r
}

var Col_NavWindowingHighlight ImGuiCol_ = _swig_getCol_NavWindowingHighlight()

func _swig_getCol_NavWindowingDimBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_NavWindowingDimBg())
	return swig_r
}

var Col_NavWindowingDimBg ImGuiCol_ = _swig_getCol_NavWindowingDimBg()

func _swig_getCol_ModalWindowDimBg() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_ModalWindowDimBg())
	return swig_r
}

var Col_ModalWindowDimBg ImGuiCol_ = _swig_getCol_ModalWindowDimBg()

func _swig_getCol_COUNT() (_swig_ret ImGuiCol_) {
	var swig_r ImGuiCol_
	swig_r = (ImGuiCol_)(C._wrap_Col_COUNT())
	return swig_r
}

var Col_COUNT ImGuiCol_ = _swig_getCol_COUNT()

type ImGuiStyleVar_ int

func _swig_getStyleVar_Alpha() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_Alpha())
	return swig_r
}

var StyleVar_Alpha ImGuiStyleVar_ = _swig_getStyleVar_Alpha()

func _swig_getStyleVar_WindowPadding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_WindowPadding())
	return swig_r
}

var StyleVar_WindowPadding ImGuiStyleVar_ = _swig_getStyleVar_WindowPadding()

func _swig_getStyleVar_WindowRounding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_WindowRounding())
	return swig_r
}

var StyleVar_WindowRounding ImGuiStyleVar_ = _swig_getStyleVar_WindowRounding()

func _swig_getStyleVar_WindowBorderSize() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_WindowBorderSize())
	return swig_r
}

var StyleVar_WindowBorderSize ImGuiStyleVar_ = _swig_getStyleVar_WindowBorderSize()

func _swig_getStyleVar_WindowMinSize() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_WindowMinSize())
	return swig_r
}

var StyleVar_WindowMinSize ImGuiStyleVar_ = _swig_getStyleVar_WindowMinSize()

func _swig_getStyleVar_WindowTitleAlign() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_WindowTitleAlign())
	return swig_r
}

var StyleVar_WindowTitleAlign ImGuiStyleVar_ = _swig_getStyleVar_WindowTitleAlign()

func _swig_getStyleVar_ChildRounding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_ChildRounding())
	return swig_r
}

var StyleVar_ChildRounding ImGuiStyleVar_ = _swig_getStyleVar_ChildRounding()

func _swig_getStyleVar_ChildBorderSize() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_ChildBorderSize())
	return swig_r
}

var StyleVar_ChildBorderSize ImGuiStyleVar_ = _swig_getStyleVar_ChildBorderSize()

func _swig_getStyleVar_PopupRounding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_PopupRounding())
	return swig_r
}

var StyleVar_PopupRounding ImGuiStyleVar_ = _swig_getStyleVar_PopupRounding()

func _swig_getStyleVar_PopupBorderSize() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_PopupBorderSize())
	return swig_r
}

var StyleVar_PopupBorderSize ImGuiStyleVar_ = _swig_getStyleVar_PopupBorderSize()

func _swig_getStyleVar_FramePadding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_FramePadding())
	return swig_r
}

var StyleVar_FramePadding ImGuiStyleVar_ = _swig_getStyleVar_FramePadding()

func _swig_getStyleVar_FrameRounding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_FrameRounding())
	return swig_r
}

var StyleVar_FrameRounding ImGuiStyleVar_ = _swig_getStyleVar_FrameRounding()

func _swig_getStyleVar_FrameBorderSize() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_FrameBorderSize())
	return swig_r
}

var StyleVar_FrameBorderSize ImGuiStyleVar_ = _swig_getStyleVar_FrameBorderSize()

func _swig_getStyleVar_ItemSpacing() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_ItemSpacing())
	return swig_r
}

var StyleVar_ItemSpacing ImGuiStyleVar_ = _swig_getStyleVar_ItemSpacing()

func _swig_getStyleVar_ItemInnerSpacing() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_ItemInnerSpacing())
	return swig_r
}

var StyleVar_ItemInnerSpacing ImGuiStyleVar_ = _swig_getStyleVar_ItemInnerSpacing()

func _swig_getStyleVar_IndentSpacing() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_IndentSpacing())
	return swig_r
}

var StyleVar_IndentSpacing ImGuiStyleVar_ = _swig_getStyleVar_IndentSpacing()

func _swig_getStyleVar_ScrollbarSize() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_ScrollbarSize())
	return swig_r
}

var StyleVar_ScrollbarSize ImGuiStyleVar_ = _swig_getStyleVar_ScrollbarSize()

func _swig_getStyleVar_ScrollbarRounding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_ScrollbarRounding())
	return swig_r
}

var StyleVar_ScrollbarRounding ImGuiStyleVar_ = _swig_getStyleVar_ScrollbarRounding()

func _swig_getStyleVar_GrabMinSize() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_GrabMinSize())
	return swig_r
}

var StyleVar_GrabMinSize ImGuiStyleVar_ = _swig_getStyleVar_GrabMinSize()

func _swig_getStyleVar_GrabRounding() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_GrabRounding())
	return swig_r
}

var StyleVar_GrabRounding ImGuiStyleVar_ = _swig_getStyleVar_GrabRounding()

func _swig_getStyleVar_ButtonTextAlign() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_ButtonTextAlign())
	return swig_r
}

var StyleVar_ButtonTextAlign ImGuiStyleVar_ = _swig_getStyleVar_ButtonTextAlign()

func _swig_getStyleVar_COUNT() (_swig_ret ImGuiStyleVar_) {
	var swig_r ImGuiStyleVar_
	swig_r = (ImGuiStyleVar_)(C._wrap_StyleVar_COUNT())
	return swig_r
}

var StyleVar_COUNT ImGuiStyleVar_ = _swig_getStyleVar_COUNT()

type ImGuiColorEditFlags_ int

func _swig_getColorEditFlags_None() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_None())
	return swig_r
}

var ColorEditFlags_None ImGuiColorEditFlags_ = _swig_getColorEditFlags_None()

func _swig_getColorEditFlags_NoAlpha() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoAlpha())
	return swig_r
}

var ColorEditFlags_NoAlpha ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoAlpha()

func _swig_getColorEditFlags_NoPicker() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoPicker())
	return swig_r
}

var ColorEditFlags_NoPicker ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoPicker()

func _swig_getColorEditFlags_NoOptions() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoOptions())
	return swig_r
}

var ColorEditFlags_NoOptions ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoOptions()

func _swig_getColorEditFlags_NoSmallPreview() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoSmallPreview())
	return swig_r
}

var ColorEditFlags_NoSmallPreview ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoSmallPreview()

func _swig_getColorEditFlags_NoInputs() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoInputs())
	return swig_r
}

var ColorEditFlags_NoInputs ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoInputs()

func _swig_getColorEditFlags_NoTooltip() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoTooltip())
	return swig_r
}

var ColorEditFlags_NoTooltip ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoTooltip()

func _swig_getColorEditFlags_NoLabel() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoLabel())
	return swig_r
}

var ColorEditFlags_NoLabel ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoLabel()

func _swig_getColorEditFlags_NoSidePreview() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoSidePreview())
	return swig_r
}

var ColorEditFlags_NoSidePreview ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoSidePreview()

func _swig_getColorEditFlags_NoDragDrop() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_NoDragDrop())
	return swig_r
}

var ColorEditFlags_NoDragDrop ImGuiColorEditFlags_ = _swig_getColorEditFlags_NoDragDrop()

func _swig_getColorEditFlags_AlphaBar() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_AlphaBar())
	return swig_r
}

var ColorEditFlags_AlphaBar ImGuiColorEditFlags_ = _swig_getColorEditFlags_AlphaBar()

func _swig_getColorEditFlags_AlphaPreview() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_AlphaPreview())
	return swig_r
}

var ColorEditFlags_AlphaPreview ImGuiColorEditFlags_ = _swig_getColorEditFlags_AlphaPreview()

func _swig_getColorEditFlags_AlphaPreviewHalf() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_AlphaPreviewHalf())
	return swig_r
}

var ColorEditFlags_AlphaPreviewHalf ImGuiColorEditFlags_ = _swig_getColorEditFlags_AlphaPreviewHalf()

func _swig_getColorEditFlags_HDR() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_HDR())
	return swig_r
}

var ColorEditFlags_HDR ImGuiColorEditFlags_ = _swig_getColorEditFlags_HDR()

func _swig_getColorEditFlags_RGB() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_RGB())
	return swig_r
}

var ColorEditFlags_RGB ImGuiColorEditFlags_ = _swig_getColorEditFlags_RGB()

func _swig_getColorEditFlags_HSV() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_HSV())
	return swig_r
}

var ColorEditFlags_HSV ImGuiColorEditFlags_ = _swig_getColorEditFlags_HSV()

func _swig_getColorEditFlags_HEX() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_HEX())
	return swig_r
}

var ColorEditFlags_HEX ImGuiColorEditFlags_ = _swig_getColorEditFlags_HEX()

func _swig_getColorEditFlags_Uint8() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_Uint8())
	return swig_r
}

var ColorEditFlags_Uint8 ImGuiColorEditFlags_ = _swig_getColorEditFlags_Uint8()

func _swig_getColorEditFlags_Float() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_Float())
	return swig_r
}

var ColorEditFlags_Float ImGuiColorEditFlags_ = _swig_getColorEditFlags_Float()

func _swig_getColorEditFlags_PickerHueBar() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_PickerHueBar())
	return swig_r
}

var ColorEditFlags_PickerHueBar ImGuiColorEditFlags_ = _swig_getColorEditFlags_PickerHueBar()

func _swig_getColorEditFlags_PickerHueWheel() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags_PickerHueWheel())
	return swig_r
}

var ColorEditFlags_PickerHueWheel ImGuiColorEditFlags_ = _swig_getColorEditFlags_PickerHueWheel()

func _swig_getColorEditFlags__InputsMask() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags__InputsMask())
	return swig_r
}

var ColorEditFlags__InputsMask ImGuiColorEditFlags_ = _swig_getColorEditFlags__InputsMask()

func _swig_getColorEditFlags__DataTypeMask() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags__DataTypeMask())
	return swig_r
}

var ColorEditFlags__DataTypeMask ImGuiColorEditFlags_ = _swig_getColorEditFlags__DataTypeMask()

func _swig_getColorEditFlags__PickerMask() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags__PickerMask())
	return swig_r
}

var ColorEditFlags__PickerMask ImGuiColorEditFlags_ = _swig_getColorEditFlags__PickerMask()

func _swig_getColorEditFlags__OptionsDefault() (_swig_ret ImGuiColorEditFlags_) {
	var swig_r ImGuiColorEditFlags_
	swig_r = (ImGuiColorEditFlags_)(C._wrap_ColorEditFlags__OptionsDefault())
	return swig_r
}

var ColorEditFlags__OptionsDefault ImGuiColorEditFlags_ = _swig_getColorEditFlags__OptionsDefault()

type ImGuiMouseCursor_ int

func _swig_getMouseCursor_None() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_None())
	return swig_r
}

var MouseCursor_None ImGuiMouseCursor_ = _swig_getMouseCursor_None()

func _swig_getMouseCursor_Arrow() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_Arrow())
	return swig_r
}

var MouseCursor_Arrow ImGuiMouseCursor_ = _swig_getMouseCursor_Arrow()

func _swig_getMouseCursor_TextInput() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_TextInput())
	return swig_r
}

var MouseCursor_TextInput ImGuiMouseCursor_ = _swig_getMouseCursor_TextInput()

func _swig_getMouseCursor_ResizeAll() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_ResizeAll())
	return swig_r
}

var MouseCursor_ResizeAll ImGuiMouseCursor_ = _swig_getMouseCursor_ResizeAll()

func _swig_getMouseCursor_ResizeNS() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_ResizeNS())
	return swig_r
}

var MouseCursor_ResizeNS ImGuiMouseCursor_ = _swig_getMouseCursor_ResizeNS()

func _swig_getMouseCursor_ResizeEW() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_ResizeEW())
	return swig_r
}

var MouseCursor_ResizeEW ImGuiMouseCursor_ = _swig_getMouseCursor_ResizeEW()

func _swig_getMouseCursor_ResizeNESW() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_ResizeNESW())
	return swig_r
}

var MouseCursor_ResizeNESW ImGuiMouseCursor_ = _swig_getMouseCursor_ResizeNESW()

func _swig_getMouseCursor_ResizeNWSE() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_ResizeNWSE())
	return swig_r
}

var MouseCursor_ResizeNWSE ImGuiMouseCursor_ = _swig_getMouseCursor_ResizeNWSE()

func _swig_getMouseCursor_Hand() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_Hand())
	return swig_r
}

var MouseCursor_Hand ImGuiMouseCursor_ = _swig_getMouseCursor_Hand()

func _swig_getMouseCursor_COUNT() (_swig_ret ImGuiMouseCursor_) {
	var swig_r ImGuiMouseCursor_
	swig_r = (ImGuiMouseCursor_)(C._wrap_MouseCursor_COUNT())
	return swig_r
}

var MouseCursor_COUNT ImGuiMouseCursor_ = _swig_getMouseCursor_COUNT()

type ImGuiCond_ int

func _swig_getCond_Always() (_swig_ret ImGuiCond_) {
	var swig_r ImGuiCond_
	swig_r = (ImGuiCond_)(C._wrap_Cond_Always())
	return swig_r
}

var Cond_Always ImGuiCond_ = _swig_getCond_Always()

func _swig_getCond_Once() (_swig_ret ImGuiCond_) {
	var swig_r ImGuiCond_
	swig_r = (ImGuiCond_)(C._wrap_Cond_Once())
	return swig_r
}

var Cond_Once ImGuiCond_ = _swig_getCond_Once()

func _swig_getCond_FirstUseEver() (_swig_ret ImGuiCond_) {
	var swig_r ImGuiCond_
	swig_r = (ImGuiCond_)(C._wrap_Cond_FirstUseEver())
	return swig_r
}

var Cond_FirstUseEver ImGuiCond_ = _swig_getCond_FirstUseEver()

func _swig_getCond_Appearing() (_swig_ret ImGuiCond_) {
	var swig_r ImGuiCond_
	swig_r = (ImGuiCond_)(C._wrap_Cond_Appearing())
	return swig_r
}

var Cond_Appearing ImGuiCond_ = _swig_getCond_Appearing()

type SwigcptrStyle uintptr

func (p SwigcptrStyle) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStyle) SwigIsStyle() {
}

func (arg1 SwigcptrStyle) SetAlpha(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_Alpha_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetAlpha() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_Alpha_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetWindowPadding(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_WindowPadding_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetWindowPadding() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_WindowPadding_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetWindowRounding(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_WindowRounding_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetWindowRounding() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_WindowRounding_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetWindowBorderSize(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_WindowBorderSize_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetWindowBorderSize() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_WindowBorderSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetWindowMinSize(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_WindowMinSize_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetWindowMinSize() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_WindowMinSize_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetWindowTitleAlign(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_WindowTitleAlign_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetWindowTitleAlign() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_WindowTitleAlign_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetChildRounding(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_ChildRounding_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetChildRounding() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_ChildRounding_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetChildBorderSize(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_ChildBorderSize_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetChildBorderSize() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_ChildBorderSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetPopupRounding(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_PopupRounding_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetPopupRounding() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_PopupRounding_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetPopupBorderSize(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_PopupBorderSize_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetPopupBorderSize() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_PopupBorderSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetFramePadding(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_FramePadding_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetFramePadding() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_FramePadding_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetFrameRounding(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_FrameRounding_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetFrameRounding() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_FrameRounding_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetFrameBorderSize(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_FrameBorderSize_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetFrameBorderSize() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_FrameBorderSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetItemSpacing(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_ItemSpacing_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetItemSpacing() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_ItemSpacing_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetItemInnerSpacing(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_ItemInnerSpacing_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetItemInnerSpacing() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_ItemInnerSpacing_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetTouchExtraPadding(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_TouchExtraPadding_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetTouchExtraPadding() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_TouchExtraPadding_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetIndentSpacing(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_IndentSpacing_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetIndentSpacing() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_IndentSpacing_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetColumnsMinSpacing(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_ColumnsMinSpacing_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetColumnsMinSpacing() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_ColumnsMinSpacing_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetScrollbarSize(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_ScrollbarSize_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetScrollbarSize() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_ScrollbarSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetScrollbarRounding(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_ScrollbarRounding_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetScrollbarRounding() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_ScrollbarRounding_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetGrabMinSize(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_GrabMinSize_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetGrabMinSize() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_GrabMinSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetGrabRounding(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_GrabRounding_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetGrabRounding() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_GrabRounding_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetButtonTextAlign(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_ButtonTextAlign_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetButtonTextAlign() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_ButtonTextAlign_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetDisplayWindowPadding(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_DisplayWindowPadding_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetDisplayWindowPadding() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_DisplayWindowPadding_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetDisplaySafeAreaPadding(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_DisplaySafeAreaPadding_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetDisplaySafeAreaPadding() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Style_DisplaySafeAreaPadding_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrStyle) SetMouseCursorScale(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_MouseCursorScale_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetMouseCursorScale() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_MouseCursorScale_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetAntiAliasedLines(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_AntiAliasedLines_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetAntiAliasedLines() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Style_AntiAliasedLines_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetAntiAliasedFill(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_AntiAliasedFill_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetAntiAliasedFill() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Style_AntiAliasedFill_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetCurveTessellationTol(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_CurveTessellationTol_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetCurveTessellationTol() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_Style_CurveTessellationTol_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStyle) SetColors(arg2 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Style_Colors_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrStyle) GetColors() (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Style_Colors_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewStyle() (_swig_ret Style) {
	var swig_r Style
	swig_r = (Style)(SwigcptrStyle(C._wrap_new_Style()))
	return swig_r
}

func (arg1 SwigcptrStyle) ScaleAllSizes(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Style_ScaleAllSizes(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func DeleteStyle(arg1 Style) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Style(C.uintptr_t(_swig_i_0))
}

type Style interface {
	Swigcptr() uintptr
	SwigIsStyle()
	SetAlpha(arg2 float32)
	GetAlpha() (_swig_ret float32)
	SetWindowPadding(arg2 Vec2)
	GetWindowPadding() (_swig_ret Vec2)
	SetWindowRounding(arg2 float32)
	GetWindowRounding() (_swig_ret float32)
	SetWindowBorderSize(arg2 float32)
	GetWindowBorderSize() (_swig_ret float32)
	SetWindowMinSize(arg2 Vec2)
	GetWindowMinSize() (_swig_ret Vec2)
	SetWindowTitleAlign(arg2 Vec2)
	GetWindowTitleAlign() (_swig_ret Vec2)
	SetChildRounding(arg2 float32)
	GetChildRounding() (_swig_ret float32)
	SetChildBorderSize(arg2 float32)
	GetChildBorderSize() (_swig_ret float32)
	SetPopupRounding(arg2 float32)
	GetPopupRounding() (_swig_ret float32)
	SetPopupBorderSize(arg2 float32)
	GetPopupBorderSize() (_swig_ret float32)
	SetFramePadding(arg2 Vec2)
	GetFramePadding() (_swig_ret Vec2)
	SetFrameRounding(arg2 float32)
	GetFrameRounding() (_swig_ret float32)
	SetFrameBorderSize(arg2 float32)
	GetFrameBorderSize() (_swig_ret float32)
	SetItemSpacing(arg2 Vec2)
	GetItemSpacing() (_swig_ret Vec2)
	SetItemInnerSpacing(arg2 Vec2)
	GetItemInnerSpacing() (_swig_ret Vec2)
	SetTouchExtraPadding(arg2 Vec2)
	GetTouchExtraPadding() (_swig_ret Vec2)
	SetIndentSpacing(arg2 float32)
	GetIndentSpacing() (_swig_ret float32)
	SetColumnsMinSpacing(arg2 float32)
	GetColumnsMinSpacing() (_swig_ret float32)
	SetScrollbarSize(arg2 float32)
	GetScrollbarSize() (_swig_ret float32)
	SetScrollbarRounding(arg2 float32)
	GetScrollbarRounding() (_swig_ret float32)
	SetGrabMinSize(arg2 float32)
	GetGrabMinSize() (_swig_ret float32)
	SetGrabRounding(arg2 float32)
	GetGrabRounding() (_swig_ret float32)
	SetButtonTextAlign(arg2 Vec2)
	GetButtonTextAlign() (_swig_ret Vec2)
	SetDisplayWindowPadding(arg2 Vec2)
	GetDisplayWindowPadding() (_swig_ret Vec2)
	SetDisplaySafeAreaPadding(arg2 Vec2)
	GetDisplaySafeAreaPadding() (_swig_ret Vec2)
	SetMouseCursorScale(arg2 float32)
	GetMouseCursorScale() (_swig_ret float32)
	SetAntiAliasedLines(arg2 bool)
	GetAntiAliasedLines() (_swig_ret bool)
	SetAntiAliasedFill(arg2 bool)
	GetAntiAliasedFill() (_swig_ret bool)
	SetCurveTessellationTol(arg2 float32)
	GetCurveTessellationTol() (_swig_ret float32)
	SetColors(arg2 Vec4)
	GetColors() (_swig_ret Vec4)
	ScaleAllSizes(arg2 float32)
}

type SwigcptrIO uintptr

func (p SwigcptrIO) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIO) SwigIsIO() {
}

func (arg1 SwigcptrIO) SetConfigFlags(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_ConfigFlags_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrIO) GetConfigFlags() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IO_ConfigFlags_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetBackendFlags(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_BackendFlags_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrIO) GetBackendFlags() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IO_BackendFlags_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetDisplaySize(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_DisplaySize_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetDisplaySize() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_IO_DisplaySize_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIO) SetDeltaTime(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_DeltaTime_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetDeltaTime() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_DeltaTime_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetIniSavingRate(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_IniSavingRate_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetIniSavingRate() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_IniSavingRate_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetIniFilename(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_IniFilename_set(C.uintptr_t(_swig_i_0), *(*C.swig_type_451)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIO) GetIniFilename() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_IO_IniFilename_get(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIO) SetLogFilename(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_LogFilename_set(C.uintptr_t(_swig_i_0), *(*C.swig_type_453)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIO) GetLogFilename() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_IO_LogFilename_get(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIO) SetMouseDoubleClickTime(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MouseDoubleClickTime_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseDoubleClickTime() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_MouseDoubleClickTime_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMouseDoubleClickMaxDist(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MouseDoubleClickMaxDist_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseDoubleClickMaxDist() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_MouseDoubleClickMaxDist_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMouseDragThreshold(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MouseDragThreshold_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseDragThreshold() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_MouseDragThreshold_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeyMap(arg2 *int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_KeyMap_set(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeyMap() (_swig_ret *int) {
	var swig_r *int
	_swig_i_0 := arg1
	swig_r = (*int)(C._wrap_IO_KeyMap_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeyRepeatDelay(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_KeyRepeatDelay_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeyRepeatDelay() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_KeyRepeatDelay_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeyRepeatRate(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_KeyRepeatRate_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeyRepeatRate() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_KeyRepeatRate_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetUserData(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_UserData_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetUserData() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_IO_UserData_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetFonts(arg2 FontAtlas) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_Fonts_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetFonts() (_swig_ret FontAtlas) {
	var swig_r FontAtlas
	_swig_i_0 := arg1
	swig_r = (FontAtlas)(SwigcptrFontAtlas(C._wrap_IO_Fonts_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIO) SetFontGlobalScale(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_FontGlobalScale_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetFontGlobalScale() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_FontGlobalScale_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetFontAllowUserScaling(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_FontAllowUserScaling_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetFontAllowUserScaling() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_FontAllowUserScaling_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetFontDefault(arg2 Font) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_FontDefault_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetFontDefault() (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	swig_r = (Font)(SwigcptrFont(C._wrap_IO_FontDefault_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIO) SetDisplayFramebufferScale(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_DisplayFramebufferScale_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetDisplayFramebufferScale() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_IO_DisplayFramebufferScale_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIO) SetDisplayVisibleMin(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_DisplayVisibleMin_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetDisplayVisibleMin() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_IO_DisplayVisibleMin_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIO) SetDisplayVisibleMax(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_DisplayVisibleMax_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetDisplayVisibleMax() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_IO_DisplayVisibleMax_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIO) SetMouseDrawCursor(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MouseDrawCursor_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseDrawCursor() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_MouseDrawCursor_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetConfigMacOSXBehaviors(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_ConfigMacOSXBehaviors_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetConfigMacOSXBehaviors() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_ConfigMacOSXBehaviors_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetConfigInputTextCursorBlink(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_ConfigInputTextCursorBlink_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetConfigInputTextCursorBlink() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_ConfigInputTextCursorBlink_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetConfigResizeWindowsFromEdges(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_ConfigResizeWindowsFromEdges_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetConfigResizeWindowsFromEdges() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_ConfigResizeWindowsFromEdges_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetGetClipboardTextFn(arg2 _swig_fnptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_GetClipboardTextFn_set(C.uintptr_t(_swig_i_0), C.swig_type_455(_swig_i_1))
}

func (arg1 SwigcptrIO) GetGetClipboardTextFn() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	_swig_i_0 := arg1
	swig_r = (_swig_fnptr)(C._wrap_IO_GetClipboardTextFn_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetSetClipboardTextFn(arg2 _swig_fnptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_SetClipboardTextFn_set(C.uintptr_t(_swig_i_0), C.swig_type_457(_swig_i_1))
}

func (arg1 SwigcptrIO) GetSetClipboardTextFn() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	_swig_i_0 := arg1
	swig_r = (_swig_fnptr)(C._wrap_IO_SetClipboardTextFn_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetClipboardUserData(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_ClipboardUserData_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetClipboardUserData() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_IO_ClipboardUserData_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetImeSetInputScreenPosFn(arg2 _swig_fnptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_ImeSetInputScreenPosFn_set(C.uintptr_t(_swig_i_0), C.swig_type_459(_swig_i_1))
}

func (arg1 SwigcptrIO) GetImeSetInputScreenPosFn() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	_swig_i_0 := arg1
	swig_r = (_swig_fnptr)(C._wrap_IO_ImeSetInputScreenPosFn_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetImeWindowHandle(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_ImeWindowHandle_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetImeWindowHandle() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_IO_ImeWindowHandle_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMousePos(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_MousePos_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMousePos() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_IO_MousePos_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIO) SetMouseDown(arg2 []bool) {
	_swig_i_0 := arg1
	_swig_i_1 := &arg2[0]
	C._wrap_IO_MouseDown_set(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseDown() (_swig_ret []bool) {
	var swig_r []bool
	_swig_i_0 := arg1
	swig_p := (C._wrap_IO_MouseDown_get(C.uintptr_t(_swig_i_0)))
	swig_r = *(*[]bool)(unsafe.Pointer(&swig_p))
	return swig_r
}

func (arg1 SwigcptrIO) SetMouseWheel(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MouseWheel_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseWheel() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_MouseWheel_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMouseWheelH(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MouseWheelH_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseWheelH() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_MouseWheelH_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeyCtrl(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_KeyCtrl_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeyCtrl() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_KeyCtrl_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeyShift(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_KeyShift_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeyShift() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_KeyShift_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeyAlt(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_KeyAlt_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeyAlt() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_KeyAlt_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeySuper(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_KeySuper_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeySuper() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_KeySuper_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetKeysDown(arg2 []bool) {
	_swig_i_0 := arg1
	_swig_i_1 := &arg2[0]
	C._wrap_IO_KeysDown_set(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrIO) GetKeysDown() (_swig_ret []bool) {
	var swig_r []bool
	_swig_i_0 := arg1
	swig_p := (C._wrap_IO_KeysDown_get(C.uintptr_t(_swig_i_0)))
	swig_r = *(*[]bool)(unsafe.Pointer(&swig_p))
	return swig_r
}

func (arg1 SwigcptrIO) SetInputCharacters(arg2 []uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := &arg2[0]
	C._wrap_IO_InputCharacters_set(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrIO) GetInputCharacters() (_swig_ret []uint16) {
	var swig_r []uint16
	_swig_i_0 := arg1
	swig_p := (C._wrap_IO_InputCharacters_get(C.uintptr_t(_swig_i_0)))
	swig_r = *(*[]uint16)(unsafe.Pointer(&swig_p))
	return swig_r
}

func (arg1 SwigcptrIO) SetNavInputs(arg2 *float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_NavInputs_set(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrIO) GetNavInputs() (_swig_ret *float32) {
	var swig_r *float32
	_swig_i_0 := arg1
	swig_r = (*float32)(C._wrap_IO_NavInputs_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) AddInputCharacter(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_AddInputCharacter(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrIO) AddInputCharactersUTF8(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_AddInputCharactersUTF8(C.uintptr_t(_swig_i_0), *(*C.swig_type_461)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIO) ClearInputCharacters() {
	_swig_i_0 := arg1
	C._wrap_IO_ClearInputCharacters(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIO) SetWantCaptureMouse(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_WantCaptureMouse_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetWantCaptureMouse() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_WantCaptureMouse_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetWantCaptureKeyboard(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_WantCaptureKeyboard_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetWantCaptureKeyboard() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_WantCaptureKeyboard_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetWantTextInput(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_WantTextInput_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetWantTextInput() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_WantTextInput_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetWantSetMousePos(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_WantSetMousePos_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetWantSetMousePos() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_WantSetMousePos_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetWantSaveIniSettings(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_WantSaveIniSettings_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetWantSaveIniSettings() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_WantSaveIniSettings_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetNavActive(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_NavActive_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetNavActive() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_NavActive_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetNavVisible(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_NavVisible_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrIO) GetNavVisible() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_IO_NavVisible_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetFramerate(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_Framerate_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrIO) GetFramerate() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_IO_Framerate_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMetricsRenderVertices(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MetricsRenderVertices_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMetricsRenderVertices() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IO_MetricsRenderVertices_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMetricsRenderIndices(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MetricsRenderIndices_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMetricsRenderIndices() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IO_MetricsRenderIndices_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMetricsRenderWindows(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MetricsRenderWindows_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMetricsRenderWindows() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IO_MetricsRenderWindows_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMetricsActiveWindows(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MetricsActiveWindows_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMetricsActiveWindows() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IO_MetricsActiveWindows_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMetricsActiveAllocations(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_IO_MetricsActiveAllocations_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMetricsActiveAllocations() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_IO_MetricsActiveAllocations_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIO) SetMouseDelta(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_IO_MouseDelta_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIO) GetMouseDelta() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_IO_MouseDelta_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIO() (_swig_ret IO) {
	var swig_r IO
	swig_r = (IO)(SwigcptrIO(C._wrap_new_IO()))
	return swig_r
}

func DeleteIO(arg1 IO) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_IO(C.uintptr_t(_swig_i_0))
}

type IO interface {
	Swigcptr() uintptr
	SwigIsIO()
	SetConfigFlags(arg2 int)
	GetConfigFlags() (_swig_ret int)
	SetBackendFlags(arg2 int)
	GetBackendFlags() (_swig_ret int)
	SetDisplaySize(arg2 Vec2)
	GetDisplaySize() (_swig_ret Vec2)
	SetDeltaTime(arg2 float32)
	GetDeltaTime() (_swig_ret float32)
	SetIniSavingRate(arg2 float32)
	GetIniSavingRate() (_swig_ret float32)
	SetIniFilename(arg2 string)
	GetIniFilename() (_swig_ret string)
	SetLogFilename(arg2 string)
	GetLogFilename() (_swig_ret string)
	SetMouseDoubleClickTime(arg2 float32)
	GetMouseDoubleClickTime() (_swig_ret float32)
	SetMouseDoubleClickMaxDist(arg2 float32)
	GetMouseDoubleClickMaxDist() (_swig_ret float32)
	SetMouseDragThreshold(arg2 float32)
	GetMouseDragThreshold() (_swig_ret float32)
	SetKeyMap(arg2 *int)
	GetKeyMap() (_swig_ret *int)
	SetKeyRepeatDelay(arg2 float32)
	GetKeyRepeatDelay() (_swig_ret float32)
	SetKeyRepeatRate(arg2 float32)
	GetKeyRepeatRate() (_swig_ret float32)
	SetUserData(arg2 uintptr)
	GetUserData() (_swig_ret uintptr)
	SetFonts(arg2 FontAtlas)
	GetFonts() (_swig_ret FontAtlas)
	SetFontGlobalScale(arg2 float32)
	GetFontGlobalScale() (_swig_ret float32)
	SetFontAllowUserScaling(arg2 bool)
	GetFontAllowUserScaling() (_swig_ret bool)
	SetFontDefault(arg2 Font)
	GetFontDefault() (_swig_ret Font)
	SetDisplayFramebufferScale(arg2 Vec2)
	GetDisplayFramebufferScale() (_swig_ret Vec2)
	SetDisplayVisibleMin(arg2 Vec2)
	GetDisplayVisibleMin() (_swig_ret Vec2)
	SetDisplayVisibleMax(arg2 Vec2)
	GetDisplayVisibleMax() (_swig_ret Vec2)
	SetMouseDrawCursor(arg2 bool)
	GetMouseDrawCursor() (_swig_ret bool)
	SetConfigMacOSXBehaviors(arg2 bool)
	GetConfigMacOSXBehaviors() (_swig_ret bool)
	SetConfigInputTextCursorBlink(arg2 bool)
	GetConfigInputTextCursorBlink() (_swig_ret bool)
	SetConfigResizeWindowsFromEdges(arg2 bool)
	GetConfigResizeWindowsFromEdges() (_swig_ret bool)
	SetGetClipboardTextFn(arg2 _swig_fnptr)
	GetGetClipboardTextFn() (_swig_ret _swig_fnptr)
	SetSetClipboardTextFn(arg2 _swig_fnptr)
	GetSetClipboardTextFn() (_swig_ret _swig_fnptr)
	SetClipboardUserData(arg2 uintptr)
	GetClipboardUserData() (_swig_ret uintptr)
	SetImeSetInputScreenPosFn(arg2 _swig_fnptr)
	GetImeSetInputScreenPosFn() (_swig_ret _swig_fnptr)
	SetImeWindowHandle(arg2 uintptr)
	GetImeWindowHandle() (_swig_ret uintptr)
	SetMousePos(arg2 Vec2)
	GetMousePos() (_swig_ret Vec2)
	SetMouseDown(arg2 []bool)
	GetMouseDown() (_swig_ret []bool)
	SetMouseWheel(arg2 float32)
	GetMouseWheel() (_swig_ret float32)
	SetMouseWheelH(arg2 float32)
	GetMouseWheelH() (_swig_ret float32)
	SetKeyCtrl(arg2 bool)
	GetKeyCtrl() (_swig_ret bool)
	SetKeyShift(arg2 bool)
	GetKeyShift() (_swig_ret bool)
	SetKeyAlt(arg2 bool)
	GetKeyAlt() (_swig_ret bool)
	SetKeySuper(arg2 bool)
	GetKeySuper() (_swig_ret bool)
	SetKeysDown(arg2 []bool)
	GetKeysDown() (_swig_ret []bool)
	SetInputCharacters(arg2 []uint16)
	GetInputCharacters() (_swig_ret []uint16)
	SetNavInputs(arg2 *float32)
	GetNavInputs() (_swig_ret *float32)
	AddInputCharacter(arg2 uint16)
	AddInputCharactersUTF8(arg2 string)
	ClearInputCharacters()
	SetWantCaptureMouse(arg2 bool)
	GetWantCaptureMouse() (_swig_ret bool)
	SetWantCaptureKeyboard(arg2 bool)
	GetWantCaptureKeyboard() (_swig_ret bool)
	SetWantTextInput(arg2 bool)
	GetWantTextInput() (_swig_ret bool)
	SetWantSetMousePos(arg2 bool)
	GetWantSetMousePos() (_swig_ret bool)
	SetWantSaveIniSettings(arg2 bool)
	GetWantSaveIniSettings() (_swig_ret bool)
	SetNavActive(arg2 bool)
	GetNavActive() (_swig_ret bool)
	SetNavVisible(arg2 bool)
	GetNavVisible() (_swig_ret bool)
	SetFramerate(arg2 float32)
	GetFramerate() (_swig_ret float32)
	SetMetricsRenderVertices(arg2 int)
	GetMetricsRenderVertices() (_swig_ret int)
	SetMetricsRenderIndices(arg2 int)
	GetMetricsRenderIndices() (_swig_ret int)
	SetMetricsRenderWindows(arg2 int)
	GetMetricsRenderWindows() (_swig_ret int)
	SetMetricsActiveWindows(arg2 int)
	GetMetricsActiveWindows() (_swig_ret int)
	SetMetricsActiveAllocations(arg2 int)
	GetMetricsActiveAllocations() (_swig_ret int)
	SetMouseDelta(arg2 Vec2)
	GetMouseDelta() (_swig_ret Vec2)
	Delete()
}

type SwigcptrInputTextCallbackData uintptr

func (p SwigcptrInputTextCallbackData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrInputTextCallbackData) SwigIsInputTextCallbackData() {
}

func (arg1 SwigcptrInputTextCallbackData) SetEventFlag(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_EventFlag_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetEventFlag() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_EventFlag_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetFlags(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_Flags_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetFlags() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_Flags_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetUserData(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_UserData_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetUserData() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_InputTextCallbackData_UserData_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetEventChar(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_EventChar_set(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetEventChar() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_InputTextCallbackData_EventChar_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetEventKey(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_EventKey_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetEventKey() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_EventKey_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetBuf(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_Buf_set(C.uintptr_t(_swig_i_0), *(*C.swig_type_462)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrInputTextCallbackData) GetBuf() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_InputTextCallbackData_Buf_get(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrInputTextCallbackData) SetBufTextLen(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_BufTextLen_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetBufTextLen() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_BufTextLen_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetBufSize(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_BufSize_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetBufSize() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_BufSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetBufDirty(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_BufDirty_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetBufDirty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_InputTextCallbackData_BufDirty_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetCursorPos(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_CursorPos_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetCursorPos() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_CursorPos_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetSelectionStart(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_SelectionStart_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetSelectionStart() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_SelectionStart_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) SetSelectionEnd(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_InputTextCallbackData_SelectionEnd_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrInputTextCallbackData) GetSelectionEnd() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_InputTextCallbackData_SelectionEnd_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewInputTextCallbackData() (_swig_ret InputTextCallbackData) {
	var swig_r InputTextCallbackData
	swig_r = (InputTextCallbackData)(SwigcptrInputTextCallbackData(C._wrap_new_InputTextCallbackData()))
	return swig_r
}

func (arg1 SwigcptrInputTextCallbackData) DeleteChars(arg2 int, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_InputTextCallbackData_DeleteChars(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrInputTextCallbackData) InsertChars__SWIG_0(arg2 int, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_InputTextCallbackData_InsertChars__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_465)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrInputTextCallbackData) InsertChars__SWIG_1(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_InputTextCallbackData_InsertChars__SWIG_1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_466)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (p SwigcptrInputTextCallbackData) InsertChars(a0 int, a1 string, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.InsertChars__SWIG_1(a0, a1)
		return
	}
	if argc == 1 {
		p.InsertChars__SWIG_0(a0, a1, a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrInputTextCallbackData) HasSelection() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_InputTextCallbackData_HasSelection(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteInputTextCallbackData(arg1 InputTextCallbackData) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_InputTextCallbackData(C.uintptr_t(_swig_i_0))
}

type InputTextCallbackData interface {
	Swigcptr() uintptr
	SwigIsInputTextCallbackData()
	SetEventFlag(arg2 int)
	GetEventFlag() (_swig_ret int)
	SetFlags(arg2 int)
	GetFlags() (_swig_ret int)
	SetUserData(arg2 uintptr)
	GetUserData() (_swig_ret uintptr)
	SetEventChar(arg2 uint16)
	GetEventChar() (_swig_ret uint16)
	SetEventKey(arg2 int)
	GetEventKey() (_swig_ret int)
	SetBuf(arg2 string)
	GetBuf() (_swig_ret string)
	SetBufTextLen(arg2 int)
	GetBufTextLen() (_swig_ret int)
	SetBufSize(arg2 int)
	GetBufSize() (_swig_ret int)
	SetBufDirty(arg2 bool)
	GetBufDirty() (_swig_ret bool)
	SetCursorPos(arg2 int)
	GetCursorPos() (_swig_ret int)
	SetSelectionStart(arg2 int)
	GetSelectionStart() (_swig_ret int)
	SetSelectionEnd(arg2 int)
	GetSelectionEnd() (_swig_ret int)
	DeleteChars(arg2 int, arg3 int)
	InsertChars(a0 int, a1 string, a ...interface{})
	HasSelection() (_swig_ret bool)
}

type SwigcptrSizeCallbackData uintptr

func (p SwigcptrSizeCallbackData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSizeCallbackData) SwigIsSizeCallbackData() {
}

func (arg1 SwigcptrSizeCallbackData) SetUserData(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SizeCallbackData_UserData_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSizeCallbackData) GetUserData() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_SizeCallbackData_UserData_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSizeCallbackData) SetPos(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SizeCallbackData_Pos_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSizeCallbackData) GetPos() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_SizeCallbackData_Pos_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSizeCallbackData) SetCurrentSize(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SizeCallbackData_CurrentSize_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSizeCallbackData) GetCurrentSize() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_SizeCallbackData_CurrentSize_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSizeCallbackData) SetDesiredSize(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_SizeCallbackData_DesiredSize_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSizeCallbackData) GetDesiredSize() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_SizeCallbackData_DesiredSize_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSizeCallbackData() (_swig_ret SizeCallbackData) {
	var swig_r SizeCallbackData
	swig_r = (SizeCallbackData)(SwigcptrSizeCallbackData(C._wrap_new_SizeCallbackData()))
	return swig_r
}

func DeleteSizeCallbackData(arg1 SizeCallbackData) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_SizeCallbackData(C.uintptr_t(_swig_i_0))
}

type SizeCallbackData interface {
	Swigcptr() uintptr
	SwigIsSizeCallbackData()
	SetUserData(arg2 uintptr)
	GetUserData() (_swig_ret uintptr)
	SetPos(arg2 Vec2)
	GetPos() (_swig_ret Vec2)
	SetCurrentSize(arg2 Vec2)
	GetCurrentSize() (_swig_ret Vec2)
	SetDesiredSize(arg2 Vec2)
	GetDesiredSize() (_swig_ret Vec2)
}

type SwigcptrPayload uintptr

func (p SwigcptrPayload) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPayload) SwigIsPayload() {
}

func (arg1 SwigcptrPayload) SetData(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_Data_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPayload) GetData() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Payload_Data_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPayload) SetDataSize(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_DataSize_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPayload) GetDataSize() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Payload_DataSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPayload) SetSourceId(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_SourceId_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPayload) GetSourceId() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_Payload_SourceId_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPayload) SetSourceParentId(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_SourceParentId_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPayload) GetSourceParentId() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_Payload_SourceParentId_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPayload) SetDataFrameCount(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_DataFrameCount_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPayload) GetDataFrameCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Payload_DataFrameCount_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPayload) SetDataType(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_DataType_set(C.uintptr_t(_swig_i_0), *(*C.swig_type_467)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPayload) GetDataType() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Payload_DataType_get(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrPayload) SetPreview(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_Preview_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrPayload) GetPreview() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Payload_Preview_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPayload) SetDelivery(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Payload_Delivery_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrPayload) GetDelivery() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Payload_Delivery_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewPayload() (_swig_ret Payload) {
	var swig_r Payload
	swig_r = (Payload)(SwigcptrPayload(C._wrap_new_Payload()))
	return swig_r
}

func (arg1 SwigcptrPayload) Clear() {
	_swig_i_0 := arg1
	C._wrap_Payload_Clear(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPayload) IsDataType(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Payload_IsDataType(C.uintptr_t(_swig_i_0), *(*C.swig_type_469)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrPayload) IsPreview() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Payload_IsPreview(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPayload) IsDelivery() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Payload_IsDelivery(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeletePayload(arg1 Payload) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Payload(C.uintptr_t(_swig_i_0))
}

type Payload interface {
	Swigcptr() uintptr
	SwigIsPayload()
	SetData(arg2 uintptr)
	GetData() (_swig_ret uintptr)
	SetDataSize(arg2 int)
	GetDataSize() (_swig_ret int)
	SetSourceId(arg2 uint)
	GetSourceId() (_swig_ret uint)
	SetSourceParentId(arg2 uint)
	GetSourceParentId() (_swig_ret uint)
	SetDataFrameCount(arg2 int)
	GetDataFrameCount() (_swig_ret int)
	SetDataType(arg2 string)
	GetDataType() (_swig_ret string)
	SetPreview(arg2 bool)
	GetPreview() (_swig_ret bool)
	SetDelivery(arg2 bool)
	GetDelivery() (_swig_ret bool)
	Clear()
	IsDataType(arg2 string) (_swig_ret bool)
	IsPreview() (_swig_ret bool)
	IsDelivery() (_swig_ret bool)
}

const IM_COL32_R_SHIFT int = 0
const IM_COL32_G_SHIFT int = 8
const IM_COL32_B_SHIFT int = 16
const IM_COL32_A_SHIFT int = 24
const IM_COL32_A_MASK = 0xFF000000

type SwigcptrColor uintptr

func (p SwigcptrColor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrColor) SwigIsColor() {
}

func (arg1 SwigcptrColor) SetValue(arg2 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Color_Value_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrColor) GetValue() (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Color_Value_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewColor__SWIG_0() (_swig_ret Color) {
	var swig_r Color
	swig_r = (Color)(SwigcptrColor(C._wrap_new_Color__SWIG_0()))
	return swig_r
}

func NewColor__SWIG_1(arg1 int, arg2 int, arg3 int, arg4 int) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Color)(SwigcptrColor(C._wrap_new_Color__SWIG_1(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func NewColor__SWIG_2(arg1 int, arg2 int, arg3 int) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Color)(SwigcptrColor(C._wrap_new_Color__SWIG_2(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func NewColor__SWIG_3(arg1 uint) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1
	swig_r = (Color)(SwigcptrColor(C._wrap_new_Color__SWIG_3(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewColor__SWIG_4(arg1 float32, arg2 float32, arg3 float32, arg4 float32) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Color)(SwigcptrColor(C._wrap_new_Color__SWIG_4(C.float(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3))))
	return swig_r
}

func NewColor__SWIG_5(arg1 float32, arg2 float32, arg3 float32) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Color)(SwigcptrColor(C._wrap_new_Color__SWIG_5(C.float(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2))))
	return swig_r
}

func NewColor__SWIG_6(arg1 Vec4) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (Color)(SwigcptrColor(C._wrap_new_Color__SWIG_6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewColor(a ...interface{}) Color {
	argc := len(a)
	if argc == 0 {
		return NewColor__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrVec4); !ok {
			goto check_2
		}
		return NewColor__SWIG_6(a[0].(Vec4))
	}
check_2:
	if argc == 1 {
		return NewColor__SWIG_3(a[0].(uint))
	}
	if argc == 3 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		if _, ok := a[1].(int); !ok {
			goto check_4
		}
		if _, ok := a[2].(int); !ok {
			goto check_4
		}
		return NewColor__SWIG_2(a[0].(int), a[1].(int), a[2].(int))
	}
check_4:
	if argc == 3 {
		return NewColor__SWIG_5(a[0].(float32), a[1].(float32), a[2].(float32))
	}
	if argc == 4 {
		if _, ok := a[0].(int); !ok {
			goto check_6
		}
		if _, ok := a[1].(int); !ok {
			goto check_6
		}
		if _, ok := a[2].(int); !ok {
			goto check_6
		}
		if _, ok := a[3].(int); !ok {
			goto check_6
		}
		return NewColor__SWIG_1(a[0].(int), a[1].(int), a[2].(int), a[3].(int))
	}
check_6:
	if argc == 4 {
		return NewColor__SWIG_4(a[0].(float32), a[1].(float32), a[2].(float32), a[3].(float32))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrColor) U32() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_Color_U32(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrColor) Vec4() (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Color_Vec4(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrColor) SetHSV__SWIG_0(arg2 float32, arg3 float32, arg4 float32, arg5 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_Color_SetHSV__SWIG_0(C.uintptr_t(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4))
}

func (arg1 SwigcptrColor) SetHSV__SWIG_1(arg2 float32, arg3 float32, arg4 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Color_SetHSV__SWIG_1(C.uintptr_t(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3))
}

func (p SwigcptrColor) SetHSV(a0 float32, a1 float32, a2 float32, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.SetHSV__SWIG_1(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.SetHSV__SWIG_0(a0, a1, a2, a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func ColorHSV__SWIG_0(arg1 float32, arg2 float32, arg3 float32, arg4 float32) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Color)(SwigcptrColor(C._wrap_Color_HSV__SWIG_0(C.float(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3))))
	return swig_r
}

func ColorHSV__SWIG_1(arg1 float32, arg2 float32, arg3 float32) (_swig_ret Color) {
	var swig_r Color
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Color)(SwigcptrColor(C._wrap_Color_HSV__SWIG_1(C.float(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2))))
	return swig_r
}

func ColorHSV(a0 float32, a1 float32, a2 float32, a ...interface{}) Color {
	argc := len(a)
	if argc == 0 {
		return ColorHSV__SWIG_1(a0, a1, a2)
	}
	if argc == 1 {
		return ColorHSV__SWIG_0(a0, a1, a2, a[0].(float32))
	}
	panic("No match for overloaded function call")
}

func DeleteColor(arg1 Color) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Color(C.uintptr_t(_swig_i_0))
}

type Color interface {
	Swigcptr() uintptr
	SwigIsColor()
	SetValue(arg2 Vec4)
	GetValue() (_swig_ret Vec4)
	U32() (_swig_ret uint)
	Vec4() (_swig_ret Vec4)
	SetHSV(a0 float32, a1 float32, a2 float32, a ...interface{})
	Delete()
}

type SwigcptrListClipper uintptr

func (p SwigcptrListClipper) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrListClipper) SwigIsListClipper() {
}

func (arg1 SwigcptrListClipper) SetStartPosY(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ListClipper_StartPosY_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrListClipper) GetStartPosY() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_ListClipper_StartPosY_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrListClipper) SetItemsHeight(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ListClipper_ItemsHeight_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrListClipper) GetItemsHeight() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_ListClipper_ItemsHeight_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrListClipper) SetItemsCount(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ListClipper_ItemsCount_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrListClipper) GetItemsCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ListClipper_ItemsCount_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrListClipper) SetStepNo(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ListClipper_StepNo_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrListClipper) GetStepNo() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ListClipper_StepNo_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrListClipper) SetDisplayStart(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ListClipper_DisplayStart_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrListClipper) GetDisplayStart() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ListClipper_DisplayStart_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrListClipper) SetDisplayEnd(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ListClipper_DisplayEnd_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrListClipper) GetDisplayEnd() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ListClipper_DisplayEnd_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewListClipper__SWIG_0(arg1 int, arg2 float32) (_swig_ret ListClipper) {
	var swig_r ListClipper
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ListClipper)(SwigcptrListClipper(C._wrap_new_ListClipper__SWIG_0(C.swig_intgo(_swig_i_0), C.float(_swig_i_1))))
	return swig_r
}

func NewListClipper__SWIG_1(arg1 int) (_swig_ret ListClipper) {
	var swig_r ListClipper
	_swig_i_0 := arg1
	swig_r = (ListClipper)(SwigcptrListClipper(C._wrap_new_ListClipper__SWIG_1(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewListClipper__SWIG_2() (_swig_ret ListClipper) {
	var swig_r ListClipper
	swig_r = (ListClipper)(SwigcptrListClipper(C._wrap_new_ListClipper__SWIG_2()))
	return swig_r
}

func NewListClipper(a ...interface{}) ListClipper {
	argc := len(a)
	if argc == 0 {
		return NewListClipper__SWIG_2()
	}
	if argc == 1 {
		return NewListClipper__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return NewListClipper__SWIG_0(a[0].(int), a[1].(float32))
	}
	panic("No match for overloaded function call")
}

func DeleteListClipper(arg1 ListClipper) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ListClipper(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrListClipper) Step() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ListClipper_Step(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrListClipper) Begin__SWIG_0(arg2 int, arg3 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ListClipper_Begin__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.float(_swig_i_2))
}

func (arg1 SwigcptrListClipper) Begin__SWIG_1(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ListClipper_Begin__SWIG_1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (p SwigcptrListClipper) Begin(a0 int, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Begin__SWIG_1(a0)
		return
	}
	if argc == 1 {
		p.Begin__SWIG_0(a0, a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrListClipper) End() {
	_swig_i_0 := arg1
	C._wrap_ListClipper_End(C.uintptr_t(_swig_i_0))
}

type ListClipper interface {
	Swigcptr() uintptr
	SwigIsListClipper()
	SetStartPosY(arg2 float32)
	GetStartPosY() (_swig_ret float32)
	SetItemsHeight(arg2 float32)
	GetItemsHeight() (_swig_ret float32)
	SetItemsCount(arg2 int)
	GetItemsCount() (_swig_ret int)
	SetStepNo(arg2 int)
	GetStepNo() (_swig_ret int)
	SetDisplayStart(arg2 int)
	GetDisplayStart() (_swig_ret int)
	SetDisplayEnd(arg2 int)
	GetDisplayEnd() (_swig_ret int)
	Step() (_swig_ret bool)
	Begin(a0 int, a ...interface{})
	End()
}

type SwigcptrDrawCmd uintptr

func (p SwigcptrDrawCmd) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDrawCmd) SwigIsDrawCmd() {
}

func (arg1 SwigcptrDrawCmd) SetElemCount(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawCmd_ElemCount_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawCmd) GetElemCount() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_DrawCmd_ElemCount_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawCmd) SetClipRect(arg2 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawCmd_ClipRect_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawCmd) GetClipRect() (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_DrawCmd_ClipRect_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawCmd) SetTextureId(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawCmd_TextureId_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawCmd) GetTextureId() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_DrawCmd_TextureId_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawCmd) SetUserCallback(arg2 _swig_fnptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawCmd_UserCallback_set(C.uintptr_t(_swig_i_0), C.swig_type_470(_swig_i_1))
}

func (arg1 SwigcptrDrawCmd) GetUserCallback() (_swig_ret _swig_fnptr) {
	var swig_r _swig_fnptr
	_swig_i_0 := arg1
	swig_r = (_swig_fnptr)(C._wrap_DrawCmd_UserCallback_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawCmd) SetUserCallbackData(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawCmd_UserCallbackData_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawCmd) GetUserCallbackData() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_DrawCmd_UserCallbackData_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewDrawCmd() (_swig_ret DrawCmd) {
	var swig_r DrawCmd
	swig_r = (DrawCmd)(SwigcptrDrawCmd(C._wrap_new_DrawCmd()))
	return swig_r
}

func DeleteDrawCmd(arg1 DrawCmd) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DrawCmd(C.uintptr_t(_swig_i_0))
}

type DrawCmd interface {
	Swigcptr() uintptr
	SwigIsDrawCmd()
	SetElemCount(arg2 uint)
	GetElemCount() (_swig_ret uint)
	SetClipRect(arg2 Vec4)
	GetClipRect() (_swig_ret Vec4)
	SetTextureId(arg2 uintptr)
	GetTextureId() (_swig_ret uintptr)
	SetUserCallback(arg2 _swig_fnptr)
	GetUserCallback() (_swig_ret _swig_fnptr)
	SetUserCallbackData(arg2 uintptr)
	GetUserCallbackData() (_swig_ret uintptr)
	Delete()
}

func DrawCmdUserCall(arg1 DrawList, arg2 DrawCmd) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawCmdUserCall(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func GetDrawIdxSize() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DrawIdxSize_get())
	return swig_r
}

type SwigcptrDrawVert uintptr

func (p SwigcptrDrawVert) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDrawVert) SwigIsDrawVert() {
}

func (arg1 SwigcptrDrawVert) SetPos(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawVert_pos_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawVert) GetPos() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DrawVert_pos_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawVert) SetUv(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawVert_uv_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawVert) GetUv() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DrawVert_uv_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawVert) SetCol(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawVert_col_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawVert) GetCol() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_DrawVert_col_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewDrawVert() (_swig_ret DrawVert) {
	var swig_r DrawVert
	swig_r = (DrawVert)(SwigcptrDrawVert(C._wrap_new_DrawVert()))
	return swig_r
}

func DeleteDrawVert(arg1 DrawVert) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DrawVert(C.uintptr_t(_swig_i_0))
}

type DrawVert interface {
	Swigcptr() uintptr
	SwigIsDrawVert()
	SetPos(arg2 Vec2)
	GetPos() (_swig_ret Vec2)
	SetUv(arg2 Vec2)
	GetUv() (_swig_ret Vec2)
	SetCol(arg2 uint)
	GetCol() (_swig_ret uint)
	Delete()
}

func GetDrawVertSize() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DrawVertSize_get())
	return swig_r
}

func DrawVertOffset(arg1 *int, arg2 *int, arg3 *int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_DrawVertOffset(C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
}

type SwigcptrDrawChannel uintptr

func (p SwigcptrDrawChannel) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDrawChannel) SwigIsDrawChannel() {
}

func (arg1 SwigcptrDrawChannel) SetCmdBuffer(arg2 ImVector_Sl_ImDrawCmd_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawChannel_CmdBuffer_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawChannel) GetCmdBuffer() (_swig_ret ImVector_Sl_ImDrawCmd_Sg_) {
	var swig_r ImVector_Sl_ImDrawCmd_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_ImDrawCmd_Sg_)(SwigcptrImVector_Sl_ImDrawCmd_Sg_(C._wrap_DrawChannel_CmdBuffer_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawChannel) SetIdxBuffer(arg2 ImVector_Sl_unsigned_SS_short_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawChannel_IdxBuffer_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawChannel) GetIdxBuffer() (_swig_ret ImVector_Sl_unsigned_SS_short_Sg_) {
	var swig_r ImVector_Sl_unsigned_SS_short_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_unsigned_SS_short_Sg_)(SwigcptrImVector_Sl_unsigned_SS_short_Sg_(C._wrap_DrawChannel_IdxBuffer_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDrawChannel() (_swig_ret DrawChannel) {
	var swig_r DrawChannel
	swig_r = (DrawChannel)(SwigcptrDrawChannel(C._wrap_new_DrawChannel()))
	return swig_r
}

func DeleteDrawChannel(arg1 DrawChannel) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DrawChannel(C.uintptr_t(_swig_i_0))
}

type DrawChannel interface {
	Swigcptr() uintptr
	SwigIsDrawChannel()
	SetCmdBuffer(arg2 ImVector_Sl_ImDrawCmd_Sg_)
	GetCmdBuffer() (_swig_ret ImVector_Sl_ImDrawCmd_Sg_)
	SetIdxBuffer(arg2 ImVector_Sl_unsigned_SS_short_Sg_)
	GetIdxBuffer() (_swig_ret ImVector_Sl_unsigned_SS_short_Sg_)
	Delete()
}

type ImDrawCornerFlags_ int

func _swig_getDrawCornerFlags_TopLeft() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_TopLeft())
	return swig_r
}

var DrawCornerFlags_TopLeft ImDrawCornerFlags_ = _swig_getDrawCornerFlags_TopLeft()

func _swig_getDrawCornerFlags_TopRight() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_TopRight())
	return swig_r
}

var DrawCornerFlags_TopRight ImDrawCornerFlags_ = _swig_getDrawCornerFlags_TopRight()

func _swig_getDrawCornerFlags_BotLeft() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_BotLeft())
	return swig_r
}

var DrawCornerFlags_BotLeft ImDrawCornerFlags_ = _swig_getDrawCornerFlags_BotLeft()

func _swig_getDrawCornerFlags_BotRight() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_BotRight())
	return swig_r
}

var DrawCornerFlags_BotRight ImDrawCornerFlags_ = _swig_getDrawCornerFlags_BotRight()

func _swig_getDrawCornerFlags_Top() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_Top())
	return swig_r
}

var DrawCornerFlags_Top ImDrawCornerFlags_ = _swig_getDrawCornerFlags_Top()

func _swig_getDrawCornerFlags_Bot() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_Bot())
	return swig_r
}

var DrawCornerFlags_Bot ImDrawCornerFlags_ = _swig_getDrawCornerFlags_Bot()

func _swig_getDrawCornerFlags_Left() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_Left())
	return swig_r
}

var DrawCornerFlags_Left ImDrawCornerFlags_ = _swig_getDrawCornerFlags_Left()

func _swig_getDrawCornerFlags_Right() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_Right())
	return swig_r
}

var DrawCornerFlags_Right ImDrawCornerFlags_ = _swig_getDrawCornerFlags_Right()

func _swig_getDrawCornerFlags_All() (_swig_ret ImDrawCornerFlags_) {
	var swig_r ImDrawCornerFlags_
	swig_r = (ImDrawCornerFlags_)(C._wrap_DrawCornerFlags_All())
	return swig_r
}

var DrawCornerFlags_All ImDrawCornerFlags_ = _swig_getDrawCornerFlags_All()

type ImDrawListFlags_ int

func _swig_getDrawListFlags_AntiAliasedLines() (_swig_ret ImDrawListFlags_) {
	var swig_r ImDrawListFlags_
	swig_r = (ImDrawListFlags_)(C._wrap_DrawListFlags_AntiAliasedLines())
	return swig_r
}

var DrawListFlags_AntiAliasedLines ImDrawListFlags_ = _swig_getDrawListFlags_AntiAliasedLines()

func _swig_getDrawListFlags_AntiAliasedFill() (_swig_ret ImDrawListFlags_) {
	var swig_r ImDrawListFlags_
	swig_r = (ImDrawListFlags_)(C._wrap_DrawListFlags_AntiAliasedFill())
	return swig_r
}

var DrawListFlags_AntiAliasedFill ImDrawListFlags_ = _swig_getDrawListFlags_AntiAliasedFill()

type SwigcptrDrawList uintptr

func (p SwigcptrDrawList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDrawList) SwigIsDrawList() {
}

func (arg1 SwigcptrDrawList) SetCmdBuffer(arg2 ImVector_Sl_ImDrawCmd_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList_CmdBuffer_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetCmdBuffer() (_swig_ret ImVector_Sl_ImDrawCmd_Sg_) {
	var swig_r ImVector_Sl_ImDrawCmd_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_ImDrawCmd_Sg_)(SwigcptrImVector_Sl_ImDrawCmd_Sg_(C._wrap_DrawList_CmdBuffer_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetIdxBuffer(arg2 ImVector_Sl_unsigned_SS_short_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList_IdxBuffer_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetIdxBuffer() (_swig_ret ImVector_Sl_unsigned_SS_short_Sg_) {
	var swig_r ImVector_Sl_unsigned_SS_short_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_unsigned_SS_short_Sg_)(SwigcptrImVector_Sl_unsigned_SS_short_Sg_(C._wrap_DrawList_IdxBuffer_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetVtxBuffer(arg2 ImVector_Sl_ImDrawVert_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList_VtxBuffer_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetVtxBuffer() (_swig_ret ImVector_Sl_ImDrawVert_Sg_) {
	var swig_r ImVector_Sl_ImDrawVert_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_ImDrawVert_Sg_)(SwigcptrImVector_Sl_ImDrawVert_Sg_(C._wrap_DrawList_VtxBuffer_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetFlags(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList_Flags_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetFlags() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DrawList_Flags_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_Data(arg2 ImDrawListSharedData) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList__Data_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_Data() (_swig_ret ImDrawListSharedData) {
	var swig_r ImDrawListSharedData
	_swig_i_0 := arg1
	swig_r = (ImDrawListSharedData)(SwigcptrImDrawListSharedData(C._wrap_DrawList__Data_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_OwnerName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList__OwnerName_set(C.uintptr_t(_swig_i_0), *(*C.swig_type_472)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDrawList) GetX_OwnerName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DrawList__OwnerName_get(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrDrawList) SetX_VtxCurrentIdx(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList__VtxCurrentIdx_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_VtxCurrentIdx() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_DrawList__VtxCurrentIdx_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_VtxWritePtr(arg2 DrawVert) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList__VtxWritePtr_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_VtxWritePtr() (_swig_ret DrawVert) {
	var swig_r DrawVert
	_swig_i_0 := arg1
	swig_r = (DrawVert)(SwigcptrDrawVert(C._wrap_DrawList__VtxWritePtr_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_IdxWritePtr(arg2 *uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList__IdxWritePtr_set(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_IdxWritePtr() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_DrawList__IdxWritePtr_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_ClipRectStack(arg2 ImVector_Sl_ImVec4_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList__ClipRectStack_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_ClipRectStack() (_swig_ret ImVector_Sl_ImVec4_Sg_) {
	var swig_r ImVector_Sl_ImVec4_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_ImVec4_Sg_)(SwigcptrImVector_Sl_ImVec4_Sg_(C._wrap_DrawList__ClipRectStack_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_TextureIdStack(arg2 ImVector_Sl_void_Sm__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList__TextureIdStack_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_TextureIdStack() (_swig_ret ImVector_Sl_void_Sm__Sg_) {
	var swig_r ImVector_Sl_void_Sm__Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_void_Sm__Sg_)(SwigcptrImVector_Sl_void_Sm__Sg_(C._wrap_DrawList__TextureIdStack_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_Path(arg2 ImVector_Sl_ImVec2_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList__Path_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_Path() (_swig_ret ImVector_Sl_ImVec2_Sg_) {
	var swig_r ImVector_Sl_ImVec2_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_ImVec2_Sg_)(SwigcptrImVector_Sl_ImVec2_Sg_(C._wrap_DrawList__Path_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_ChannelsCurrent(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList__ChannelsCurrent_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_ChannelsCurrent() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DrawList__ChannelsCurrent_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_ChannelsCount(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList__ChannelsCount_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_ChannelsCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DrawList__ChannelsCount_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) SetX_Channels(arg2 ImVector_Sl_ImDrawChannel_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList__Channels_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) GetX_Channels() (_swig_ret ImVector_Sl_ImDrawChannel_Sg_) {
	var swig_r ImVector_Sl_ImDrawChannel_Sg_
	_swig_i_0 := arg1
	swig_r = (ImVector_Sl_ImDrawChannel_Sg_)(SwigcptrImVector_Sl_ImDrawChannel_Sg_(C._wrap_DrawList__Channels_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDrawList(arg1 ImDrawListSharedData) (_swig_ret DrawList) {
	var swig_r DrawList
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (DrawList)(SwigcptrDrawList(C._wrap_new_DrawList(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteDrawList(arg1 DrawList) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DrawList(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawList) PushClipRect__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_DrawList_PushClipRect__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrDrawList) PushClipRect__SWIG_1(arg2 Vec2, arg3 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_DrawList_PushClipRect__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrDrawList) PushClipRect(a0 Vec2, a1 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.PushClipRect__SWIG_1(a0, a1)
		return
	}
	if argc == 1 {
		p.PushClipRect__SWIG_0(a0, a1, a[0].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) PushClipRectFullScreen() {
	_swig_i_0 := arg1
	C._wrap_DrawList_PushClipRectFullScreen(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawList) PopClipRect() {
	_swig_i_0 := arg1
	C._wrap_DrawList_PopClipRect(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawList) PushTextureID(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList_PushTextureID(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) PopTextureID() {
	_swig_i_0 := arg1
	C._wrap_DrawList_PopTextureID(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawList) GetClipRectMin() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DrawList_GetClipRectMin(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) GetClipRectMax() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DrawList_GetClipRectMax(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) AddLine__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_AddLine__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4))
}

func (arg1 SwigcptrDrawList) AddLine__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_DrawList_AddLine__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (p SwigcptrDrawList) AddLine(a0 Vec2, a1 Vec2, a2 uint, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddLine__SWIG_1(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.AddLine__SWIG_0(a0, a1, a2, a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddRect__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 float32, arg6 int, arg7 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_DrawList_AddRect__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4), C.swig_intgo(_swig_i_5), C.float(_swig_i_6))
}

func (arg1 SwigcptrDrawList) AddRect__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 float32, arg6 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_DrawList_AddRect__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (arg1 SwigcptrDrawList) AddRect__SWIG_2(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_AddRect__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4))
}

func (arg1 SwigcptrDrawList) AddRect__SWIG_3(arg2 Vec2, arg3 Vec2, arg4 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_DrawList_AddRect__SWIG_3(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (p SwigcptrDrawList) AddRect(a0 Vec2, a1 Vec2, a2 uint, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddRect__SWIG_3(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.AddRect__SWIG_2(a0, a1, a2, a[0].(float32))
		return
	}
	if argc == 2 {
		p.AddRect__SWIG_1(a0, a1, a2, a[0].(float32), a[1].(int))
		return
	}
	if argc == 3 {
		p.AddRect__SWIG_0(a0, a1, a2, a[0].(float32), a[1].(int), a[2].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddRectFilled__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 float32, arg6 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_DrawList_AddRectFilled__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (arg1 SwigcptrDrawList) AddRectFilled__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_AddRectFilled__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.float(_swig_i_4))
}

func (arg1 SwigcptrDrawList) AddRectFilled__SWIG_2(arg2 Vec2, arg3 Vec2, arg4 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_DrawList_AddRectFilled__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (p SwigcptrDrawList) AddRectFilled(a0 Vec2, a1 Vec2, a2 uint, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddRectFilled__SWIG_2(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.AddRectFilled__SWIG_1(a0, a1, a2, a[0].(float32))
		return
	}
	if argc == 2 {
		p.AddRectFilled__SWIG_0(a0, a1, a2, a[0].(float32), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddRectFilledMultiColor(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 uint, arg6 uint, arg7 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_DrawList_AddRectFilledMultiColor(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_intgo(_swig_i_6))
}

func (arg1 SwigcptrDrawList) AddQuad__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 uint, arg7 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_DrawList_AddQuad__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5), C.float(_swig_i_6))
}

func (arg1 SwigcptrDrawList) AddQuad__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	C._wrap_DrawList_AddQuad__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (p SwigcptrDrawList) AddQuad(a0 Vec2, a1 Vec2, a2 Vec2, a3 Vec2, a4 uint, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddQuad__SWIG_1(a0, a1, a2, a3, a4)
		return
	}
	if argc == 1 {
		p.AddQuad__SWIG_0(a0, a1, a2, a3, a4, a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddQuadFilled(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	C._wrap_DrawList_AddQuadFilled(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (arg1 SwigcptrDrawList) AddTriangle__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 uint, arg6 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_DrawList_AddTriangle__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.float(_swig_i_5))
}

func (arg1 SwigcptrDrawList) AddTriangle__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	C._wrap_DrawList_AddTriangle__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (p SwigcptrDrawList) AddTriangle(a0 Vec2, a1 Vec2, a2 Vec2, a3 uint, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddTriangle__SWIG_1(a0, a1, a2, a3)
		return
	}
	if argc == 1 {
		p.AddTriangle__SWIG_0(a0, a1, a2, a3, a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddTriangleFilled(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	C._wrap_DrawList_AddTriangleFilled(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrDrawList) AddCircle__SWIG_0(arg2 Vec2, arg3 float32, arg4 uint, arg5 int, arg6 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_DrawList_AddCircle__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.float(_swig_i_5))
}

func (arg1 SwigcptrDrawList) AddCircle__SWIG_1(arg2 Vec2, arg3 float32, arg4 uint, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_AddCircle__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrDrawList) AddCircle__SWIG_2(arg2 Vec2, arg3 float32, arg4 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DrawList_AddCircle__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (p SwigcptrDrawList) AddCircle(a0 Vec2, a1 float32, a2 uint, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddCircle__SWIG_2(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.AddCircle__SWIG_1(a0, a1, a2, a[0].(int))
		return
	}
	if argc == 2 {
		p.AddCircle__SWIG_0(a0, a1, a2, a[0].(int), a[1].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddCircleFilled__SWIG_0(arg2 Vec2, arg3 float32, arg4 uint, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_AddCircleFilled__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrDrawList) AddCircleFilled__SWIG_1(arg2 Vec2, arg3 float32, arg4 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DrawList_AddCircleFilled__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (p SwigcptrDrawList) AddCircleFilled(a0 Vec2, a1 float32, a2 uint, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddCircleFilled__SWIG_1(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.AddCircleFilled__SWIG_0(a0, a1, a2, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddText__SWIG_0(arg2 Vec2, arg3 uint, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_AddText__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_474)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_475)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrDrawList) AddText__SWIG_1(arg2 Vec2, arg3 uint, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DrawList_AddText__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_476)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrDrawList) AddText__SWIG_2(arg2 Font, arg3 float32, arg4 Vec2, arg5 uint, arg6 string, arg7 string, arg8 float32, arg9 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9.Swigcptr()
	C._wrap_DrawList_AddText__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_477)(unsafe.Pointer(&_swig_i_5)), *(*C.swig_type_478)(unsafe.Pointer(&_swig_i_6)), C.float(_swig_i_7), C.uintptr_t(_swig_i_8))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
}

func (arg1 SwigcptrDrawList) AddText__SWIG_3(arg2 Font, arg3 float32, arg4 Vec2, arg5 uint, arg6 string, arg7 string, arg8 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	C._wrap_DrawList_AddText__SWIG_3(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_479)(unsafe.Pointer(&_swig_i_5)), *(*C.swig_type_480)(unsafe.Pointer(&_swig_i_6)), C.float(_swig_i_7))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
}

func (arg1 SwigcptrDrawList) AddText__SWIG_4(arg2 Font, arg3 float32, arg4 Vec2, arg5 uint, arg6 string, arg7 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_DrawList_AddText__SWIG_4(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_481)(unsafe.Pointer(&_swig_i_5)), *(*C.swig_type_482)(unsafe.Pointer(&_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
}

func (arg1 SwigcptrDrawList) AddText__SWIG_5(arg2 Font, arg3 float32, arg4 Vec2, arg5 uint, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_DrawList_AddText__SWIG_5(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), *(*C.swig_type_483)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func (p SwigcptrDrawList) AddText(a0 interface{}, a1 interface{}, a2 interface{}, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddText__SWIG_1(a0.(Vec2), a1.(uint), a2.(string))
		return
	}
	if argc == 1 {
		p.AddText__SWIG_0(a0.(Vec2), a1.(uint), a2.(string), a[0].(string))
		return
	}
	if argc == 2 {
		p.AddText__SWIG_5(a0.(Font), a1.(float32), a2.(Vec2), a[0].(uint), a[1].(string))
		return
	}
	if argc == 3 {
		p.AddText__SWIG_4(a0.(Font), a1.(float32), a2.(Vec2), a[0].(uint), a[1].(string), a[2].(string))
		return
	}
	if argc == 4 {
		p.AddText__SWIG_3(a0.(Font), a1.(float32), a2.(Vec2), a[0].(uint), a[1].(string), a[2].(string), a[3].(float32))
		return
	}
	if argc == 5 {
		p.AddText__SWIG_2(a0.(Font), a1.(float32), a2.(Vec2), a[0].(uint), a[1].(string), a[2].(string), a[3].(float32), a[4].(Vec4))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddImage__SWIG_0(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7
	C._wrap_DrawList_AddImage__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.swig_intgo(_swig_i_6))
}

func (arg1 SwigcptrDrawList) AddImage__SWIG_1(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	C._wrap_DrawList_AddImage__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))
}

func (arg1 SwigcptrDrawList) AddImage__SWIG_2(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	C._wrap_DrawList_AddImage__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
}

func (arg1 SwigcptrDrawList) AddImage__SWIG_3(arg2 uintptr, arg3 Vec2, arg4 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_DrawList_AddImage__SWIG_3(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (p SwigcptrDrawList) AddImage(a0 uintptr, a1 Vec2, a2 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddImage__SWIG_3(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.AddImage__SWIG_2(a0, a1, a2, a[0].(Vec2))
		return
	}
	if argc == 2 {
		p.AddImage__SWIG_1(a0, a1, a2, a[0].(Vec2), a[1].(Vec2))
		return
	}
	if argc == 3 {
		p.AddImage__SWIG_0(a0, a1, a2, a[0].(Vec2), a[1].(Vec2), a[2].(uint))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddImageQuad__SWIG_0(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 Vec2, arg8 Vec2, arg9 Vec2, arg10 Vec2, arg11 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	_swig_i_7 := arg8.Swigcptr()
	_swig_i_8 := arg9.Swigcptr()
	_swig_i_9 := arg10.Swigcptr()
	_swig_i_10 := arg11
	C._wrap_DrawList_AddImageQuad__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.uintptr_t(_swig_i_7), C.uintptr_t(_swig_i_8), C.uintptr_t(_swig_i_9), C.swig_intgo(_swig_i_10))
}

func (arg1 SwigcptrDrawList) AddImageQuad__SWIG_1(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 Vec2, arg8 Vec2, arg9 Vec2, arg10 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	_swig_i_7 := arg8.Swigcptr()
	_swig_i_8 := arg9.Swigcptr()
	_swig_i_9 := arg10.Swigcptr()
	C._wrap_DrawList_AddImageQuad__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.uintptr_t(_swig_i_7), C.uintptr_t(_swig_i_8), C.uintptr_t(_swig_i_9))
}

func (arg1 SwigcptrDrawList) AddImageQuad__SWIG_2(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 Vec2, arg8 Vec2, arg9 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	_swig_i_7 := arg8.Swigcptr()
	_swig_i_8 := arg9.Swigcptr()
	C._wrap_DrawList_AddImageQuad__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.uintptr_t(_swig_i_7), C.uintptr_t(_swig_i_8))
}

func (arg1 SwigcptrDrawList) AddImageQuad__SWIG_3(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 Vec2, arg8 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	_swig_i_7 := arg8.Swigcptr()
	C._wrap_DrawList_AddImageQuad__SWIG_3(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6), C.uintptr_t(_swig_i_7))
}

func (arg1 SwigcptrDrawList) AddImageQuad__SWIG_4(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7.Swigcptr()
	C._wrap_DrawList_AddImageQuad__SWIG_4(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.uintptr_t(_swig_i_6))
}

func (arg1 SwigcptrDrawList) AddImageQuad__SWIG_5(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	C._wrap_DrawList_AddImageQuad__SWIG_5(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5))
}

func (p SwigcptrDrawList) AddImageQuad(a0 uintptr, a1 Vec2, a2 Vec2, a3 Vec2, a4 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddImageQuad__SWIG_5(a0, a1, a2, a3, a4)
		return
	}
	if argc == 1 {
		p.AddImageQuad__SWIG_4(a0, a1, a2, a3, a4, a[0].(Vec2))
		return
	}
	if argc == 2 {
		p.AddImageQuad__SWIG_3(a0, a1, a2, a3, a4, a[0].(Vec2), a[1].(Vec2))
		return
	}
	if argc == 3 {
		p.AddImageQuad__SWIG_2(a0, a1, a2, a3, a4, a[0].(Vec2), a[1].(Vec2), a[2].(Vec2))
		return
	}
	if argc == 4 {
		p.AddImageQuad__SWIG_1(a0, a1, a2, a3, a4, a[0].(Vec2), a[1].(Vec2), a[2].(Vec2), a[3].(Vec2))
		return
	}
	if argc == 5 {
		p.AddImageQuad__SWIG_0(a0, a1, a2, a3, a4, a[0].(Vec2), a[1].(Vec2), a[2].(Vec2), a[3].(Vec2), a[4].(uint))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddImageRounded__SWIG_0(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 uint, arg8 float32, arg9 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	C._wrap_DrawList_AddImageRounded__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.swig_intgo(_swig_i_6), C.float(_swig_i_7), C.swig_intgo(_swig_i_8))
}

func (arg1 SwigcptrDrawList) AddImageRounded__SWIG_1(arg2 uintptr, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2, arg7 uint, arg8 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	C._wrap_DrawList_AddImageRounded__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5), C.swig_intgo(_swig_i_6), C.float(_swig_i_7))
}

func (p SwigcptrDrawList) AddImageRounded(a0 uintptr, a1 Vec2, a2 Vec2, a3 Vec2, a4 Vec2, a5 uint, a6 float32, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddImageRounded__SWIG_1(a0, a1, a2, a3, a4, a5, a6)
		return
	}
	if argc == 1 {
		p.AddImageRounded__SWIG_0(a0, a1, a2, a3, a4, a5, a6, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) AddPolyline(arg2 Vec2, arg3 int, arg4 uint, arg5 bool, arg6 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_DrawList_AddPolyline(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C._Bool(_swig_i_4), C.float(_swig_i_5))
}

func (arg1 SwigcptrDrawList) AddConvexPolyFilled(arg2 Vec2, arg3 int, arg4 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DrawList_AddConvexPolyFilled(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))
}

func (arg1 SwigcptrDrawList) AddBezierCurve__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 uint, arg7 float32, arg8 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	C._wrap_DrawList_AddBezierCurve__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5), C.float(_swig_i_6), C.swig_intgo(_swig_i_7))
}

func (arg1 SwigcptrDrawList) AddBezierCurve__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 uint, arg7 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_DrawList_AddBezierCurve__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_intgo(_swig_i_5), C.float(_swig_i_6))
}

func (p SwigcptrDrawList) AddBezierCurve(a0 Vec2, a1 Vec2, a2 Vec2, a3 Vec2, a4 uint, a5 float32, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddBezierCurve__SWIG_1(a0, a1, a2, a3, a4, a5)
		return
	}
	if argc == 1 {
		p.AddBezierCurve__SWIG_0(a0, a1, a2, a3, a4, a5, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) PathClear() {
	_swig_i_0 := arg1
	C._wrap_DrawList_PathClear(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawList) PathLineTo(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList_PathLineTo(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) PathLineToMergeDuplicate(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawList_PathLineToMergeDuplicate(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawList) PathFillConvex(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList_PathFillConvex(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawList) PathStroke__SWIG_0(arg2 uint, arg3 bool, arg4 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DrawList_PathStroke__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2), C.float(_swig_i_3))
}

func (arg1 SwigcptrDrawList) PathStroke__SWIG_1(arg2 uint, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_DrawList_PathStroke__SWIG_1(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2))
}

func (p SwigcptrDrawList) PathStroke(a0 uint, a1 bool, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.PathStroke__SWIG_1(a0, a1)
		return
	}
	if argc == 1 {
		p.PathStroke__SWIG_0(a0, a1, a[0].(float32))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) PathArcTo__SWIG_0(arg2 Vec2, arg3 float32, arg4 float32, arg5 float32, arg6 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_DrawList_PathArcTo__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), C.swig_intgo(_swig_i_5))
}

func (arg1 SwigcptrDrawList) PathArcTo__SWIG_1(arg2 Vec2, arg3 float32, arg4 float32, arg5 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_PathArcTo__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4))
}

func (p SwigcptrDrawList) PathArcTo(a0 Vec2, a1 float32, a2 float32, a3 float32, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.PathArcTo__SWIG_1(a0, a1, a2, a3)
		return
	}
	if argc == 1 {
		p.PathArcTo__SWIG_0(a0, a1, a2, a3, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) PathArcToFast(arg2 Vec2, arg3 float32, arg4 int, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_PathArcToFast(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrDrawList) PathBezierCurveTo__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	C._wrap_DrawList_PathBezierCurveTo__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrDrawList) PathBezierCurveTo__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_DrawList_PathBezierCurveTo__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (p SwigcptrDrawList) PathBezierCurveTo(a0 Vec2, a1 Vec2, a2 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.PathBezierCurveTo__SWIG_1(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.PathBezierCurveTo__SWIG_0(a0, a1, a2, a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) PathRect__SWIG_0(arg2 Vec2, arg3 Vec2, arg4 float32, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_DrawList_PathRect__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.float(_swig_i_3), C.swig_intgo(_swig_i_4))
}

func (arg1 SwigcptrDrawList) PathRect__SWIG_1(arg2 Vec2, arg3 Vec2, arg4 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	C._wrap_DrawList_PathRect__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.float(_swig_i_3))
}

func (arg1 SwigcptrDrawList) PathRect__SWIG_2(arg2 Vec2, arg3 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_DrawList_PathRect__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrDrawList) PathRect(a0 Vec2, a1 Vec2, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.PathRect__SWIG_2(a0, a1)
		return
	}
	if argc == 1 {
		p.PathRect__SWIG_1(a0, a1, a[0].(float32))
		return
	}
	if argc == 2 {
		p.PathRect__SWIG_0(a0, a1, a[0].(float32), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDrawList) ChannelsSplit(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList_ChannelsSplit(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawList) ChannelsMerge() {
	_swig_i_0 := arg1
	C._wrap_DrawList_ChannelsMerge(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawList) ChannelsSetCurrent(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawList_ChannelsSetCurrent(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawList) AddCallback(arg2 _swig_fnptr, arg3 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_DrawList_AddCallback(C.uintptr_t(_swig_i_0), C.swig_type_484(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrDrawList) AddDrawCmd() {
	_swig_i_0 := arg1
	C._wrap_DrawList_AddDrawCmd(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawList) CloneOutput() (_swig_ret DrawList) {
	var swig_r DrawList
	_swig_i_0 := arg1
	swig_r = (DrawList)(SwigcptrDrawList(C._wrap_DrawList_CloneOutput(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawList) CommandsSize() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DrawList_CommandsSize(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) CommandsAt(arg2 int64) (_swig_ret DrawCmd) {
	var swig_r DrawCmd
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DrawCmd)(SwigcptrDrawCmd(C._wrap_DrawList_CommandsAt(C.uintptr_t(_swig_i_0), C.swig_type_486(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDrawList) VtxBufferSize() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DrawList_VtxBufferSize(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) VtxBufferAt(arg2 int64) (_swig_ret DrawVert) {
	var swig_r DrawVert
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DrawVert)(SwigcptrDrawVert(C._wrap_DrawList_VtxBufferAt(C.uintptr_t(_swig_i_0), C.swig_type_488(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDrawList) IdxBufferSize() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_DrawList_IdxBufferSize(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawList) IdxBufferAt(arg2 int64) (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (*uint16)(C._wrap_DrawList_IdxBufferAt(C.uintptr_t(_swig_i_0), C.swig_type_490(_swig_i_1)))
	return swig_r
}

type DrawList interface {
	Swigcptr() uintptr
	SwigIsDrawList()
	SetCmdBuffer(arg2 ImVector_Sl_ImDrawCmd_Sg_)
	GetCmdBuffer() (_swig_ret ImVector_Sl_ImDrawCmd_Sg_)
	SetIdxBuffer(arg2 ImVector_Sl_unsigned_SS_short_Sg_)
	GetIdxBuffer() (_swig_ret ImVector_Sl_unsigned_SS_short_Sg_)
	SetVtxBuffer(arg2 ImVector_Sl_ImDrawVert_Sg_)
	GetVtxBuffer() (_swig_ret ImVector_Sl_ImDrawVert_Sg_)
	SetFlags(arg2 int)
	GetFlags() (_swig_ret int)
	SetX_Data(arg2 ImDrawListSharedData)
	GetX_Data() (_swig_ret ImDrawListSharedData)
	SetX_OwnerName(arg2 string)
	GetX_OwnerName() (_swig_ret string)
	SetX_VtxCurrentIdx(arg2 uint)
	GetX_VtxCurrentIdx() (_swig_ret uint)
	SetX_VtxWritePtr(arg2 DrawVert)
	GetX_VtxWritePtr() (_swig_ret DrawVert)
	SetX_IdxWritePtr(arg2 *uint16)
	GetX_IdxWritePtr() (_swig_ret *uint16)
	SetX_ClipRectStack(arg2 ImVector_Sl_ImVec4_Sg_)
	GetX_ClipRectStack() (_swig_ret ImVector_Sl_ImVec4_Sg_)
	SetX_TextureIdStack(arg2 ImVector_Sl_void_Sm__Sg_)
	GetX_TextureIdStack() (_swig_ret ImVector_Sl_void_Sm__Sg_)
	SetX_Path(arg2 ImVector_Sl_ImVec2_Sg_)
	GetX_Path() (_swig_ret ImVector_Sl_ImVec2_Sg_)
	SetX_ChannelsCurrent(arg2 int)
	GetX_ChannelsCurrent() (_swig_ret int)
	SetX_ChannelsCount(arg2 int)
	GetX_ChannelsCount() (_swig_ret int)
	SetX_Channels(arg2 ImVector_Sl_ImDrawChannel_Sg_)
	GetX_Channels() (_swig_ret ImVector_Sl_ImDrawChannel_Sg_)
	PushClipRect(a0 Vec2, a1 Vec2, a ...interface{})
	PushClipRectFullScreen()
	PopClipRect()
	PushTextureID(arg2 uintptr)
	PopTextureID()
	GetClipRectMin() (_swig_ret Vec2)
	GetClipRectMax() (_swig_ret Vec2)
	AddLine(a0 Vec2, a1 Vec2, a2 uint, a ...interface{})
	AddRect(a0 Vec2, a1 Vec2, a2 uint, a ...interface{})
	AddRectFilled(a0 Vec2, a1 Vec2, a2 uint, a ...interface{})
	AddRectFilledMultiColor(arg2 Vec2, arg3 Vec2, arg4 uint, arg5 uint, arg6 uint, arg7 uint)
	AddQuad(a0 Vec2, a1 Vec2, a2 Vec2, a3 Vec2, a4 uint, a ...interface{})
	AddQuadFilled(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 uint)
	AddTriangle(a0 Vec2, a1 Vec2, a2 Vec2, a3 uint, a ...interface{})
	AddTriangleFilled(arg2 Vec2, arg3 Vec2, arg4 Vec2, arg5 uint)
	AddCircle(a0 Vec2, a1 float32, a2 uint, a ...interface{})
	AddCircleFilled(a0 Vec2, a1 float32, a2 uint, a ...interface{})
	AddText(a0 interface{}, a1 interface{}, a2 interface{}, a ...interface{})
	AddImage(a0 uintptr, a1 Vec2, a2 Vec2, a ...interface{})
	AddImageQuad(a0 uintptr, a1 Vec2, a2 Vec2, a3 Vec2, a4 Vec2, a ...interface{})
	AddImageRounded(a0 uintptr, a1 Vec2, a2 Vec2, a3 Vec2, a4 Vec2, a5 uint, a6 float32, a ...interface{})
	AddPolyline(arg2 Vec2, arg3 int, arg4 uint, arg5 bool, arg6 float32)
	AddConvexPolyFilled(arg2 Vec2, arg3 int, arg4 uint)
	AddBezierCurve(a0 Vec2, a1 Vec2, a2 Vec2, a3 Vec2, a4 uint, a5 float32, a ...interface{})
	PathClear()
	PathLineTo(arg2 Vec2)
	PathLineToMergeDuplicate(arg2 Vec2)
	PathFillConvex(arg2 uint)
	PathStroke(a0 uint, a1 bool, a ...interface{})
	PathArcTo(a0 Vec2, a1 float32, a2 float32, a3 float32, a ...interface{})
	PathArcToFast(arg2 Vec2, arg3 float32, arg4 int, arg5 int)
	PathBezierCurveTo(a0 Vec2, a1 Vec2, a2 Vec2, a ...interface{})
	PathRect(a0 Vec2, a1 Vec2, a ...interface{})
	ChannelsSplit(arg2 int)
	ChannelsMerge()
	ChannelsSetCurrent(arg2 int)
	AddCallback(arg2 _swig_fnptr, arg3 uintptr)
	AddDrawCmd()
	CloneOutput() (_swig_ret DrawList)
	CommandsSize() (_swig_ret int64)
	CommandsAt(arg2 int64) (_swig_ret DrawCmd)
	VtxBufferSize() (_swig_ret int64)
	VtxBufferAt(arg2 int64) (_swig_ret DrawVert)
	IdxBufferSize() (_swig_ret int64)
	IdxBufferAt(arg2 int64) (_swig_ret *uint16)
}

type SwigcptrDrawData uintptr

func (p SwigcptrDrawData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDrawData) SwigIsDrawData() {
}

func (arg1 SwigcptrDrawData) SetValid(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawData_Valid_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrDrawData) GetValid() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DrawData_Valid_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawData) SetCmdLists(arg2 []DrawList) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawData_CmdLists_set(C.uintptr_t(_swig_i_0), *(*C.swig_type_491)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDrawData) GetCmdLists() (_swig_ret []SwigcptrDrawList) {
	var swig_r []SwigcptrDrawList
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DrawData_CmdLists_get(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]SwigcptrDrawList)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrDrawData) SetCmdListsCount(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawData_CmdListsCount_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawData) GetCmdListsCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DrawData_CmdListsCount_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawData) SetTotalIdxCount(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawData_TotalIdxCount_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawData) GetTotalIdxCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DrawData_TotalIdxCount_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawData) SetTotalVtxCount(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DrawData_TotalVtxCount_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrDrawData) GetTotalVtxCount() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DrawData_TotalVtxCount_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDrawData) SetDisplayPos(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawData_DisplayPos_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawData) GetDisplayPos() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DrawData_DisplayPos_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDrawData) SetDisplaySize(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawData_DisplaySize_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDrawData) GetDisplaySize() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DrawData_DisplaySize_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDrawData() (_swig_ret DrawData) {
	var swig_r DrawData
	swig_r = (DrawData)(SwigcptrDrawData(C._wrap_new_DrawData()))
	return swig_r
}

func DeleteDrawData(arg1 DrawData) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DrawData(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawData) Clear() {
	_swig_i_0 := arg1
	C._wrap_DrawData_Clear(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawData) DeIndexAllBuffers() {
	_swig_i_0 := arg1
	C._wrap_DrawData_DeIndexAllBuffers(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDrawData) ScaleClipRects(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_DrawData_ScaleClipRects(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

type DrawData interface {
	Swigcptr() uintptr
	SwigIsDrawData()
	SetValid(arg2 bool)
	GetValid() (_swig_ret bool)
	SetCmdLists(arg2 []DrawList)
	GetCmdLists() (_swig_ret []SwigcptrDrawList)
	SetCmdListsCount(arg2 int)
	GetCmdListsCount() (_swig_ret int)
	SetTotalIdxCount(arg2 int)
	GetTotalIdxCount() (_swig_ret int)
	SetTotalVtxCount(arg2 int)
	GetTotalVtxCount() (_swig_ret int)
	SetDisplayPos(arg2 Vec2)
	GetDisplayPos() (_swig_ret Vec2)
	SetDisplaySize(arg2 Vec2)
	GetDisplaySize() (_swig_ret Vec2)
	Clear()
	DeIndexAllBuffers()
	ScaleClipRects(arg2 Vec2)
}

type SwigcptrFontConfig uintptr

func (p SwigcptrFontConfig) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFontConfig) SwigIsFontConfig() {
}

func (arg1 SwigcptrFontConfig) SetFontData(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_FontData_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetFontData() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_FontConfig_FontData_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetFontDataSize(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_FontDataSize_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetFontDataSize() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FontConfig_FontDataSize_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetFontDataOwnedByAtlas(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_FontDataOwnedByAtlas_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetFontDataOwnedByAtlas() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FontConfig_FontDataOwnedByAtlas_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetFontNo(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_FontNo_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetFontNo() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FontConfig_FontNo_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetSizePixels(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_SizePixels_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetSizePixels() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontConfig_SizePixels_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetOversampleH(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_OversampleH_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetOversampleH() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FontConfig_OversampleH_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetOversampleV(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_OversampleV_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetOversampleV() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FontConfig_OversampleV_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetPixelSnapH(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_PixelSnapH_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetPixelSnapH() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FontConfig_PixelSnapH_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetGlyphExtraSpacing(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_FontConfig_GlyphExtraSpacing_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetGlyphExtraSpacing() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_FontConfig_GlyphExtraSpacing_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetGlyphOffset(arg2 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_FontConfig_GlyphOffset_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetGlyphOffset() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_FontConfig_GlyphOffset_get(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetGlyphRanges(arg2 *uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_GlyphRanges_set(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetGlyphRanges() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontConfig_GlyphRanges_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetGlyphMinAdvanceX(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_GlyphMinAdvanceX_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetGlyphMinAdvanceX() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontConfig_GlyphMinAdvanceX_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetGlyphMaxAdvanceX(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_GlyphMaxAdvanceX_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetGlyphMaxAdvanceX() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontConfig_GlyphMaxAdvanceX_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetMergeMode(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_MergeMode_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetMergeMode() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FontConfig_MergeMode_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetRasterizerFlags(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_RasterizerFlags_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetRasterizerFlags() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_FontConfig_RasterizerFlags_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontConfig) SetRasterizerMultiply(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontConfig_RasterizerMultiply_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontConfig) GetRasterizerMultiply() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontConfig_RasterizerMultiply_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewFontConfig() (_swig_ret FontConfig) {
	var swig_r FontConfig
	swig_r = (FontConfig)(SwigcptrFontConfig(C._wrap_new_FontConfig()))
	return swig_r
}

func DeleteFontConfig(arg1 FontConfig) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FontConfig(C.uintptr_t(_swig_i_0))
}

type FontConfig interface {
	Swigcptr() uintptr
	SwigIsFontConfig()
	SetFontData(arg2 uintptr)
	GetFontData() (_swig_ret uintptr)
	SetFontDataSize(arg2 int)
	GetFontDataSize() (_swig_ret int)
	SetFontDataOwnedByAtlas(arg2 bool)
	GetFontDataOwnedByAtlas() (_swig_ret bool)
	SetFontNo(arg2 int)
	GetFontNo() (_swig_ret int)
	SetSizePixels(arg2 float32)
	GetSizePixels() (_swig_ret float32)
	SetOversampleH(arg2 int)
	GetOversampleH() (_swig_ret int)
	SetOversampleV(arg2 int)
	GetOversampleV() (_swig_ret int)
	SetPixelSnapH(arg2 bool)
	GetPixelSnapH() (_swig_ret bool)
	SetGlyphExtraSpacing(arg2 Vec2)
	GetGlyphExtraSpacing() (_swig_ret Vec2)
	SetGlyphOffset(arg2 Vec2)
	GetGlyphOffset() (_swig_ret Vec2)
	SetGlyphRanges(arg2 *uint16)
	GetGlyphRanges() (_swig_ret *uint16)
	SetGlyphMinAdvanceX(arg2 float32)
	GetGlyphMinAdvanceX() (_swig_ret float32)
	SetGlyphMaxAdvanceX(arg2 float32)
	GetGlyphMaxAdvanceX() (_swig_ret float32)
	SetMergeMode(arg2 bool)
	GetMergeMode() (_swig_ret bool)
	SetRasterizerFlags(arg2 uint)
	GetRasterizerFlags() (_swig_ret uint)
	SetRasterizerMultiply(arg2 float32)
	GetRasterizerMultiply() (_swig_ret float32)
	Delete()
}

type SwigcptrFontGlyph uintptr

func (p SwigcptrFontGlyph) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFontGlyph) SwigIsFontGlyph() {
}

func (arg1 SwigcptrFontGlyph) SetCodepoint(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_Codepoint_set(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetCodepoint() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_FontGlyph_Codepoint_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetAdvanceX(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_AdvanceX_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetAdvanceX() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_AdvanceX_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetX0(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_X0_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetX0() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_X0_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetY0(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_Y0_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetY0() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_Y0_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetX1(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_X1_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetX1() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_X1_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetY1(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_Y1_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetY1() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_Y1_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetU0(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_U0_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetU0() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_U0_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetV0(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_V0_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetV0() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_V0_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetU1(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_U1_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetU1() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_U1_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontGlyph) SetV1(arg2 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontGlyph_V1_set(C.uintptr_t(_swig_i_0), C.float(_swig_i_1))
}

func (arg1 SwigcptrFontGlyph) GetV1() (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	swig_r = (float32)(C._wrap_FontGlyph_V1_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewFontGlyph() (_swig_ret FontGlyph) {
	var swig_r FontGlyph
	swig_r = (FontGlyph)(SwigcptrFontGlyph(C._wrap_new_FontGlyph()))
	return swig_r
}

func DeleteFontGlyph(arg1 FontGlyph) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FontGlyph(C.uintptr_t(_swig_i_0))
}

type FontGlyph interface {
	Swigcptr() uintptr
	SwigIsFontGlyph()
	SetCodepoint(arg2 uint16)
	GetCodepoint() (_swig_ret uint16)
	SetAdvanceX(arg2 float32)
	GetAdvanceX() (_swig_ret float32)
	SetX0(arg2 float32)
	GetX0() (_swig_ret float32)
	SetY0(arg2 float32)
	GetY0() (_swig_ret float32)
	SetX1(arg2 float32)
	GetX1() (_swig_ret float32)
	SetY1(arg2 float32)
	GetY1() (_swig_ret float32)
	SetU0(arg2 float32)
	GetU0() (_swig_ret float32)
	SetV0(arg2 float32)
	GetV0() (_swig_ret float32)
	SetU1(arg2 float32)
	GetU1() (_swig_ret float32)
	SetV1(arg2 float32)
	GetV1() (_swig_ret float32)
	Delete()
}

type ImFontAtlasFlags_ int

func _swig_getFontAtlasFlags_None() (_swig_ret ImFontAtlasFlags_) {
	var swig_r ImFontAtlasFlags_
	swig_r = (ImFontAtlasFlags_)(C._wrap_FontAtlasFlags_None())
	return swig_r
}

var FontAtlasFlags_None ImFontAtlasFlags_ = _swig_getFontAtlasFlags_None()

func _swig_getFontAtlasFlags_NoPowerOfTwoHeight() (_swig_ret ImFontAtlasFlags_) {
	var swig_r ImFontAtlasFlags_
	swig_r = (ImFontAtlasFlags_)(C._wrap_FontAtlasFlags_NoPowerOfTwoHeight())
	return swig_r
}

var FontAtlasFlags_NoPowerOfTwoHeight ImFontAtlasFlags_ = _swig_getFontAtlasFlags_NoPowerOfTwoHeight()

func _swig_getFontAtlasFlags_NoMouseCursors() (_swig_ret ImFontAtlasFlags_) {
	var swig_r ImFontAtlasFlags_
	swig_r = (ImFontAtlasFlags_)(C._wrap_FontAtlasFlags_NoMouseCursors())
	return swig_r
}

var FontAtlasFlags_NoMouseCursors ImFontAtlasFlags_ = _swig_getFontAtlasFlags_NoMouseCursors()

type SwigcptrFontAtlas uintptr

func (p SwigcptrFontAtlas) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFontAtlas) SwigIsFontAtlas() {
}

func NewFontAtlas() (_swig_ret FontAtlas) {
	var swig_r FontAtlas
	swig_r = (FontAtlas)(SwigcptrFontAtlas(C._wrap_new_FontAtlas()))
	return swig_r
}

func DeleteFontAtlas(arg1 FontAtlas) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FontAtlas(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFontAtlas) AddFont(arg2 FontConfig) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFont(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontDefault__SWIG_0(arg2 FontConfig) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontDefault__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontDefault__SWIG_1() (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontDefault__SWIG_1(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrFontAtlas) AddFontDefault(a ...interface{}) Font {
	argc := len(a)
	if argc == 0 {
		return p.AddFontDefault__SWIG_1()
	}
	if argc == 1 {
		return p.AddFontDefault__SWIG_0(a[0].(FontConfig))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) AddFontFromFileTTF__SWIG_0(arg2 string, arg3 float32, arg4 FontConfig, arg5 *uint16) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromFileTTF__SWIG_0(C.uintptr_t(_swig_i_0), *(*C.swig_type_493)(unsafe.Pointer(&_swig_i_1)), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromFileTTF__SWIG_1(arg2 string, arg3 float32, arg4 FontConfig) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromFileTTF__SWIG_1(C.uintptr_t(_swig_i_0), *(*C.swig_type_494)(unsafe.Pointer(&_swig_i_1)), C.float(_swig_i_2), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromFileTTF__SWIG_2(arg2 string, arg3 float32) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromFileTTF__SWIG_2(C.uintptr_t(_swig_i_0), *(*C.swig_type_495)(unsafe.Pointer(&_swig_i_1)), C.float(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrFontAtlas) AddFontFromFileTTF(a0 string, a1 float32, a ...interface{}) Font {
	argc := len(a)
	if argc == 0 {
		return p.AddFontFromFileTTF__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return p.AddFontFromFileTTF__SWIG_1(a0, a1, a[0].(FontConfig))
	}
	if argc == 2 {
		return p.AddFontFromFileTTF__SWIG_0(a0, a1, a[0].(FontConfig), a[1].(*uint16))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryTTF__SWIG_0(arg2 uintptr, arg3 int, arg4 float32, arg5 FontConfig, arg6 *uint16) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryTTF__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_voidp(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryTTF__SWIG_1(arg2 uintptr, arg3 int, arg4 float32, arg5 FontConfig) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryTTF__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryTTF__SWIG_2(arg2 uintptr, arg3 int, arg4 float32) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryTTF__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.float(_swig_i_3))))
	return swig_r
}

func (p SwigcptrFontAtlas) AddFontFromMemoryTTF(a0 uintptr, a1 int, a2 float32, a ...interface{}) Font {
	argc := len(a)
	if argc == 0 {
		return p.AddFontFromMemoryTTF__SWIG_2(a0, a1, a2)
	}
	if argc == 1 {
		return p.AddFontFromMemoryTTF__SWIG_1(a0, a1, a2, a[0].(FontConfig))
	}
	if argc == 2 {
		return p.AddFontFromMemoryTTF__SWIG_0(a0, a1, a2, a[0].(FontConfig), a[1].(*uint16))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryCompressedTTF__SWIG_0(arg2 uintptr, arg3 int, arg4 float32, arg5 FontConfig, arg6 *uint16) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryCompressedTTF__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4), C.swig_voidp(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryCompressedTTF__SWIG_1(arg2 uintptr, arg3 int, arg4 float32, arg5 FontConfig) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5.Swigcptr()
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryCompressedTTF__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.float(_swig_i_3), C.uintptr_t(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryCompressedTTF__SWIG_2(arg2 uintptr, arg3 int, arg4 float32) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryCompressedTTF__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C.float(_swig_i_3))))
	return swig_r
}

func (p SwigcptrFontAtlas) AddFontFromMemoryCompressedTTF(a0 uintptr, a1 int, a2 float32, a ...interface{}) Font {
	argc := len(a)
	if argc == 0 {
		return p.AddFontFromMemoryCompressedTTF__SWIG_2(a0, a1, a2)
	}
	if argc == 1 {
		return p.AddFontFromMemoryCompressedTTF__SWIG_1(a0, a1, a2, a[0].(FontConfig))
	}
	if argc == 2 {
		return p.AddFontFromMemoryCompressedTTF__SWIG_0(a0, a1, a2, a[0].(FontConfig), a[1].(*uint16))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryCompressedBase85TTF__SWIG_0(arg2 string, arg3 float32, arg4 FontConfig, arg5 *uint16) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_0(C.uintptr_t(_swig_i_0), *(*C.swig_type_496)(unsafe.Pointer(&_swig_i_1)), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_voidp(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryCompressedBase85TTF__SWIG_1(arg2 string, arg3 float32, arg4 FontConfig) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_1(C.uintptr_t(_swig_i_0), *(*C.swig_type_497)(unsafe.Pointer(&_swig_i_1)), C.float(_swig_i_2), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddFontFromMemoryCompressedBase85TTF__SWIG_2(arg2 string, arg3 float32) (_swig_ret Font) {
	var swig_r Font
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Font)(SwigcptrFont(C._wrap_FontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_2(C.uintptr_t(_swig_i_0), *(*C.swig_type_498)(unsafe.Pointer(&_swig_i_1)), C.float(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrFontAtlas) AddFontFromMemoryCompressedBase85TTF(a0 string, a1 float32, a ...interface{}) Font {
	argc := len(a)
	if argc == 0 {
		return p.AddFontFromMemoryCompressedBase85TTF__SWIG_2(a0, a1)
	}
	if argc == 1 {
		return p.AddFontFromMemoryCompressedBase85TTF__SWIG_1(a0, a1, a[0].(FontConfig))
	}
	if argc == 2 {
		return p.AddFontFromMemoryCompressedBase85TTF__SWIG_0(a0, a1, a[0].(FontConfig), a[1].(*uint16))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) ClearInputData() {
	_swig_i_0 := arg1
	C._wrap_FontAtlas_ClearInputData(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFontAtlas) ClearTexData() {
	_swig_i_0 := arg1
	C._wrap_FontAtlas_ClearTexData(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFontAtlas) ClearFonts() {
	_swig_i_0 := arg1
	C._wrap_FontAtlas_ClearFonts(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFontAtlas) Clear() {
	_swig_i_0 := arg1
	C._wrap_FontAtlas_Clear(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFontAtlas) Build() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FontAtlas_Build(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) IsBuilt() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FontAtlas_IsBuilt(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) GetTexDataAsAlpha8__SWIG_0(arg2 **byte, arg3 *int, arg4 *int, arg5 *int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_FontAtlas_GetTexDataAsAlpha8__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4))
}

func (arg1 SwigcptrFontAtlas) GetTexDataAsAlpha8__SWIG_1(arg2 **byte, arg3 *int, arg4 *int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_FontAtlas_GetTexDataAsAlpha8__SWIG_1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3))
}

func (p SwigcptrFontAtlas) _GetTexDataAsAlpha8(a0 **byte, a1 *int, a2 *int, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.GetTexDataAsAlpha8__SWIG_1(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.GetTexDataAsAlpha8__SWIG_0(a0, a1, a2, a[0].(*int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) GetTexDataAsRGBA32__SWIG_0(arg2 **byte, arg3 *int, arg4 *int, arg5 *int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_FontAtlas_GetTexDataAsRGBA32__SWIG_0(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3), C.swig_voidp(_swig_i_4))
}

func (arg1 SwigcptrFontAtlas) GetTexDataAsRGBA32__SWIG_1(arg2 **byte, arg3 *int, arg4 *int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_FontAtlas_GetTexDataAsRGBA32__SWIG_1(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3))
}

func (p SwigcptrFontAtlas) _GetTexDataAsRGBA32(a0 **byte, a1 *int, a2 *int, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.GetTexDataAsRGBA32__SWIG_1(a0, a1, a2)
		return
	}
	if argc == 1 {
		p.GetTexDataAsRGBA32__SWIG_0(a0, a1, a2, a[0].(*int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) SetTexID_(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontAtlas_SetTexID_(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFontAtlas) GetGlyphRangesDefault() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontAtlas_GetGlyphRangesDefault(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) GetGlyphRangesKorean() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontAtlas_GetGlyphRangesKorean(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) GetGlyphRangesJapanese() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontAtlas_GetGlyphRangesJapanese(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) GetGlyphRangesChineseFull() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontAtlas_GetGlyphRangesChineseFull(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) GetGlyphRangesChineseSimplifiedCommon() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontAtlas_GetGlyphRangesChineseSimplifiedCommon(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) GetGlyphRangesCyrillic() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontAtlas_GetGlyphRangesCyrillic(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) GetGlyphRangesThai() (_swig_ret *uint16) {
	var swig_r *uint16
	_swig_i_0 := arg1
	swig_r = (*uint16)(C._wrap_FontAtlas_GetGlyphRangesThai(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddCustomRectRegular(arg2 uint, arg3 int, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_FontAtlas_AddCustomRectRegular(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddCustomRectFontGlyph__SWIG_0(arg2 Font, arg3 uint16, arg4 int, arg5 int, arg6 float32, arg7 Vec2) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7.Swigcptr()
	swig_r = (int)(C._wrap_FontAtlas_AddCustomRectFontGlyph__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.short(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.float(_swig_i_5), C.uintptr_t(_swig_i_6)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) AddCustomRectFontGlyph__SWIG_1(arg2 Font, arg3 uint16, arg4 int, arg5 int, arg6 float32) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int)(C._wrap_FontAtlas_AddCustomRectFontGlyph__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.short(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.float(_swig_i_5)))
	return swig_r
}

func (p SwigcptrFontAtlas) AddCustomRectFontGlyph(a0 Font, a1 uint16, a2 int, a3 int, a4 float32, a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.AddCustomRectFontGlyph__SWIG_1(a0, a1, a2, a3, a4)
	}
	if argc == 1 {
		return p.AddCustomRectFontGlyph__SWIG_0(a0, a1, a2, a3, a4, a[0].(Vec2))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFontAtlas) GetCustomRectByIndex(arg2 int) (_swig_ret ImFontAtlas_CustomRect) {
	var swig_r ImFontAtlas_CustomRect
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ImFontAtlas_CustomRect)(SwigcptrImFontAtlas_CustomRect(C._wrap_FontAtlas_GetCustomRectByIndex(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) CalcCustomRectUV(arg2 ImFontAtlas_CustomRect, arg3 Vec2, arg4 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	C._wrap_FontAtlas_CalcCustomRectUV(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrFontAtlas) GetMouseCursorTexData(arg2 int, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5.Swigcptr()
	_swig_i_5 := arg6.Swigcptr()
	swig_r = (bool)(C._wrap_FontAtlas_GetMouseCursorTexData(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4), C.uintptr_t(_swig_i_5)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) SetLocked(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontAtlas_Locked_set(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrFontAtlas) GetLocked() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FontAtlas_Locked_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) SetFlags(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontAtlas_Flags_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontAtlas) GetFlags() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FontAtlas_Flags_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) SetTexID(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontAtlas_TexID_set(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFontAtlas) GetTexID() (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_FontAtlas_TexID_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) SetTexDesiredWidth(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontAtlas_TexDesiredWidth_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontAtlas) GetTexDesiredWidth() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FontAtlas_TexDesiredWidth_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFontAtlas) SetTexGlyphPadding(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FontAtlas_TexGlyphPadding_set(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFontAtlas) GetTexGlyphPadding() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FontAtlas_TexGlyphPadding_get(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type FontAtlas interface {
	Swigcptr() uintptr
	SwigIsFontAtlas()
	AddFont(arg2 FontConfig) (_swig_ret Font)
	AddFontDefault(a ...interface{}) Font
	AddFontFromFileTTF(a0 string, a1 float32, a ...interface{}) Font
	AddFontFromMemoryTTF(a0 uintptr, a1 int, a2 float32, a ...interface{}) Font
	AddFontFromMemoryCompressedTTF(a0 uintptr, a1 int, a2 float32, a ...interface{}) Font
	AddFontFromMemoryCompressedBase85TTF(a0 string, a1 float32, a ...interface{}) Font
	ClearInputData()
	ClearTexData()
	ClearFonts()
	Clear()
	Build() (_swig_ret bool)
	IsBuilt() (_swig_ret bool)
	GetTexDataAsAlpha8() ([]uint8, int, int)
	GetTexDataAsRGBA32() ([]uint32, int, int)
	SetTexID_(arg2 uintptr)
	GetGlyphRangesDefault() (_swig_ret *uint16)
	GetGlyphRangesKorean() (_swig_ret *uint16)
	GetGlyphRangesJapanese() (_swig_ret *uint16)
	GetGlyphRangesChineseFull() (_swig_ret *uint16)
	GetGlyphRangesChineseSimplifiedCommon() (_swig_ret *uint16)
	GetGlyphRangesCyrillic() (_swig_ret *uint16)
	GetGlyphRangesThai() (_swig_ret *uint16)
	AddCustomRectRegular(arg2 uint, arg3 int, arg4 int) (_swig_ret int)
	AddCustomRectFontGlyph(a0 Font, a1 uint16, a2 int, a3 int, a4 float32, a ...interface{}) int
	GetCustomRectByIndex(arg2 int) (_swig_ret ImFontAtlas_CustomRect)
	CalcCustomRectUV(arg2 ImFontAtlas_CustomRect, arg3 Vec2, arg4 Vec2)
	GetMouseCursorTexData(arg2 int, arg3 Vec2, arg4 Vec2, arg5 Vec2, arg6 Vec2) (_swig_ret bool)
	SetLocked(arg2 bool)
	GetLocked() (_swig_ret bool)
	SetFlags(arg2 int)
	GetFlags() (_swig_ret int)
	SetTexID(arg2 uintptr)
	GetTexID() (_swig_ret uintptr)
	SetTexDesiredWidth(arg2 int)
	GetTexDesiredWidth() (_swig_ret int)
	SetTexGlyphPadding(arg2 int)
	GetTexGlyphPadding() (_swig_ret int)
}

type SwigcptrFont uintptr

func (p SwigcptrFont) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFont) SwigIsFont() {
}

func NewFont() (_swig_ret Font) {
	var swig_r Font
	swig_r = (Font)(SwigcptrFont(C._wrap_new_Font()))
	return swig_r
}

func DeleteFont(arg1 Font) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Font(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFont) ClearOutputData() {
	_swig_i_0 := arg1
	C._wrap_Font_ClearOutputData(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFont) BuildLookupTable() {
	_swig_i_0 := arg1
	C._wrap_Font_BuildLookupTable(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFont) FindGlyph(arg2 uint16) (_swig_ret FontGlyph) {
	var swig_r FontGlyph
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FontGlyph)(SwigcptrFontGlyph(C._wrap_Font_FindGlyph(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFont) FindGlyphNoFallback(arg2 uint16) (_swig_ret FontGlyph) {
	var swig_r FontGlyph
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FontGlyph)(SwigcptrFontGlyph(C._wrap_Font_FindGlyphNoFallback(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFont) SetFallbackChar_(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Font_SetFallbackChar_(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrFont) GetCharAdvance(arg2 uint16) (_swig_ret float32) {
	var swig_r float32
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float32)(C._wrap_Font_GetCharAdvance(C.uintptr_t(_swig_i_0), C.short(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrFont) IsLoaded() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Font_IsLoaded(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFont) GetDebugName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Font_GetDebugName(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFont) CalcTextSizeA__SWIG_0(arg2 float32, arg3 float32, arg4 float32, arg5 string, arg6 string, arg7 *string) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Font_CalcTextSizeA__SWIG_0(C.uintptr_t(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_500)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_501)(unsafe.Pointer(&_swig_i_5)), C.swig_voidp(_swig_i_6))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrFont) CalcTextSizeA__SWIG_1(arg2 float32, arg3 float32, arg4 float32, arg5 string, arg6 string) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Font_CalcTextSizeA__SWIG_1(C.uintptr_t(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_502)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_503)(unsafe.Pointer(&_swig_i_5)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	return swig_r
}

func (arg1 SwigcptrFont) CalcTextSizeA__SWIG_2(arg2 float32, arg3 float32, arg4 float32, arg5 string) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Font_CalcTextSizeA__SWIG_2(C.uintptr_t(_swig_i_0), C.float(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), *(*C.swig_type_504)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (p SwigcptrFont) CalcTextSizeA(a0 float32, a1 float32, a2 float32, a3 string, a ...interface{}) Vec2 {
	argc := len(a)
	if argc == 0 {
		return p.CalcTextSizeA__SWIG_2(a0, a1, a2, a3)
	}
	if argc == 1 {
		return p.CalcTextSizeA__SWIG_1(a0, a1, a2, a3, a[0].(string))
	}
	if argc == 2 {
		return p.CalcTextSizeA__SWIG_0(a0, a1, a2, a3, a[0].(string), a[1].(*string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFont) CalcWordWrapPositionA(arg2 float32, arg3 string, arg4 string, arg5 float32) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r_p := C._wrap_Font_CalcWordWrapPositionA(C.uintptr_t(_swig_i_0), C.float(_swig_i_1), *(*C.swig_type_506)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_507)(unsafe.Pointer(&_swig_i_3)), C.float(_swig_i_4))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFont) RenderChar(arg2 DrawList, arg3 float32, arg4 Vec2, arg5 uint, arg6 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Font_RenderChar(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.short(_swig_i_5))
}

func (arg1 SwigcptrFont) RenderText__SWIG_0(arg2 DrawList, arg3 float32, arg4 Vec2, arg5 uint, arg6 Vec4, arg7 string, arg8 string, arg9 float32, arg10 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	_swig_i_9 := arg10
	C._wrap_Font_RenderText__SWIG_0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_508)(unsafe.Pointer(&_swig_i_6)), *(*C.swig_type_509)(unsafe.Pointer(&_swig_i_7)), C.float(_swig_i_8), C._Bool(_swig_i_9))
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
}

func (arg1 SwigcptrFont) RenderText__SWIG_1(arg2 DrawList, arg3 float32, arg4 Vec2, arg5 uint, arg6 Vec4, arg7 string, arg8 string, arg9 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	C._wrap_Font_RenderText__SWIG_1(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_510)(unsafe.Pointer(&_swig_i_6)), *(*C.swig_type_511)(unsafe.Pointer(&_swig_i_7)), C.float(_swig_i_8))
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
}

func (arg1 SwigcptrFont) RenderText__SWIG_2(arg2 DrawList, arg3 float32, arg4 Vec2, arg5 uint, arg6 Vec4, arg7 string, arg8 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4.Swigcptr()
	_swig_i_4 := arg5
	_swig_i_5 := arg6.Swigcptr()
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	C._wrap_Font_RenderText__SWIG_2(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.float(_swig_i_2), C.uintptr_t(_swig_i_3), C.swig_intgo(_swig_i_4), C.uintptr_t(_swig_i_5), *(*C.swig_type_512)(unsafe.Pointer(&_swig_i_6)), *(*C.swig_type_513)(unsafe.Pointer(&_swig_i_7)))
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg8
	}
}

func (p SwigcptrFont) RenderText(a0 DrawList, a1 float32, a2 Vec2, a3 uint, a4 Vec4, a5 string, a6 string, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.RenderText__SWIG_2(a0, a1, a2, a3, a4, a5, a6)
		return
	}
	if argc == 1 {
		p.RenderText__SWIG_1(a0, a1, a2, a3, a4, a5, a6, a[0].(float32))
		return
	}
	if argc == 2 {
		p.RenderText__SWIG_0(a0, a1, a2, a3, a4, a5, a6, a[0].(float32), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFont) GrowIndex(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Font_GrowIndex(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrFont) AddGlyph(arg2 uint16, arg3 float32, arg4 float32, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32, arg10 float32, arg11 float32) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	_swig_i_9 := arg10
	_swig_i_10 := arg11
	C._wrap_Font_AddGlyph(C.uintptr_t(_swig_i_0), C.short(_swig_i_1), C.float(_swig_i_2), C.float(_swig_i_3), C.float(_swig_i_4), C.float(_swig_i_5), C.float(_swig_i_6), C.float(_swig_i_7), C.float(_swig_i_8), C.float(_swig_i_9), C.float(_swig_i_10))
}

func (arg1 SwigcptrFont) AddRemapChar__SWIG_0(arg2 uint16, arg3 uint16, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Font_AddRemapChar__SWIG_0(C.uintptr_t(_swig_i_0), C.short(_swig_i_1), C.short(_swig_i_2), C._Bool(_swig_i_3))
}

func (arg1 SwigcptrFont) AddRemapChar__SWIG_1(arg2 uint16, arg3 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Font_AddRemapChar__SWIG_1(C.uintptr_t(_swig_i_0), C.short(_swig_i_1), C.short(_swig_i_2))
}

func (p SwigcptrFont) AddRemapChar(a0 uint16, a1 uint16, a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.AddRemapChar__SWIG_1(a0, a1)
		return
	}
	if argc == 1 {
		p.AddRemapChar__SWIG_0(a0, a1, a[0].(bool))
		return
	}
	panic("No match for overloaded function call")
}

type Font interface {
	Swigcptr() uintptr
	SwigIsFont()
	ClearOutputData()
	BuildLookupTable()
	FindGlyph(arg2 uint16) (_swig_ret FontGlyph)
	FindGlyphNoFallback(arg2 uint16) (_swig_ret FontGlyph)
	SetFallbackChar_(arg2 uint16)
	GetCharAdvance(arg2 uint16) (_swig_ret float32)
	IsLoaded() (_swig_ret bool)
	GetDebugName() (_swig_ret string)
	CalcTextSizeA(a0 float32, a1 float32, a2 float32, a3 string, a ...interface{}) Vec2
	CalcWordWrapPositionA(arg2 float32, arg3 string, arg4 string, arg5 float32) (_swig_ret string)
	RenderChar(arg2 DrawList, arg3 float32, arg4 Vec2, arg5 uint, arg6 uint16)
	RenderText(a0 DrawList, a1 float32, a2 Vec2, a3 uint, a4 Vec4, a5 string, a6 string, a ...interface{})
	GrowIndex(arg2 int)
	AddGlyph(arg2 uint16, arg3 float32, arg4 float32, arg5 float32, arg6 float32, arg7 float32, arg8 float32, arg9 float32, arg10 float32, arg11 float32)
	AddRemapChar(a0 uint16, a1 uint16, a ...interface{})
}

type SwigcptrImGuiContext uintptr
type ImGuiContext interface {
	Swigcptr() uintptr
}

func (p SwigcptrImGuiContext) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImDrawListSharedData uintptr
type ImDrawListSharedData interface {
	Swigcptr() uintptr
}

func (p SwigcptrImDrawListSharedData) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImVector_Sl_ImVec2_Sg_ uintptr
type ImVector_Sl_ImVec2_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrImVector_Sl_ImVec2_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImFontAtlas_CustomRect uintptr
type ImFontAtlas_CustomRect interface {
	Swigcptr() uintptr
}

func (p SwigcptrImFontAtlas_CustomRect) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImVector_Sl_void_Sm__Sg_ uintptr
type ImVector_Sl_void_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrImVector_Sl_void_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImGuiStorage uintptr
type ImGuiStorage interface {
	Swigcptr() uintptr
}

func (p SwigcptrImGuiStorage) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImVector_Sl_ImDrawCmd_Sg_ uintptr
type ImVector_Sl_ImDrawCmd_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrImVector_Sl_ImDrawCmd_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImVector_Sl_unsigned_SS_short_Sg_ uintptr
type ImVector_Sl_unsigned_SS_short_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrImVector_Sl_unsigned_SS_short_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImVector_Sl_ImDrawVert_Sg_ uintptr
type ImVector_Sl_ImDrawVert_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrImVector_Sl_ImDrawVert_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImVector_Sl_ImVec4_Sg_ uintptr
type ImVector_Sl_ImVec4_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrImVector_Sl_ImVec4_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrImVector_Sl_ImDrawChannel_Sg_ uintptr
type ImVector_Sl_ImDrawChannel_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrImVector_Sl_ImDrawChannel_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

//////////////

var GoMalloc func(p unsafe.Pointer, s uint64)

//export cgoMemAlloc
func cgoMemAlloc(p unsafe.Pointer, s C.size_t) {
	GoMalloc(p, uint64(s))
}

var GoFree func(p unsafe.Pointer)

//export cgoMemFree
func cgoMemFree(p unsafe.Pointer) {
	GoFree(p)
}
